
timer_pwm.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000028dc  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000018  20000000  000028dc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000220  20000018  000028f4  00020018  2**2
                  ALLOC
  3 .stack        00000400  20000238  00002b14  00020018  2**0
                  ALLOC
  4 .ARM.attributes 0000002a  00000000  00000000  00020018  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020042  2**0
                  CONTENTS, READONLY
  6 .debug_info   00056f1a  00000000  00000000  0002009b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00005fc8  00000000  00000000  00076fb5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00006b72  00000000  00000000  0007cf7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000868  00000000  00000000  00083aef  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000db0  00000000  00000000  00084357  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001b45c  00000000  00000000  00085107  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00015471  00000000  00000000  000a0563  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0007d216  00000000  00000000  000b59d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  0000144c  00000000  00000000  00132bec  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	38 06 00 20 b1 21 00 00 af 21 00 00 af 21 00 00     8.. .!...!...!..
	...
      2c:	af 21 00 00 00 00 00 00 00 00 00 00 af 21 00 00     .!...........!..
      3c:	af 21 00 00 af 21 00 00 af 21 00 00 af 21 00 00     .!...!...!...!..
      4c:	af 21 00 00 39 05 00 00 af 21 00 00 af 21 00 00     .!..9....!...!..
      5c:	af 21 00 00 af 21 00 00 2d 15 00 00 3d 15 00 00     .!...!..-...=...
      6c:	4d 15 00 00 79 1e 00 00 05 1f 00 00 0f 1f 00 00     M...y...........
      7c:	af 21 00 00 af 21 00 00 af 21 00 00 af 21 00 00     .!...!...!...!..

0000008c <__do_global_dtors_aux>:
      8c:	b510      	push	{r4, lr}
      8e:	4c06      	ldr	r4, [pc, #24]	; (a8 <__do_global_dtors_aux+0x1c>)
      90:	7823      	ldrb	r3, [r4, #0]
      92:	2b00      	cmp	r3, #0
      94:	d107      	bne.n	a6 <__do_global_dtors_aux+0x1a>
      96:	4b05      	ldr	r3, [pc, #20]	; (ac <__do_global_dtors_aux+0x20>)
      98:	2b00      	cmp	r3, #0
      9a:	d002      	beq.n	a2 <__do_global_dtors_aux+0x16>
      9c:	4804      	ldr	r0, [pc, #16]	; (b0 <__do_global_dtors_aux+0x24>)
      9e:	e000      	b.n	a2 <__do_global_dtors_aux+0x16>
      a0:	bf00      	nop
      a2:	2301      	movs	r3, #1
      a4:	7023      	strb	r3, [r4, #0]
      a6:	bd10      	pop	{r4, pc}
      a8:	20000018 	.word	0x20000018
      ac:	00000000 	.word	0x00000000
      b0:	000028dc 	.word	0x000028dc

000000b4 <frame_dummy>:
      b4:	4b08      	ldr	r3, [pc, #32]	; (d8 <frame_dummy+0x24>)
      b6:	b510      	push	{r4, lr}
      b8:	2b00      	cmp	r3, #0
      ba:	d003      	beq.n	c4 <frame_dummy+0x10>
      bc:	4907      	ldr	r1, [pc, #28]	; (dc <frame_dummy+0x28>)
      be:	4808      	ldr	r0, [pc, #32]	; (e0 <frame_dummy+0x2c>)
      c0:	e000      	b.n	c4 <frame_dummy+0x10>
      c2:	bf00      	nop
      c4:	4807      	ldr	r0, [pc, #28]	; (e4 <frame_dummy+0x30>)
      c6:	6803      	ldr	r3, [r0, #0]
      c8:	2b00      	cmp	r3, #0
      ca:	d100      	bne.n	ce <frame_dummy+0x1a>
      cc:	bd10      	pop	{r4, pc}
      ce:	4b06      	ldr	r3, [pc, #24]	; (e8 <frame_dummy+0x34>)
      d0:	2b00      	cmp	r3, #0
      d2:	d0fb      	beq.n	cc <frame_dummy+0x18>
      d4:	4798      	blx	r3
      d6:	e7f9      	b.n	cc <frame_dummy+0x18>
      d8:	00000000 	.word	0x00000000
      dc:	2000001c 	.word	0x2000001c
      e0:	000028dc 	.word	0x000028dc
      e4:	000028dc 	.word	0x000028dc
      e8:	00000000 	.word	0x00000000

000000ec <adc_get_status.isra.1>:
      ec:	7e03      	ldrb	r3, [r0, #24]
      ee:	2001      	movs	r0, #1
      f0:	b2db      	uxtb	r3, r3
      f2:	4018      	ands	r0, r3
      f4:	2202      	movs	r2, #2
      f6:	0759      	lsls	r1, r3, #29
      f8:	d500      	bpl.n	fc <adc_get_status.isra.1+0x10>
      fa:	4310      	orrs	r0, r2
      fc:	4213      	tst	r3, r2
      fe:	d001      	beq.n	104 <adc_get_status.isra.1+0x18>
     100:	2304      	movs	r3, #4
     102:	4318      	orrs	r0, r3
     104:	4770      	bx	lr
	...

00000108 <configure_adc>:
     108:	b510      	push	{r4, lr}
     10a:	b08c      	sub	sp, #48	; 0x30
     10c:	4668      	mov	r0, sp
     10e:	f000 f865 	bl	1dc <adc_get_config_defaults>
     112:	4c0c      	ldr	r4, [pc, #48]	; (144 <configure_adc+0x3c>)
     114:	466a      	mov	r2, sp
     116:	490c      	ldr	r1, [pc, #48]	; (148 <configure_adc+0x40>)
     118:	0020      	movs	r0, r4
     11a:	f000 f881 	bl	220 <adc_init>
     11e:	6823      	ldr	r3, [r4, #0]
     120:	7e5a      	ldrb	r2, [r3, #25]
     122:	b252      	sxtb	r2, r2
     124:	2a00      	cmp	r2, #0
     126:	dbfb      	blt.n	120 <configure_adc+0x18>
     128:	220f      	movs	r2, #15
     12a:	759a      	strb	r2, [r3, #22]
     12c:	761a      	strb	r2, [r3, #24]
     12e:	7819      	ldrb	r1, [r3, #0]
     130:	3a0d      	subs	r2, #13
     132:	430a      	orrs	r2, r1
     134:	701a      	strb	r2, [r3, #0]
     136:	6822      	ldr	r2, [r4, #0]
     138:	7e53      	ldrb	r3, [r2, #25]
     13a:	b25b      	sxtb	r3, r3
     13c:	2b00      	cmp	r3, #0
     13e:	dbfb      	blt.n	138 <configure_adc+0x30>
     140:	b00c      	add	sp, #48	; 0x30
     142:	bd10      	pop	{r4, pc}
     144:	2000008c 	.word	0x2000008c
     148:	42002000 	.word	0x42002000

0000014c <sample_adc>:
     14c:	b570      	push	{r4, r5, r6, lr}
     14e:	4c13      	ldr	r4, [pc, #76]	; (19c <sample_adc+0x50>)
     150:	6823      	ldr	r3, [r4, #0]
     152:	7e5a      	ldrb	r2, [r3, #25]
     154:	b252      	sxtb	r2, r2
     156:	2a00      	cmp	r2, #0
     158:	dbfb      	blt.n	152 <sample_adc+0x6>
     15a:	2202      	movs	r2, #2
     15c:	7b19      	ldrb	r1, [r3, #12]
     15e:	430a      	orrs	r2, r1
     160:	731a      	strb	r2, [r3, #12]
     162:	7e5a      	ldrb	r2, [r3, #25]
     164:	b252      	sxtb	r2, r2
     166:	2a00      	cmp	r2, #0
     168:	dbfb      	blt.n	162 <sample_adc+0x16>
     16a:	2501      	movs	r5, #1
     16c:	6820      	ldr	r0, [r4, #0]
     16e:	f7ff ffbd 	bl	ec <adc_get_status.isra.1>
     172:	4228      	tst	r0, r5
     174:	d0fa      	beq.n	16c <sample_adc+0x20>
     176:	6820      	ldr	r0, [r4, #0]
     178:	7e43      	ldrb	r3, [r0, #25]
     17a:	b25b      	sxtb	r3, r3
     17c:	2b00      	cmp	r3, #0
     17e:	dbfb      	blt.n	178 <sample_adc+0x2c>
     180:	8b42      	ldrh	r2, [r0, #26]
     182:	4b07      	ldr	r3, [pc, #28]	; (1a0 <sample_adc+0x54>)
     184:	801a      	strh	r2, [r3, #0]
     186:	2301      	movs	r3, #1
     188:	7603      	strb	r3, [r0, #24]
     18a:	f7ff ffaf 	bl	ec <adc_get_status.isra.1>
     18e:	0743      	lsls	r3, r0, #29
     190:	d502      	bpl.n	198 <sample_adc+0x4c>
     192:	2202      	movs	r2, #2
     194:	6823      	ldr	r3, [r4, #0]
     196:	761a      	strb	r2, [r3, #24]
     198:	bd70      	pop	{r4, r5, r6, pc}
     19a:	46c0      	nop			; (mov r8, r8)
     19c:	2000008c 	.word	0x2000008c
     1a0:	20000088 	.word	0x20000088

000001a4 <_adc_configure_ain_pin>:
     1a4:	b530      	push	{r4, r5, lr}
     1a6:	b097      	sub	sp, #92	; 0x5c
     1a8:	ad02      	add	r5, sp, #8
     1aa:	0004      	movs	r4, r0
     1ac:	2250      	movs	r2, #80	; 0x50
     1ae:	490a      	ldr	r1, [pc, #40]	; (1d8 <_adc_configure_ain_pin+0x34>)
     1b0:	0028      	movs	r0, r5
     1b2:	f002 fb1d 	bl	27f0 <memcpy>
     1b6:	2c09      	cmp	r4, #9
     1b8:	d80b      	bhi.n	1d2 <_adc_configure_ain_pin+0x2e>
     1ba:	2300      	movs	r3, #0
     1bc:	00a4      	lsls	r4, r4, #2
     1be:	5960      	ldr	r0, [r4, r5]
     1c0:	a901      	add	r1, sp, #4
     1c2:	704b      	strb	r3, [r1, #1]
     1c4:	70cb      	strb	r3, [r1, #3]
     1c6:	708b      	strb	r3, [r1, #2]
     1c8:	b2c0      	uxtb	r0, r0
     1ca:	3301      	adds	r3, #1
     1cc:	700b      	strb	r3, [r1, #0]
     1ce:	f001 fc15 	bl	19fc <system_pinmux_pin_set_config>
     1d2:	b017      	add	sp, #92	; 0x5c
     1d4:	bd30      	pop	{r4, r5, pc}
     1d6:	46c0      	nop			; (mov r8, r8)
     1d8:	00002804 	.word	0x00002804

000001dc <adc_get_config_defaults>:
     1dc:	22c0      	movs	r2, #192	; 0xc0
     1de:	0152      	lsls	r2, r2, #5
     1e0:	81c2      	strh	r2, [r0, #14]
     1e2:	0002      	movs	r2, r0
     1e4:	2300      	movs	r3, #0
     1e6:	322a      	adds	r2, #42	; 0x2a
     1e8:	7003      	strb	r3, [r0, #0]
     1ea:	7043      	strb	r3, [r0, #1]
     1ec:	8043      	strh	r3, [r0, #2]
     1ee:	7103      	strb	r3, [r0, #4]
     1f0:	7603      	strb	r3, [r0, #24]
     1f2:	6203      	str	r3, [r0, #32]
     1f4:	61c3      	str	r3, [r0, #28]
     1f6:	6083      	str	r3, [r0, #8]
     1f8:	7303      	strb	r3, [r0, #12]
     1fa:	7403      	strb	r3, [r0, #16]
     1fc:	7443      	strb	r3, [r0, #17]
     1fe:	7483      	strb	r3, [r0, #18]
     200:	74c3      	strb	r3, [r0, #19]
     202:	7503      	strb	r3, [r0, #20]
     204:	7013      	strb	r3, [r2, #0]
     206:	1d42      	adds	r2, r0, #5
     208:	7543      	strb	r3, [r0, #21]
     20a:	7583      	strb	r3, [r0, #22]
     20c:	77d3      	strb	r3, [r2, #31]
     20e:	84c3      	strh	r3, [r0, #38]	; 0x26
     210:	8503      	strh	r3, [r0, #40]	; 0x28
     212:	75c3      	strb	r3, [r0, #23]
     214:	3226      	adds	r2, #38	; 0x26
     216:	302c      	adds	r0, #44	; 0x2c
     218:	7013      	strb	r3, [r2, #0]
     21a:	7003      	strb	r3, [r0, #0]
     21c:	4770      	bx	lr
	...

00000220 <adc_init>:
     220:	2380      	movs	r3, #128	; 0x80
     222:	b5f0      	push	{r4, r5, r6, r7, lr}
     224:	0014      	movs	r4, r2
     226:	4aab      	ldr	r2, [pc, #684]	; (4d4 <STACK_SIZE+0xd4>)
     228:	6001      	str	r1, [r0, #0]
     22a:	0007      	movs	r7, r0
     22c:	6a10      	ldr	r0, [r2, #32]
     22e:	005b      	lsls	r3, r3, #1
     230:	4303      	orrs	r3, r0
     232:	6213      	str	r3, [r2, #32]
     234:	780b      	ldrb	r3, [r1, #0]
     236:	b087      	sub	sp, #28
     238:	2005      	movs	r0, #5
     23a:	07db      	lsls	r3, r3, #31
     23c:	d500      	bpl.n	240 <adc_init+0x20>
     23e:	e0e5      	b.n	40c <STACK_SIZE+0xc>
     240:	780b      	ldrb	r3, [r1, #0]
     242:	3017      	adds	r0, #23
     244:	079b      	lsls	r3, r3, #30
     246:	d500      	bpl.n	24a <adc_init+0x2a>
     248:	e0e0      	b.n	40c <STACK_SIZE+0xc>
     24a:	7863      	ldrb	r3, [r4, #1]
     24c:	713b      	strb	r3, [r7, #4]
     24e:	2b00      	cmp	r3, #0
     250:	d104      	bne.n	25c <adc_init+0x3c>
     252:	4aa1      	ldr	r2, [pc, #644]	; (4d8 <STACK_SIZE+0xd8>)
     254:	3304      	adds	r3, #4
     256:	6c11      	ldr	r1, [r2, #64]	; 0x40
     258:	430b      	orrs	r3, r1
     25a:	6413      	str	r3, [r2, #64]	; 0x40
     25c:	7823      	ldrb	r3, [r4, #0]
     25e:	a905      	add	r1, sp, #20
     260:	2013      	movs	r0, #19
     262:	700b      	strb	r3, [r1, #0]
     264:	683d      	ldr	r5, [r7, #0]
     266:	f001 fb67 	bl	1938 <system_gclk_chan_set_config>
     26a:	2013      	movs	r0, #19
     26c:	f001 fb28 	bl	18c0 <system_gclk_chan_enable>
     270:	0023      	movs	r3, r4
     272:	332c      	adds	r3, #44	; 0x2c
     274:	9302      	str	r3, [sp, #8]
     276:	781b      	ldrb	r3, [r3, #0]
     278:	7b22      	ldrb	r2, [r4, #12]
     27a:	9201      	str	r2, [sp, #4]
     27c:	2b00      	cmp	r3, #0
     27e:	d033      	beq.n	2e8 <adc_init+0xc8>
     280:	0022      	movs	r2, r4
     282:	322b      	adds	r2, #43	; 0x2b
     284:	7816      	ldrb	r6, [r2, #0]
     286:	9a01      	ldr	r2, [sp, #4]
     288:	1996      	adds	r6, r2, r6
     28a:	b2f6      	uxtb	r6, r6
     28c:	199b      	adds	r3, r3, r6
     28e:	b2db      	uxtb	r3, r3
     290:	9303      	str	r3, [sp, #12]
     292:	9b01      	ldr	r3, [sp, #4]
     294:	1af0      	subs	r0, r6, r3
     296:	9b03      	ldr	r3, [sp, #12]
     298:	b2c0      	uxtb	r0, r0
     29a:	42b3      	cmp	r3, r6
     29c:	d81b      	bhi.n	2d6 <adc_init+0xb6>
     29e:	89e0      	ldrh	r0, [r4, #14]
     2a0:	f7ff ff80 	bl	1a4 <_adc_configure_ain_pin>
     2a4:	7d63      	ldrb	r3, [r4, #21]
     2a6:	009b      	lsls	r3, r3, #2
     2a8:	b2db      	uxtb	r3, r3
     2aa:	702b      	strb	r3, [r5, #0]
     2ac:	7da3      	ldrb	r3, [r4, #22]
     2ae:	7862      	ldrb	r2, [r4, #1]
     2b0:	01db      	lsls	r3, r3, #7
     2b2:	4313      	orrs	r3, r2
     2b4:	b2db      	uxtb	r3, r3
     2b6:	706b      	strb	r3, [r5, #1]
     2b8:	7923      	ldrb	r3, [r4, #4]
     2ba:	2b30      	cmp	r3, #48	; 0x30
     2bc:	d100      	bne.n	2c0 <adc_init+0xa0>
     2be:	e0b2      	b.n	426 <STACK_SIZE+0x26>
     2c0:	d816      	bhi.n	2f0 <adc_init+0xd0>
     2c2:	2b10      	cmp	r3, #16
     2c4:	d100      	bne.n	2c8 <adc_init+0xa8>
     2c6:	e0ab      	b.n	420 <STACK_SIZE+0x20>
     2c8:	2b20      	cmp	r3, #32
     2ca:	d100      	bne.n	2ce <adc_init+0xae>
     2cc:	e0ab      	b.n	426 <STACK_SIZE+0x26>
     2ce:	2b00      	cmp	r3, #0
     2d0:	d118      	bne.n	304 <adc_init+0xe4>
     2d2:	001a      	movs	r2, r3
     2d4:	e0a5      	b.n	422 <STACK_SIZE+0x22>
     2d6:	230f      	movs	r3, #15
     2d8:	4018      	ands	r0, r3
     2da:	7b23      	ldrb	r3, [r4, #12]
     2dc:	3601      	adds	r6, #1
     2de:	18c0      	adds	r0, r0, r3
     2e0:	f7ff ff60 	bl	1a4 <_adc_configure_ain_pin>
     2e4:	b2f6      	uxtb	r6, r6
     2e6:	e7d4      	b.n	292 <adc_init+0x72>
     2e8:	9801      	ldr	r0, [sp, #4]
     2ea:	f7ff ff5b 	bl	1a4 <_adc_configure_ain_pin>
     2ee:	e7d6      	b.n	29e <adc_init+0x7e>
     2f0:	2b32      	cmp	r3, #50	; 0x32
     2f2:	d009      	beq.n	308 <adc_init+0xe8>
     2f4:	d200      	bcs.n	2f8 <adc_init+0xd8>
     2f6:	e098      	b.n	42a <STACK_SIZE+0x2a>
     2f8:	2b33      	cmp	r3, #51	; 0x33
     2fa:	d100      	bne.n	2fe <adc_init+0xde>
     2fc:	e08c      	b.n	418 <STACK_SIZE+0x18>
     2fe:	2b34      	cmp	r3, #52	; 0x34
     300:	d100      	bne.n	304 <adc_init+0xe4>
     302:	e085      	b.n	410 <STACK_SIZE+0x10>
     304:	2017      	movs	r0, #23
     306:	e081      	b.n	40c <STACK_SIZE+0xc>
     308:	2204      	movs	r2, #4
     30a:	2310      	movs	r3, #16
     30c:	2102      	movs	r1, #2
     30e:	2070      	movs	r0, #112	; 0x70
     310:	0109      	lsls	r1, r1, #4
     312:	4001      	ands	r1, r0
     314:	430a      	orrs	r2, r1
     316:	70aa      	strb	r2, [r5, #2]
     318:	7de2      	ldrb	r2, [r4, #23]
     31a:	2a3f      	cmp	r2, #63	; 0x3f
     31c:	d8f2      	bhi.n	304 <adc_init+0xe4>
     31e:	70ea      	strb	r2, [r5, #3]
     320:	6839      	ldr	r1, [r7, #0]
     322:	7e4a      	ldrb	r2, [r1, #25]
     324:	b252      	sxtb	r2, r2
     326:	2a00      	cmp	r2, #0
     328:	dbfb      	blt.n	322 <adc_init+0x102>
     32a:	8861      	ldrh	r1, [r4, #2]
     32c:	7ce2      	ldrb	r2, [r4, #19]
     32e:	430a      	orrs	r2, r1
     330:	1d61      	adds	r1, r4, #5
     332:	7fc8      	ldrb	r0, [r1, #31]
     334:	00c0      	lsls	r0, r0, #3
     336:	4302      	orrs	r2, r0
     338:	7d20      	ldrb	r0, [r4, #20]
     33a:	0080      	lsls	r0, r0, #2
     33c:	4302      	orrs	r2, r0
     33e:	7ca0      	ldrb	r0, [r4, #18]
     340:	0040      	lsls	r0, r0, #1
     342:	4302      	orrs	r2, r0
     344:	431a      	orrs	r2, r3
     346:	80aa      	strh	r2, [r5, #4]
     348:	7e22      	ldrb	r2, [r4, #24]
     34a:	4694      	mov	ip, r2
     34c:	2a00      	cmp	r2, #0
     34e:	d007      	beq.n	360 <adc_init+0x140>
     350:	2b10      	cmp	r3, #16
     352:	d100      	bne.n	356 <adc_init+0x136>
     354:	e0af      	b.n	4b6 <STACK_SIZE+0xb6>
     356:	d900      	bls.n	35a <adc_init+0x13a>
     358:	e069      	b.n	42e <STACK_SIZE+0x2e>
     35a:	2b00      	cmp	r3, #0
     35c:	d100      	bne.n	360 <adc_init+0x140>
     35e:	e09b      	b.n	498 <STACK_SIZE+0x98>
     360:	6838      	ldr	r0, [r7, #0]
     362:	7e43      	ldrb	r3, [r0, #25]
     364:	b25b      	sxtb	r3, r3
     366:	2b00      	cmp	r3, #0
     368:	dbfb      	blt.n	362 <adc_init+0x142>
     36a:	4663      	mov	r3, ip
     36c:	722b      	strb	r3, [r5, #8]
     36e:	683a      	ldr	r2, [r7, #0]
     370:	7e53      	ldrb	r3, [r2, #25]
     372:	b25b      	sxtb	r3, r3
     374:	2b00      	cmp	r3, #0
     376:	dbfb      	blt.n	370 <adc_init+0x150>
     378:	8ba3      	ldrh	r3, [r4, #28]
     37a:	83ab      	strh	r3, [r5, #28]
     37c:	683a      	ldr	r2, [r7, #0]
     37e:	7e53      	ldrb	r3, [r2, #25]
     380:	b25b      	sxtb	r3, r3
     382:	2b00      	cmp	r3, #0
     384:	dbfb      	blt.n	37e <adc_init+0x15e>
     386:	8c23      	ldrh	r3, [r4, #32]
     388:	842b      	strh	r3, [r5, #32]
     38a:	9b02      	ldr	r3, [sp, #8]
     38c:	781a      	ldrb	r2, [r3, #0]
     38e:	2a00      	cmp	r2, #0
     390:	d003      	beq.n	39a <adc_init+0x17a>
     392:	3a01      	subs	r2, #1
     394:	b2d2      	uxtb	r2, r2
     396:	2a0f      	cmp	r2, #15
     398:	d8b4      	bhi.n	304 <adc_init+0xe4>
     39a:	0023      	movs	r3, r4
     39c:	332b      	adds	r3, #43	; 0x2b
     39e:	7818      	ldrb	r0, [r3, #0]
     3a0:	280f      	cmp	r0, #15
     3a2:	d8af      	bhi.n	304 <adc_init+0xe4>
     3a4:	683e      	ldr	r6, [r7, #0]
     3a6:	7e73      	ldrb	r3, [r6, #25]
     3a8:	b25b      	sxtb	r3, r3
     3aa:	2b00      	cmp	r3, #0
     3ac:	dbfb      	blt.n	3a6 <adc_init+0x186>
     3ae:	7b26      	ldrb	r6, [r4, #12]
     3b0:	89e3      	ldrh	r3, [r4, #14]
     3b2:	0500      	lsls	r0, r0, #20
     3b4:	4333      	orrs	r3, r6
     3b6:	68a6      	ldr	r6, [r4, #8]
     3b8:	0412      	lsls	r2, r2, #16
     3ba:	4333      	orrs	r3, r6
     3bc:	4303      	orrs	r3, r0
     3be:	4313      	orrs	r3, r2
     3c0:	612b      	str	r3, [r5, #16]
     3c2:	0023      	movs	r3, r4
     3c4:	332a      	adds	r3, #42	; 0x2a
     3c6:	781b      	ldrb	r3, [r3, #0]
     3c8:	752b      	strb	r3, [r5, #20]
     3ca:	230f      	movs	r3, #15
     3cc:	75ab      	strb	r3, [r5, #22]
     3ce:	7fcb      	ldrb	r3, [r1, #31]
     3d0:	2b00      	cmp	r3, #0
     3d2:	d00c      	beq.n	3ee <adc_init+0x1ce>
     3d4:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
     3d6:	4941      	ldr	r1, [pc, #260]	; (4dc <STACK_SIZE+0xdc>)
     3d8:	428b      	cmp	r3, r1
     3da:	d893      	bhi.n	304 <adc_init+0xe4>
     3dc:	84ab      	strh	r3, [r5, #36]	; 0x24
     3de:	2380      	movs	r3, #128	; 0x80
     3e0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
     3e2:	011b      	lsls	r3, r3, #4
     3e4:	18d3      	adds	r3, r2, r3
     3e6:	b29b      	uxth	r3, r3
     3e8:	428b      	cmp	r3, r1
     3ea:	d88b      	bhi.n	304 <adc_init+0xe4>
     3ec:	84ea      	strh	r2, [r5, #38]	; 0x26
     3ee:	22e0      	movs	r2, #224	; 0xe0
     3f0:	4b3b      	ldr	r3, [pc, #236]	; (4e0 <STACK_SIZE+0xe0>)
     3f2:	2000      	movs	r0, #0
     3f4:	6819      	ldr	r1, [r3, #0]
     3f6:	00d2      	lsls	r2, r2, #3
     3f8:	014b      	lsls	r3, r1, #5
     3fa:	0019      	movs	r1, r3
     3fc:	401a      	ands	r2, r3
     3fe:	4b39      	ldr	r3, [pc, #228]	; (4e4 <STACK_SIZE+0xe4>)
     400:	681b      	ldr	r3, [r3, #0]
     402:	0edb      	lsrs	r3, r3, #27
     404:	430b      	orrs	r3, r1
     406:	b2db      	uxtb	r3, r3
     408:	4313      	orrs	r3, r2
     40a:	852b      	strh	r3, [r5, #40]	; 0x28
     40c:	b007      	add	sp, #28
     40e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     410:	7c61      	ldrb	r1, [r4, #17]
     412:	7c22      	ldrb	r2, [r4, #16]
     414:	2310      	movs	r3, #16
     416:	e77a      	b.n	30e <adc_init+0xee>
     418:	2206      	movs	r2, #6
     41a:	2310      	movs	r3, #16
     41c:	2101      	movs	r1, #1
     41e:	e776      	b.n	30e <adc_init+0xee>
     420:	2208      	movs	r2, #8
     422:	2100      	movs	r1, #0
     424:	e773      	b.n	30e <adc_init+0xee>
     426:	2200      	movs	r2, #0
     428:	e7fb      	b.n	422 <STACK_SIZE+0x22>
     42a:	2202      	movs	r2, #2
     42c:	e7f5      	b.n	41a <STACK_SIZE+0x1a>
     42e:	2b20      	cmp	r3, #32
     430:	d018      	beq.n	464 <STACK_SIZE+0x64>
     432:	2b30      	cmp	r3, #48	; 0x30
     434:	d000      	beq.n	438 <STACK_SIZE+0x38>
     436:	e793      	b.n	360 <adc_init+0x140>
     438:	7ce3      	ldrb	r3, [r4, #19]
     43a:	69e0      	ldr	r0, [r4, #28]
     43c:	2b00      	cmp	r3, #0
     43e:	d009      	beq.n	454 <STACK_SIZE+0x54>
     440:	0003      	movs	r3, r0
     442:	3380      	adds	r3, #128	; 0x80
     444:	2bff      	cmp	r3, #255	; 0xff
     446:	d900      	bls.n	44a <STACK_SIZE+0x4a>
     448:	e75c      	b.n	304 <adc_init+0xe4>
     44a:	6a23      	ldr	r3, [r4, #32]
     44c:	3380      	adds	r3, #128	; 0x80
     44e:	2bff      	cmp	r3, #255	; 0xff
     450:	d900      	bls.n	454 <STACK_SIZE+0x54>
     452:	e757      	b.n	304 <adc_init+0xe4>
     454:	28ff      	cmp	r0, #255	; 0xff
     456:	dd00      	ble.n	45a <STACK_SIZE+0x5a>
     458:	e754      	b.n	304 <adc_init+0xe4>
     45a:	6a23      	ldr	r3, [r4, #32]
     45c:	2bff      	cmp	r3, #255	; 0xff
     45e:	dd00      	ble.n	462 <STACK_SIZE+0x62>
     460:	e750      	b.n	304 <adc_init+0xe4>
     462:	e77d      	b.n	360 <adc_init+0x140>
     464:	7ce0      	ldrb	r0, [r4, #19]
     466:	69e6      	ldr	r6, [r4, #28]
     468:	4b1f      	ldr	r3, [pc, #124]	; (4e8 <STACK_SIZE+0xe8>)
     46a:	2800      	cmp	r0, #0
     46c:	d00c      	beq.n	488 <STACK_SIZE+0x88>
     46e:	2080      	movs	r0, #128	; 0x80
     470:	0080      	lsls	r0, r0, #2
     472:	1830      	adds	r0, r6, r0
     474:	4298      	cmp	r0, r3
     476:	d900      	bls.n	47a <STACK_SIZE+0x7a>
     478:	e744      	b.n	304 <adc_init+0xe4>
     47a:	2280      	movs	r2, #128	; 0x80
     47c:	6a20      	ldr	r0, [r4, #32]
     47e:	0092      	lsls	r2, r2, #2
     480:	1810      	adds	r0, r2, r0
     482:	4298      	cmp	r0, r3
     484:	d900      	bls.n	488 <STACK_SIZE+0x88>
     486:	e73d      	b.n	304 <adc_init+0xe4>
     488:	429e      	cmp	r6, r3
     48a:	dd00      	ble.n	48e <STACK_SIZE+0x8e>
     48c:	e73a      	b.n	304 <adc_init+0xe4>
     48e:	6a22      	ldr	r2, [r4, #32]
     490:	429a      	cmp	r2, r3
     492:	dd00      	ble.n	496 <STACK_SIZE+0x96>
     494:	e736      	b.n	304 <adc_init+0xe4>
     496:	e763      	b.n	360 <adc_init+0x140>
     498:	7ce0      	ldrb	r0, [r4, #19]
     49a:	69e6      	ldr	r6, [r4, #28]
     49c:	4b0f      	ldr	r3, [pc, #60]	; (4dc <STACK_SIZE+0xdc>)
     49e:	2800      	cmp	r0, #0
     4a0:	d0f2      	beq.n	488 <STACK_SIZE+0x88>
     4a2:	2280      	movs	r2, #128	; 0x80
     4a4:	0112      	lsls	r2, r2, #4
     4a6:	18b0      	adds	r0, r6, r2
     4a8:	4298      	cmp	r0, r3
     4aa:	d900      	bls.n	4ae <STACK_SIZE+0xae>
     4ac:	e72a      	b.n	304 <adc_init+0xe4>
     4ae:	2080      	movs	r0, #128	; 0x80
     4b0:	6a22      	ldr	r2, [r4, #32]
     4b2:	0100      	lsls	r0, r0, #4
     4b4:	e7e4      	b.n	480 <STACK_SIZE+0x80>
     4b6:	7ce0      	ldrb	r0, [r4, #19]
     4b8:	69e6      	ldr	r6, [r4, #28]
     4ba:	4b0c      	ldr	r3, [pc, #48]	; (4ec <STACK_SIZE+0xec>)
     4bc:	2800      	cmp	r0, #0
     4be:	d0e3      	beq.n	488 <STACK_SIZE+0x88>
     4c0:	2280      	movs	r2, #128	; 0x80
     4c2:	0212      	lsls	r2, r2, #8
     4c4:	18b0      	adds	r0, r6, r2
     4c6:	4298      	cmp	r0, r3
     4c8:	d900      	bls.n	4cc <STACK_SIZE+0xcc>
     4ca:	e71b      	b.n	304 <adc_init+0xe4>
     4cc:	2080      	movs	r0, #128	; 0x80
     4ce:	6a22      	ldr	r2, [r4, #32]
     4d0:	0200      	lsls	r0, r0, #8
     4d2:	e7d5      	b.n	480 <STACK_SIZE+0x80>
     4d4:	40000400 	.word	0x40000400
     4d8:	40000800 	.word	0x40000800
     4dc:	00000fff 	.word	0x00000fff
     4e0:	00806024 	.word	0x00806024
     4e4:	00806020 	.word	0x00806020
     4e8:	000003ff 	.word	0x000003ff
     4ec:	0000ffff 	.word	0x0000ffff

000004f0 <extint_register_callback>:
     4f0:	b510      	push	{r4, lr}
     4f2:	2317      	movs	r3, #23
     4f4:	2a00      	cmp	r2, #0
     4f6:	d106      	bne.n	506 <extint_register_callback+0x16>
     4f8:	4b06      	ldr	r3, [pc, #24]	; (514 <extint_register_callback+0x24>)
     4fa:	0089      	lsls	r1, r1, #2
     4fc:	58cc      	ldr	r4, [r1, r3]
     4fe:	2c00      	cmp	r4, #0
     500:	d103      	bne.n	50a <extint_register_callback+0x1a>
     502:	50c8      	str	r0, [r1, r3]
     504:	0023      	movs	r3, r4
     506:	0018      	movs	r0, r3
     508:	bd10      	pop	{r4, pc}
     50a:	0013      	movs	r3, r2
     50c:	4284      	cmp	r4, r0
     50e:	d0fa      	beq.n	506 <extint_register_callback+0x16>
     510:	231d      	movs	r3, #29
     512:	e7f8      	b.n	506 <extint_register_callback+0x16>
     514:	20000098 	.word	0x20000098

00000518 <extint_chan_enable_callback>:
     518:	2317      	movs	r3, #23
     51a:	2900      	cmp	r1, #0
     51c:	d106      	bne.n	52c <extint_chan_enable_callback+0x14>
     51e:	281f      	cmp	r0, #31
     520:	d806      	bhi.n	530 <extint_chan_enable_callback+0x18>
     522:	3b16      	subs	r3, #22
     524:	4083      	lsls	r3, r0
     526:	4a03      	ldr	r2, [pc, #12]	; (534 <extint_chan_enable_callback+0x1c>)
     528:	60d3      	str	r3, [r2, #12]
     52a:	000b      	movs	r3, r1
     52c:	0018      	movs	r0, r3
     52e:	4770      	bx	lr
     530:	60c9      	str	r1, [r1, #12]
     532:	deff      	udf	#255	; 0xff
     534:	40001800 	.word	0x40001800

00000538 <EIC_Handler>:
     538:	2300      	movs	r3, #0
     53a:	b570      	push	{r4, r5, r6, lr}
     53c:	2501      	movs	r5, #1
     53e:	4c0b      	ldr	r4, [pc, #44]	; (56c <EIC_Handler+0x34>)
     540:	7023      	strb	r3, [r4, #0]
     542:	7823      	ldrb	r3, [r4, #0]
     544:	2b0f      	cmp	r3, #15
     546:	d900      	bls.n	54a <EIC_Handler+0x12>
     548:	bd70      	pop	{r4, r5, r6, pc}
     54a:	0029      	movs	r1, r5
     54c:	4099      	lsls	r1, r3
     54e:	4a08      	ldr	r2, [pc, #32]	; (570 <EIC_Handler+0x38>)
     550:	6910      	ldr	r0, [r2, #16]
     552:	4208      	tst	r0, r1
     554:	d006      	beq.n	564 <EIC_Handler+0x2c>
     556:	6111      	str	r1, [r2, #16]
     558:	4a06      	ldr	r2, [pc, #24]	; (574 <EIC_Handler+0x3c>)
     55a:	009b      	lsls	r3, r3, #2
     55c:	589b      	ldr	r3, [r3, r2]
     55e:	2b00      	cmp	r3, #0
     560:	d000      	beq.n	564 <EIC_Handler+0x2c>
     562:	4798      	blx	r3
     564:	7823      	ldrb	r3, [r4, #0]
     566:	3301      	adds	r3, #1
     568:	7023      	strb	r3, [r4, #0]
     56a:	e7ea      	b.n	542 <EIC_Handler+0xa>
     56c:	20000094 	.word	0x20000094
     570:	40001800 	.word	0x40001800
     574:	20000098 	.word	0x20000098

00000578 <extint_is_syncing>:
     578:	4b01      	ldr	r3, [pc, #4]	; (580 <extint_is_syncing+0x8>)
     57a:	7858      	ldrb	r0, [r3, #1]
     57c:	09c0      	lsrs	r0, r0, #7
     57e:	4770      	bx	lr
     580:	40001800 	.word	0x40001800

00000584 <_extint_enable>:
     584:	2302      	movs	r3, #2
     586:	b510      	push	{r4, lr}
     588:	4a04      	ldr	r2, [pc, #16]	; (59c <_extint_enable+0x18>)
     58a:	7811      	ldrb	r1, [r2, #0]
     58c:	430b      	orrs	r3, r1
     58e:	7013      	strb	r3, [r2, #0]
     590:	f7ff fff2 	bl	578 <extint_is_syncing>
     594:	2800      	cmp	r0, #0
     596:	d1fb      	bne.n	590 <_extint_enable+0xc>
     598:	bd10      	pop	{r4, pc}
     59a:	46c0      	nop			; (mov r8, r8)
     59c:	40001800 	.word	0x40001800

000005a0 <_system_extint_init>:
     5a0:	2340      	movs	r3, #64	; 0x40
     5a2:	b507      	push	{r0, r1, r2, lr}
     5a4:	4a10      	ldr	r2, [pc, #64]	; (5e8 <_system_extint_init+0x48>)
     5a6:	2005      	movs	r0, #5
     5a8:	6991      	ldr	r1, [r2, #24]
     5aa:	430b      	orrs	r3, r1
     5ac:	6193      	str	r3, [r2, #24]
     5ae:	2300      	movs	r3, #0
     5b0:	a901      	add	r1, sp, #4
     5b2:	700b      	strb	r3, [r1, #0]
     5b4:	f001 f9c0 	bl	1938 <system_gclk_chan_set_config>
     5b8:	2005      	movs	r0, #5
     5ba:	f001 f981 	bl	18c0 <system_gclk_chan_enable>
     5be:	2301      	movs	r3, #1
     5c0:	4a0a      	ldr	r2, [pc, #40]	; (5ec <_system_extint_init+0x4c>)
     5c2:	7811      	ldrb	r1, [r2, #0]
     5c4:	430b      	orrs	r3, r1
     5c6:	7013      	strb	r3, [r2, #0]
     5c8:	f7ff ffd6 	bl	578 <extint_is_syncing>
     5cc:	2800      	cmp	r0, #0
     5ce:	d1fb      	bne.n	5c8 <_system_extint_init+0x28>
     5d0:	0002      	movs	r2, r0
     5d2:	4b07      	ldr	r3, [pc, #28]	; (5f0 <_system_extint_init+0x50>)
     5d4:	501a      	str	r2, [r3, r0]
     5d6:	3004      	adds	r0, #4
     5d8:	2840      	cmp	r0, #64	; 0x40
     5da:	d1fb      	bne.n	5d4 <_system_extint_init+0x34>
     5dc:	2210      	movs	r2, #16
     5de:	4b05      	ldr	r3, [pc, #20]	; (5f4 <_system_extint_init+0x54>)
     5e0:	601a      	str	r2, [r3, #0]
     5e2:	f7ff ffcf 	bl	584 <_extint_enable>
     5e6:	bd07      	pop	{r0, r1, r2, pc}
     5e8:	40000400 	.word	0x40000400
     5ec:	40001800 	.word	0x40001800
     5f0:	20000098 	.word	0x20000098
     5f4:	e000e100 	.word	0xe000e100

000005f8 <extint_chan_get_config_defaults>:
     5f8:	2300      	movs	r3, #0
     5fa:	2201      	movs	r2, #1
     5fc:	6003      	str	r3, [r0, #0]
     5fe:	6043      	str	r3, [r0, #4]
     600:	7283      	strb	r3, [r0, #10]
     602:	3302      	adds	r3, #2
     604:	7202      	strb	r2, [r0, #8]
     606:	7242      	strb	r2, [r0, #9]
     608:	72c3      	strb	r3, [r0, #11]
     60a:	4770      	bx	lr

0000060c <extint_chan_set_config>:
     60c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     60e:	000c      	movs	r4, r1
     610:	2600      	movs	r6, #0
     612:	7923      	ldrb	r3, [r4, #4]
     614:	a901      	add	r1, sp, #4
     616:	704e      	strb	r6, [r1, #1]
     618:	70ce      	strb	r6, [r1, #3]
     61a:	700b      	strb	r3, [r1, #0]
     61c:	7a23      	ldrb	r3, [r4, #8]
     61e:	0005      	movs	r5, r0
     620:	7820      	ldrb	r0, [r4, #0]
     622:	708b      	strb	r3, [r1, #2]
     624:	f001 f9ea 	bl	19fc <system_pinmux_pin_set_config>
     628:	0033      	movs	r3, r6
     62a:	2d1f      	cmp	r5, #31
     62c:	d800      	bhi.n	630 <extint_chan_set_config+0x24>
     62e:	4b11      	ldr	r3, [pc, #68]	; (674 <extint_chan_set_config+0x68>)
     630:	2107      	movs	r1, #7
     632:	7aa2      	ldrb	r2, [r4, #10]
     634:	4029      	ands	r1, r5
     636:	0089      	lsls	r1, r1, #2
     638:	7ae6      	ldrb	r6, [r4, #11]
     63a:	2a00      	cmp	r2, #0
     63c:	d001      	beq.n	642 <extint_chan_set_config+0x36>
     63e:	2208      	movs	r2, #8
     640:	4316      	orrs	r6, r2
     642:	270f      	movs	r7, #15
     644:	408e      	lsls	r6, r1
     646:	408f      	lsls	r7, r1
     648:	0031      	movs	r1, r6
     64a:	08ea      	lsrs	r2, r5, #3
     64c:	0092      	lsls	r2, r2, #2
     64e:	189a      	adds	r2, r3, r2
     650:	6990      	ldr	r0, [r2, #24]
     652:	43b8      	bics	r0, r7
     654:	4301      	orrs	r1, r0
     656:	6191      	str	r1, [r2, #24]
     658:	7a61      	ldrb	r1, [r4, #9]
     65a:	2201      	movs	r2, #1
     65c:	2900      	cmp	r1, #0
     65e:	d004      	beq.n	66a <extint_chan_set_config+0x5e>
     660:	40aa      	lsls	r2, r5
     662:	6959      	ldr	r1, [r3, #20]
     664:	430a      	orrs	r2, r1
     666:	615a      	str	r2, [r3, #20]
     668:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
     66a:	40aa      	lsls	r2, r5
     66c:	6959      	ldr	r1, [r3, #20]
     66e:	4391      	bics	r1, r2
     670:	6159      	str	r1, [r3, #20]
     672:	e7f9      	b.n	668 <extint_chan_set_config+0x5c>
     674:	40001800 	.word	0x40001800

00000678 <is_button_one_pressed>:
		const uint8_t gpio_pin)
{
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	return (port_base->IN.reg & pin_mask);
     678:	4b14      	ldr	r3, [pc, #80]	; (6cc <is_button_one_pressed+0x54>)
     67a:	4915      	ldr	r1, [pc, #84]	; (6d0 <is_button_one_pressed+0x58>)
     67c:	6a18      	ldr	r0, [r3, #32]
     67e:	4a15      	ldr	r2, [pc, #84]	; (6d4 <is_button_one_pressed+0x5c>)
     680:	4b15      	ldr	r3, [pc, #84]	; (6d8 <is_button_one_pressed+0x60>)
/************************************************************************/
/* Button 1 function													*/
/************************************************************************/
bool is_button_one_pressed(void) {

  if (!port_pin_get_input_level(BUTTON_1)) {
     682:	0440      	lsls	r0, r0, #17
     684:	d418      	bmi.n	6b8 <is_button_one_pressed+0x40>
    BUTTON_ONE_PRESS_STATUS = true;
     686:	2001      	movs	r0, #1
     688:	7008      	strb	r0, [r1, #0]
    press_B1_delay_count--;
     68a:	6819      	ldr	r1, [r3, #0]
     68c:	3901      	subs	r1, #1
     68e:	6019      	str	r1, [r3, #0]
    long_press_B1_delay_count--;
     690:	6811      	ldr	r1, [r2, #0]
     692:	3901      	subs	r1, #1

  } else {
    BUTTON_ONE_PRESS_STATUS = false;
    press_B1_delay_count = DELAY_DEBOUNCE_CN;
    long_press_B1_delay_count = DELAY_PRESS_CN;
     694:	6011      	str	r1, [r2, #0]

  }

  // long press delay logic
  if (long_press_B1_delay_count <= 0) {
     696:	6811      	ldr	r1, [r2, #0]
     698:	2900      	cmp	r1, #0
     69a:	dc04      	bgt.n	6a6 <is_button_one_pressed+0x2e>
    LongPressB1Flag = true;
     69c:	2001      	movs	r0, #1
     69e:	490f      	ldr	r1, [pc, #60]	; (6dc <is_button_one_pressed+0x64>)
     6a0:	7008      	strb	r0, [r1, #0]
    long_press_B1_delay_count = 0;
     6a2:	2100      	movs	r1, #0
     6a4:	6011      	str	r1, [r2, #0]
     6a6:	2000      	movs	r0, #0
  }

  // debounce logic
  if (press_B1_delay_count <= 0) {
     6a8:	6819      	ldr	r1, [r3, #0]
     6aa:	4a0d      	ldr	r2, [pc, #52]	; (6e0 <is_button_one_pressed+0x68>)
     6ac:	4281      	cmp	r1, r0
     6ae:	dc0a      	bgt.n	6c6 <is_button_one_pressed+0x4e>
    BUTTON_ONE_RELEASE_STATUS = false;
     6b0:	7010      	strb	r0, [r2, #0]
    press_B1_delay_count = 0;
     6b2:	6018      	str	r0, [r3, #0]
    return true;
     6b4:	3001      	adds	r0, #1

  } else {
    BUTTON_ONE_RELEASE_STATUS = true;
    return false;
  }
}
     6b6:	4770      	bx	lr
    BUTTON_ONE_PRESS_STATUS = false;
     6b8:	2000      	movs	r0, #0
     6ba:	7008      	strb	r0, [r1, #0]
    press_B1_delay_count = DELAY_DEBOUNCE_CN;
     6bc:	210a      	movs	r1, #10
     6be:	6019      	str	r1, [r3, #0]
    long_press_B1_delay_count = DELAY_PRESS_CN;
     6c0:	3123      	adds	r1, #35	; 0x23
     6c2:	31ff      	adds	r1, #255	; 0xff
     6c4:	e7e6      	b.n	694 <is_button_one_pressed+0x1c>
    BUTTON_ONE_RELEASE_STATUS = true;
     6c6:	2301      	movs	r3, #1
     6c8:	7013      	strb	r3, [r2, #0]
    return false;
     6ca:	e7f4      	b.n	6b6 <is_button_one_pressed+0x3e>
     6cc:	41004400 	.word	0x41004400
     6d0:	20000034 	.word	0x20000034
     6d4:	20000000 	.word	0x20000000
     6d8:	20000004 	.word	0x20000004
     6dc:	20000036 	.word	0x20000036
     6e0:	20000035 	.word	0x20000035

000006e4 <set_pwm_color_channel>:
#include "pwm_led.h"

uint8_t pwm_led_toggle_count = 0;


void set_pwm_color_channel(uint8_t channel, bool enable) {
     6e4:	b510      	push	{r4, lr}
     6e6:	1e0a      	subs	r2, r1, #0
     6e8:	4c0a      	ldr	r4, [pc, #40]	; (714 <set_pwm_color_channel+0x30>)
	if (enable){
     6ea:	d000      	beq.n	6ee <set_pwm_color_channel+0xa>
		tcc_set_compare_value(&tcc_instance,
     6ec:	4a0a      	ldr	r2, [pc, #40]	; (718 <set_pwm_color_channel+0x34>)
		channel,
		INDICATION_LED_DUTY_CYCLE);
	}else{
		tcc_set_compare_value(&tcc_instance,
     6ee:	0001      	movs	r1, r0
     6f0:	0020      	movs	r0, r4
     6f2:	f001 fb9b 	bl	1e2c <tcc_set_compare_value>
	Tcc *const tcc_module = module_inst->hw;
	uint32_t last_cmd;

	/* Wait until last command is done */
	do {
		while (tcc_module->SYNCBUSY.reg & TCC_SYNCBUSY_CTRLB) {
     6f6:	2104      	movs	r1, #4
     6f8:	201f      	movs	r0, #31
     6fa:	6822      	ldr	r2, [r4, #0]
     6fc:	6893      	ldr	r3, [r2, #8]
     6fe:	420b      	tst	r3, r1
     700:	d1fc      	bne.n	6fc <set_pwm_color_channel+0x18>
			/* Wait for sync */
		}
		last_cmd = tcc_module->CTRLBSET.reg & TCC_CTRLBSET_CMD_Msk;
     702:	7953      	ldrb	r3, [r2, #5]
     704:	4383      	bics	r3, r0
		if (last_cmd == TCC_CTRLBSET_CMD_NONE) {
     706:	d002      	beq.n	70e <set_pwm_color_channel+0x2a>
			break;
		} else if (last_cmd == TCC_CTRLBSET_CMD_UPDATE) {
     708:	2b60      	cmp	r3, #96	; 0x60
     70a:	d1f7      	bne.n	6fc <set_pwm_color_channel+0x18>
		channel,
		ZERO_DUTY_CYCLE);
	}
	
	tcc_force_double_buffer_update(&tcc_instance);
}
     70c:	bd10      	pop	{r4, pc}
			return;
		}
	} while (1);

	/* Write command to execute */
	tcc_module->CTRLBSET.reg = TCC_CTRLBSET_CMD_UPDATE;
     70e:	2360      	movs	r3, #96	; 0x60
     710:	7153      	strb	r3, [r2, #5]
     712:	e7fb      	b.n	70c <set_pwm_color_channel+0x28>
     714:	200000d8 	.word	0x200000d8
     718:	00000fff 	.word	0x00000fff

0000071c <pwm_led_system_cleanup>:



void pwm_led_system_cleanup(void) {
	set_pwm_color_channel(RED_CHANNEL, false);
     71c:	2100      	movs	r1, #0
void pwm_led_system_cleanup(void) {
     71e:	b510      	push	{r4, lr}
	set_pwm_color_channel(RED_CHANNEL, false);
     720:	0008      	movs	r0, r1
     722:	f7ff ffdf 	bl	6e4 <set_pwm_color_channel>
	set_pwm_color_channel(BLUE_CHANNEL, false);
     726:	2100      	movs	r1, #0
     728:	2002      	movs	r0, #2
     72a:	f7ff ffdb 	bl	6e4 <set_pwm_color_channel>
	set_pwm_color_channel(GREEN_CHANNEL, false);
     72e:	2100      	movs	r1, #0
     730:	2001      	movs	r0, #1
     732:	f7ff ffd7 	bl	6e4 <set_pwm_color_channel>
	set_pwm_color_channel(WHITE_CHANNEL, false);
     736:	2100      	movs	r1, #0
     738:	2003      	movs	r0, #3
     73a:	f7ff ffd3 	bl	6e4 <set_pwm_color_channel>
}
     73e:	bd10      	pop	{r4, pc}

00000740 <set_pwm_color>:



void set_pwm_color(int color) {
     740:	b510      	push	{r4, lr}
	
	
	
	switch (color) {
     742:	2806      	cmp	r0, #6
     744:	d809      	bhi.n	75a <set_pwm_color+0x1a>
		case 5:  // Purple (Red + Blue)
		set_pwm_color_channel(RED_CHANNEL, true);
		set_pwm_color_channel(BLUE_CHANNEL, true);
		break;
		case 6:  // Cyan (Blue + Green)
		set_pwm_color_channel(BLUE_CHANNEL, true);
     746:	2101      	movs	r1, #1
	switch (color) {
     748:	f001 ff98 	bl	267c <__gnu_thumb1_case_uqi>
     74c:	08140e04 	.word	0x08140e04
     750:	100a      	.short	0x100a
     752:	16          	.byte	0x16
     753:	00          	.byte	0x00
		set_pwm_color_channel(RED_CHANNEL, true);
     754:	2000      	movs	r0, #0
		set_pwm_color_channel(GREEN_CHANNEL, true);
     756:	f7ff ffc5 	bl	6e4 <set_pwm_color_channel>
		break;
		default:
		break;
	}
}
     75a:	bd10      	pop	{r4, pc}
		set_pwm_color_channel(WHITE_CHANNEL, true);
     75c:	2003      	movs	r0, #3
     75e:	e7fa      	b.n	756 <set_pwm_color+0x16>
		set_pwm_color_channel(RED_CHANNEL, true);
     760:	2000      	movs	r0, #0
		set_pwm_color_channel(BLUE_CHANNEL, true);
     762:	f7ff ffbf 	bl	6e4 <set_pwm_color_channel>
		set_pwm_color_channel(GREEN_CHANNEL, true);
     766:	2101      	movs	r1, #1
     768:	0008      	movs	r0, r1
     76a:	e7f4      	b.n	756 <set_pwm_color+0x16>
		set_pwm_color_channel(RED_CHANNEL, true);
     76c:	2000      	movs	r0, #0
     76e:	f7ff ffb9 	bl	6e4 <set_pwm_color_channel>
		set_pwm_color_channel(BLUE_CHANNEL, true);
     772:	2101      	movs	r1, #1
     774:	2002      	movs	r0, #2
     776:	e7ee      	b.n	756 <set_pwm_color+0x16>
		set_pwm_color_channel(BLUE_CHANNEL, true);
     778:	2002      	movs	r0, #2
     77a:	e7f2      	b.n	762 <set_pwm_color+0x22>

0000077c <configure_pwm_tcc>:


void configure_pwm_tcc(void)
{
     77c:	b570      	push	{r4, r5, r6, lr}
	tcc_get_config_defaults(&config_tcc, CONF_PWM_MODULE);
     77e:	4c1c      	ldr	r4, [pc, #112]	; (7f0 <configure_pwm_tcc+0x74>)
     780:	491c      	ldr	r1, [pc, #112]	; (7f4 <configure_pwm_tcc+0x78>)
     782:	0020      	movs	r0, r4
     784:	f001 f984 	bl	1a90 <tcc_get_config_defaults>
	config_tcc.compare.match[BLUE_CHANNEL]								= ZERO_DUTY_CYCLE;
	config_tcc.compare.match[GREEN_CHANNEL]								= ZERO_DUTY_CYCLE;
	config_tcc.compare.match[WHITE_CHANNEL]								= ZERO_DUTY_CYCLE;

	config_tcc.pins.wave_out_pin[RED_CHANNEL]							= PIN_PA04F_TCC0_WO0;		// RED
	config_tcc.pins.wave_out_pin_mux[RED_CHANNEL]						= MUX_PA04F_TCC0_WO0;
     788:	2105      	movs	r1, #5
	config_tcc.counter.period											= CONF_DEFAULT_PERIOD;
     78a:	4b1b      	ldr	r3, [pc, #108]	; (7f8 <configure_pwm_tcc+0x7c>)
	config_tcc.pins.wave_out_pin_mux[RED_CHANNEL]						= MUX_PA04F_TCC0_WO0;
     78c:	67a1      	str	r1, [r4, #120]	; 0x78
	config_tcc.counter.period											= CONF_DEFAULT_PERIOD;
     78e:	6063      	str	r3, [r4, #4]
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
	
	config_tcc.pins.wave_out_pin[GREEN_CHANNEL]							= PIN_PA05F_TCC0_WO1;		// GREEN
     790:	65e1      	str	r1, [r4, #92]	; 0x5c
	config_tcc.compare.match[RED_CHANNEL]								= ZERO_DUTY_CYCLE;
     792:	2300      	movs	r3, #0
	config_tcc.pins.wave_out_pin_mux[GREEN_CHANNEL]						= MUX_PA05F_TCC0_WO1;
     794:	67e1      	str	r1, [r4, #124]	; 0x7c
	config_tcc.pins.enable_wave_out_pin[GREEN_CHANNEL]					= true;
     796:	0021      	movs	r1, r4
	config_tcc.compare.match[RED_CHANNEL]								= ZERO_DUTY_CYCLE;
     798:	61e3      	str	r3, [r4, #28]
	config_tcc.compare.match[BLUE_CHANNEL]								= ZERO_DUTY_CYCLE;
     79a:	6263      	str	r3, [r4, #36]	; 0x24
	config_tcc.compare.match[GREEN_CHANNEL]								= ZERO_DUTY_CYCLE;
     79c:	6223      	str	r3, [r4, #32]
	config_tcc.compare.match[WHITE_CHANNEL]								= ZERO_DUTY_CYCLE;
     79e:	62a3      	str	r3, [r4, #40]	; 0x28
	config_tcc.pins.enable_wave_out_pin[GREEN_CHANNEL]					= true;
     7a0:	3199      	adds	r1, #153	; 0x99
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
     7a2:	3301      	adds	r3, #1
	config_tcc.pins.wave_out_pin[RED_CHANNEL]							= PIN_PA04F_TCC0_WO0;		// RED
     7a4:	2204      	movs	r2, #4
	config_tcc.pins.enable_wave_out_pin[GREEN_CHANNEL]					= true;
     7a6:	700b      	strb	r3, [r1, #0]

	config_tcc.pins.wave_out_pin[BLUE_CHANNEL]							= PIN_PA08E_TCC0_WO2;		// BLUE
     7a8:	2108      	movs	r1, #8
     7aa:	6621      	str	r1, [r4, #96]	; 0x60
	config_tcc.pins.wave_out_pin_mux[BLUE_CHANNEL]						= MUX_PA08E_TCC0_WO2;
     7ac:	18a1      	adds	r1, r4, r2
     7ae:	67ca      	str	r2, [r1, #124]	; 0x7c
	config_tcc.pins.enable_wave_out_pin[BLUE_CHANNEL]					= true;
     7b0:	0021      	movs	r1, r4
     7b2:	319a      	adds	r1, #154	; 0x9a
     7b4:	700b      	strb	r3, [r1, #0]

	config_tcc.pins.wave_out_pin[WHITE_CHANNEL]							= PIN_PA09E_TCC0_WO3;		// WHITE
     7b6:	2109      	movs	r1, #9
     7b8:	6661      	str	r1, [r4, #100]	; 0x64
	config_tcc.pins.wave_out_pin_mux[WHITE_CHANNEL]						= MUX_PA09E_TCC0_WO3;
     7ba:	0021      	movs	r1, r4
     7bc:	3108      	adds	r1, #8
     7be:	67ca      	str	r2, [r1, #124]	; 0x7c
	config_tcc.pins.wave_out_pin[RED_CHANNEL]							= PIN_PA04F_TCC0_WO0;		// RED
     7c0:	65a2      	str	r2, [r4, #88]	; 0x58
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
     7c2:	0020      	movs	r0, r4
	config_tcc.pins.enable_wave_out_pin[WHITE_CHANNEL]				    = true;
     7c4:	0022      	movs	r2, r4
	config_tcc.compare.wave_generation = TCC_WAVE_GENERATION_SINGLE_SLOPE_PWM;
     7c6:	2502      	movs	r5, #2
	
	tcc_init(&tcc_instance, CONF_PWM_MODULE, &config_tcc);
     7c8:	4e0c      	ldr	r6, [pc, #48]	; (7fc <configure_pwm_tcc+0x80>)
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
     7ca:	3098      	adds	r0, #152	; 0x98
	config_tcc.pins.enable_wave_out_pin[WHITE_CHANNEL]				    = true;
     7cc:	329b      	adds	r2, #155	; 0x9b
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
     7ce:	7003      	strb	r3, [r0, #0]
	config_tcc.pins.enable_wave_out_pin[WHITE_CHANNEL]				    = true;
     7d0:	7013      	strb	r3, [r2, #0]
	tcc_init(&tcc_instance, CONF_PWM_MODULE, &config_tcc);
     7d2:	4908      	ldr	r1, [pc, #32]	; (7f4 <configure_pwm_tcc+0x78>)
     7d4:	0022      	movs	r2, r4
     7d6:	0030      	movs	r0, r6
	config_tcc.compare.wave_generation = TCC_WAVE_GENERATION_SINGLE_SLOPE_PWM;
     7d8:	7625      	strb	r5, [r4, #24]
	tcc_init(&tcc_instance, CONF_PWM_MODULE, &config_tcc);
     7da:	f001 f9cb 	bl	1b74 <tcc_init>
     7de:	6833      	ldr	r3, [r6, #0]
	while (tcc_module->SYNCBUSY.reg & TCC_SYNCBUSY_ENABLE) {
     7e0:	689a      	ldr	r2, [r3, #8]
     7e2:	422a      	tst	r2, r5
     7e4:	d1fc      	bne.n	7e0 <configure_pwm_tcc+0x64>
	tcc_module->CTRLA.reg |= TCC_CTRLA_ENABLE;
     7e6:	681a      	ldr	r2, [r3, #0]
     7e8:	4315      	orrs	r5, r2
     7ea:	601d      	str	r5, [r3, #0]
	tcc_enable(&tcc_instance);
	
}
     7ec:	bd70      	pop	{r4, r5, r6, pc}
     7ee:	46c0      	nop			; (mov r8, r8)
     7f0:	20000134 	.word	0x20000134
     7f4:	42001400 	.word	0x42001400
     7f8:	00000fff 	.word	0x00000fff
     7fc:	200000d8 	.word	0x200000d8

00000800 <cycle_pwm_led>:
	//}
//}

// New update; only red color

void cycle_pwm_led(void) {
     800:	b510      	push	{r4, lr}
	switch (pwm_led_toggle_count) {
     802:	4b08      	ldr	r3, [pc, #32]	; (824 <cycle_pwm_led+0x24>)
     804:	781a      	ldrb	r2, [r3, #0]
     806:	2a01      	cmp	r2, #1
     808:	d002      	beq.n	810 <cycle_pwm_led+0x10>
     80a:	2a06      	cmp	r2, #6
     80c:	d004      	beq.n	818 <cycle_pwm_led+0x18>
		case 6:
		pwm_led_toggle_count = 0;
		pwm_led_system_cleanup();							// Reset to 1 for red
		break;
	}
     80e:	bd10      	pop	{r4, pc}
		SET_RED;
     810:	2000      	movs	r0, #0
     812:	f7ff ff95 	bl	740 <set_pwm_color>
		break;
     816:	e7fa      	b.n	80e <cycle_pwm_led+0xe>
		pwm_led_toggle_count = 0;
     818:	2200      	movs	r2, #0
     81a:	701a      	strb	r2, [r3, #0]
		pwm_led_system_cleanup();							// Reset to 1 for red
     81c:	f7ff ff7e 	bl	71c <pwm_led_system_cleanup>
     820:	e7f5      	b.n	80e <cycle_pwm_led+0xe>
     822:	46c0      	nop			; (mov r8, r8)
     824:	20000037 	.word	0x20000037

00000828 <configure_pwm_generator>:
	struct tc_config config_tc;
	tc_get_config_defaults (&config_tc);

	config_tc.clock_source = TC_CLOCK_SOURCE;
	config_tc.counter_size = TC_COUNTER_SIZE;
	config_tc.clock_prescaler = TC_CLOCK_PRESCALER;
     828:	21a0      	movs	r1, #160	; 0xa0
{
     82a:	b500      	push	{lr}
     82c:	b08f      	sub	sp, #60	; 0x3c
{
	/* Sanity check arguments */
	Assert(config);

	/* Write default config to config struct */
	config->clock_source               = GCLK_GENERATOR_0;
     82e:	aa01      	add	r2, sp, #4
	config_tc.clock_prescaler = TC_CLOCK_PRESCALER;
     830:	00c9      	lsls	r1, r1, #3
     832:	8091      	strh	r1, [r2, #4]

	config_tc.counter_8_bit.value = 0;
	config_tc.counter_8_bit.period = PWM_PERIOD_VALUE;
     834:	212d      	movs	r1, #45	; 0x2d
     836:	2300      	movs	r3, #0
     838:	2055      	movs	r0, #85	; 0x55
     83a:	4469      	add	r1, sp

	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;

	config->counter_16_bit.value                   = 0x0000;
     83c:	8513      	strh	r3, [r2, #40]	; 0x28
     83e:	7008      	strb	r0, [r1, #0]

	config_tc.counter_8_bit.compare_capture_channel[0] = INITIAL_DUTY_CYCLE;
     840:	212e      	movs	r1, #46	; 0x2e
     842:	3840      	subs	r0, #64	; 0x40
     844:	4469      	add	r1, sp
	config->counter_16_bit.compare_capture_channel\
		[TC_COMPARE_CAPTURE_CHANNEL_0]                        = 0x0000;
     846:	8553      	strh	r3, [r2, #42]	; 0x2a
     848:	7008      	strb	r0, [r1, #0]

	config_tc.wave_generation = TC_WAVE_GENERATION_NORMAL_PWM;
     84a:	2140      	movs	r1, #64	; 0x40
	config->clock_source               = GCLK_GENERATOR_0;
     84c:	7013      	strb	r3, [r2, #0]
	config->reload_action              = TC_RELOAD_ACTION_GCLK;
     84e:	8113      	strh	r3, [r2, #8]
	config->run_in_standby             = false;
     850:	7053      	strb	r3, [r2, #1]
	config->waveform_invert_output     = TC_WAVEFORM_INVERT_OUTPUT_NONE;
     852:	7293      	strb	r3, [r2, #10]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
     854:	72d3      	strb	r3, [r2, #11]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
     856:	7313      	strb	r3, [r2, #12]
	config->count_direction            = TC_COUNT_DIRECTION_UP;
     858:	7393      	strb	r3, [r2, #14]
	config->oneshot                    = false;
     85a:	7353      	strb	r3, [r2, #13]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
     85c:	7713      	strb	r3, [r2, #28]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
     85e:	6213      	str	r3, [r2, #32]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;
     860:	6253      	str	r3, [r2, #36]	; 0x24
	config->counter_16_bit.compare_capture_channel\
		[TC_COMPARE_CAPTURE_CHANNEL_1]                        = 0x0000;
     862:	8593      	strh	r3, [r2, #44]	; 0x2c
	config_tc.counter_size = TC_COUNTER_SIZE;
     864:	3304      	adds	r3, #4
     866:	7093      	strb	r3, [r2, #2]
	config_tc.wave_generation = TC_WAVE_GENERATION_NORMAL_PWM;
     868:	7191      	strb	r1, [r2, #6]
	config_tc.pwm_channel[0].pin_out = PWM_PIN_OUT;
	config_tc.pwm_channel[0].pin_mux = PWM_MUX_OUT;
     86a:	6193      	str	r3, [r2, #24]
	config_tc.pwm_channel[0].pin_out = PWM_PIN_OUT;
     86c:	3936      	subs	r1, #54	; 0x36

	config_tc.pwm_channel[0].enabled = true;
     86e:	3b03      	subs	r3, #3
	config_tc.pwm_channel[0].pin_out = PWM_PIN_OUT;
     870:	6151      	str	r1, [r2, #20]
	config_tc.pwm_channel[0].enabled = true;
     872:	7413      	strb	r3, [r2, #16]
	
	tc_init (&pwm_generator_instance, PWM_GENERATOR, &config_tc);
     874:	4902      	ldr	r1, [pc, #8]	; (880 <configure_pwm_generator+0x58>)
     876:	4803      	ldr	r0, [pc, #12]	; (884 <configure_pwm_generator+0x5c>)
     878:	f001 fb60 	bl	1f3c <tc_init>
}
     87c:	b00f      	add	sp, #60	; 0x3c
     87e:	bd00      	pop	{pc}
     880:	42001c00 	.word	0x42001c00
     884:	200001d8 	.word	0x200001d8

00000888 <motor_enable>:



void motor_enable(void){
     888:	b510      	push	{r4, lr}
     88a:	4b09      	ldr	r3, [pc, #36]	; (8b0 <motor_enable+0x28>)
     88c:	681b      	ldr	r3, [r3, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     88e:	7bda      	ldrb	r2, [r3, #15]
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);

	while (tc_is_syncing(module_inst)) {
     890:	b252      	sxtb	r2, r2
     892:	2a00      	cmp	r2, #0
     894:	dbfb      	blt.n	88e <motor_enable+0x6>
		/* Wait for sync */
	}

	/* Enable TC module */
	tc_module->CTRLA.reg |= TC_CTRLA_ENABLE;
     896:	2202      	movs	r2, #2
     898:	8819      	ldrh	r1, [r3, #0]
     89a:	430a      	orrs	r2, r1
     89c:	801a      	strh	r2, [r3, #0]
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
     89e:	2240      	movs	r2, #64	; 0x40
     8a0:	4b04      	ldr	r3, [pc, #16]	; (8b4 <motor_enable+0x2c>)
     8a2:	619a      	str	r2, [r3, #24]
	tc_enable(&pwm_generator_instance);
	port_pin_set_output_level(MOTOR_NSLEEP_PIN, HIGH);
	motor_running = true;
     8a4:	4b04      	ldr	r3, [pc, #16]	; (8b8 <motor_enable+0x30>)
     8a6:	3a3f      	subs	r2, #63	; 0x3f
     8a8:	701a      	strb	r2, [r3, #0]
	set_motor_speed_1_indication();
     8aa:	f001 fdc1 	bl	2430 <set_motor_speed_1_indication>
}
     8ae:	bd10      	pop	{r4, pc}
     8b0:	200001d8 	.word	0x200001d8
     8b4:	41004400 	.word	0x41004400
     8b8:	20000039 	.word	0x20000039

000008bc <motor_disable>:


void motor_disable(void){
	pulsating_motor_routine = false;
     8bc:	2100      	movs	r1, #0
	motor_toggle_count = -1;
     8be:	22ff      	movs	r2, #255	; 0xff
	pulsating_motor_routine = false;
     8c0:	4b0d      	ldr	r3, [pc, #52]	; (8f8 <motor_disable+0x3c>)
void motor_disable(void){
     8c2:	b510      	push	{r4, lr}
	pulsating_motor_routine = false;
     8c4:	7019      	strb	r1, [r3, #0]
	motor_toggle_count = -1;
     8c6:	4b0d      	ldr	r3, [pc, #52]	; (8fc <motor_disable+0x40>)
	motor_running = false;
	tc_set_compare_value (&pwm_generator_instance,TC_COMPARE_CAPTURE_CHANNEL_0,INITIAL_DUTY_CYCLE);
     8c8:	4c0d      	ldr	r4, [pc, #52]	; (900 <motor_disable+0x44>)
	motor_toggle_count = -1;
     8ca:	701a      	strb	r2, [r3, #0]
	motor_running = false;
     8cc:	4b0d      	ldr	r3, [pc, #52]	; (904 <motor_disable+0x48>)
	tc_set_compare_value (&pwm_generator_instance,TC_COMPARE_CAPTURE_CHANNEL_0,INITIAL_DUTY_CYCLE);
     8ce:	3aea      	subs	r2, #234	; 0xea
     8d0:	0020      	movs	r0, r4
	motor_running = false;
     8d2:	7019      	strb	r1, [r3, #0]
	tc_set_compare_value (&pwm_generator_instance,TC_COMPARE_CAPTURE_CHANNEL_0,INITIAL_DUTY_CYCLE);
     8d4:	f001 fc46 	bl	2164 <tc_set_compare_value>
     8d8:	6823      	ldr	r3, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     8da:	7bda      	ldrb	r2, [r3, #15]
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);

	while (tc_is_syncing(module_inst)) {
     8dc:	b252      	sxtb	r2, r2
     8de:	2a00      	cmp	r2, #0
     8e0:	dbfb      	blt.n	8da <motor_disable+0x1e>
		/* Wait for sync */
	}

	/* Disbale interrupt */
	tc_module->INTENCLR.reg = TC_INTENCLR_MASK;
     8e2:	223b      	movs	r2, #59	; 0x3b
	/* Clear interrupt flag */
	tc_module->INTFLAG.reg = TC_INTFLAG_MASK;

	/* Disable TC module */
	tc_module->CTRLA.reg  &= ~TC_CTRLA_ENABLE;
     8e4:	2102      	movs	r1, #2
	tc_module->INTENCLR.reg = TC_INTENCLR_MASK;
     8e6:	731a      	strb	r2, [r3, #12]
	tc_module->INTFLAG.reg = TC_INTFLAG_MASK;
     8e8:	739a      	strb	r2, [r3, #14]
	tc_module->CTRLA.reg  &= ~TC_CTRLA_ENABLE;
     8ea:	881a      	ldrh	r2, [r3, #0]
     8ec:	438a      	bics	r2, r1
     8ee:	801a      	strh	r2, [r3, #0]
	} else {
		port_base->OUTCLR.reg = pin_mask;
     8f0:	2240      	movs	r2, #64	; 0x40
     8f2:	4b05      	ldr	r3, [pc, #20]	; (908 <motor_disable+0x4c>)
     8f4:	615a      	str	r2, [r3, #20]
	tc_disable (&pwm_generator_instance);
	port_pin_set_output_level(MOTOR_NSLEEP_PIN,LOW);
}
     8f6:	bd10      	pop	{r4, pc}
     8f8:	2000003a 	.word	0x2000003a
     8fc:	20000008 	.word	0x20000008
     900:	200001d8 	.word	0x200001d8
     904:	20000039 	.word	0x20000039
     908:	41004400 	.word	0x41004400

0000090c <cycle_pwm_motor>:



void cycle_pwm_motor (void)
{
     90c:	b510      	push	{r4, lr}
	{
		if (motor_running)
     90e:	4b16      	ldr	r3, [pc, #88]	; (968 <cycle_pwm_motor+0x5c>)
     910:	781b      	ldrb	r3, [r3, #0]
     912:	2b00      	cmp	r3, #0
     914:	d00a      	beq.n	92c <cycle_pwm_motor+0x20>
		{
			if (motor_toggle_count == 2)
     916:	4b15      	ldr	r3, [pc, #84]	; (96c <cycle_pwm_motor+0x60>)
     918:	781b      	ldrb	r3, [r3, #0]
     91a:	2b02      	cmp	r3, #2
     91c:	d107      	bne.n	92e <cycle_pwm_motor+0x22>
			{
				tc_set_compare_value (&pwm_generator_instance,
     91e:	2222      	movs	r2, #34	; 0x22
     920:	2100      	movs	r1, #0
     922:	4813      	ldr	r0, [pc, #76]	; (970 <cycle_pwm_motor+0x64>)
     924:	f001 fc1e 	bl	2164 <tc_set_compare_value>
				TC_COMPARE_CAPTURE_CHANNEL_0, FIRST_DUTY_CYCLE);
				set_motor_speed_2_indication();
     928:	f001 fdae 	bl	2488 <set_motor_speed_2_indication>
					motor_disable();
			}
		}
	}

}
     92c:	bd10      	pop	{r4, pc}
			else if (motor_toggle_count == 3)
     92e:	2b03      	cmp	r3, #3
     930:	d107      	bne.n	942 <cycle_pwm_motor+0x36>
				tc_set_compare_value (&pwm_generator_instance,
     932:	224d      	movs	r2, #77	; 0x4d
     934:	2100      	movs	r1, #0
     936:	480e      	ldr	r0, [pc, #56]	; (970 <cycle_pwm_motor+0x64>)
     938:	f001 fc14 	bl	2164 <tc_set_compare_value>
				set_motor_speed_3_indication();
     93c:	f001 fdd0 	bl	24e0 <set_motor_speed_3_indication>
     940:	e7f4      	b.n	92c <cycle_pwm_motor+0x20>
			else if (motor_toggle_count == 4)
     942:	2b04      	cmp	r3, #4
     944:	d10a      	bne.n	95c <cycle_pwm_motor+0x50>
				pulsating_motor_routine = true;
     946:	2201      	movs	r2, #1
     948:	4b0a      	ldr	r3, [pc, #40]	; (974 <cycle_pwm_motor+0x68>)
				tc_set_compare_value (&pwm_generator_instance,
     94a:	2100      	movs	r1, #0
				pulsating_motor_routine = true;
     94c:	701a      	strb	r2, [r3, #0]
				tc_set_compare_value (&pwm_generator_instance,
     94e:	4808      	ldr	r0, [pc, #32]	; (970 <cycle_pwm_motor+0x64>)
     950:	324c      	adds	r2, #76	; 0x4c
     952:	f001 fc07 	bl	2164 <tc_set_compare_value>
				set_motor_pulsating_indication();
     956:	f001 fdef 	bl	2538 <set_motor_pulsating_indication>
     95a:	e7e7      	b.n	92c <cycle_pwm_motor+0x20>
			else if (motor_toggle_count > 4)
     95c:	2b04      	cmp	r3, #4
     95e:	d9e5      	bls.n	92c <cycle_pwm_motor+0x20>
					motor_disable();
     960:	f7ff ffac 	bl	8bc <motor_disable>
}
     964:	e7e2      	b.n	92c <cycle_pwm_motor+0x20>
     966:	46c0      	nop			; (mov r8, r8)
     968:	20000039 	.word	0x20000039
     96c:	20000008 	.word	0x20000008
     970:	200001d8 	.word	0x200001d8
     974:	2000003a 	.word	0x2000003a

00000978 <toggle_nsleep>:



 void toggle_nsleep(void){
	 static bool PULSATING_MOTOR = false;
	 if (pulsating_motor_routine){
     978:	4b08      	ldr	r3, [pc, #32]	; (99c <toggle_nsleep+0x24>)
     97a:	781b      	ldrb	r3, [r3, #0]
     97c:	2b00      	cmp	r3, #0
     97e:	d008      	beq.n	992 <toggle_nsleep+0x1a>
		 if (PULSATING_MOTOR){
     980:	4b07      	ldr	r3, [pc, #28]	; (9a0 <toggle_nsleep+0x28>)
     982:	4a08      	ldr	r2, [pc, #32]	; (9a4 <toggle_nsleep+0x2c>)
     984:	7818      	ldrb	r0, [r3, #0]
     986:	2140      	movs	r1, #64	; 0x40
     988:	2800      	cmp	r0, #0
     98a:	d003      	beq.n	994 <toggle_nsleep+0x1c>
     98c:	6151      	str	r1, [r2, #20]
			 port_pin_set_output_level(MOTOR_NSLEEP_PIN,LOW);
			 PULSATING_MOTOR = false;
     98e:	2200      	movs	r2, #0
     990:	701a      	strb	r2, [r3, #0]
			 }else{
			 PULSATING_MOTOR = true;
			 port_pin_set_output_level(MOTOR_NSLEEP_PIN,HIGH);
		 }
	 }
 }
     992:	4770      	bx	lr
			 PULSATING_MOTOR = true;
     994:	2001      	movs	r0, #1
     996:	7018      	strb	r0, [r3, #0]
		port_base->OUTSET.reg = pin_mask;
     998:	6191      	str	r1, [r2, #24]
 }
     99a:	e7fa      	b.n	992 <toggle_nsleep+0x1a>
     99c:	2000003a 	.word	0x2000003a
     9a0:	20000038 	.word	0x20000038
     9a4:	41004400 	.word	0x41004400

000009a8 <system_inactive>:
bool Vbus_State;
bool Chargn_On_State;
bool Chargn_Off_State;


 void system_inactive(void) {
     9a8:	b510      	push	{r4, lr}
	 motor_disable();							// shutdown PWM motor
     9aa:	f7ff ff87 	bl	8bc <motor_disable>
	 pwm_led_system_cleanup();					// shutdown illumination led
     9ae:	f7ff feb5 	bl	71c <pwm_led_system_cleanup>
	 pwm_led_toggle_count = 0;					// reset counter to start the routine from begginging
     9b2:	2200      	movs	r2, #0
     9b4:	4b01      	ldr	r3, [pc, #4]	; (9bc <system_inactive+0x14>)
     9b6:	701a      	strb	r2, [r3, #0]
 }
     9b8:	bd10      	pop	{r4, pc}
     9ba:	46c0      	nop			; (mov r8, r8)
     9bc:	20000037 	.word	0x20000037

000009c0 <regular_routine>:


void regular_routine(void) {
     9c0:	b570      	push	{r4, r5, r6, lr}
	static bool motor_status_changed = false;
	static bool led_button_status_changed = false;

	//-------------------------------------------------------------

	if (is_button_one_pressed()) {
     9c2:	f7ff fe59 	bl	678 <is_button_one_pressed>
     9c6:	4d26      	ldr	r5, [pc, #152]	; (a60 <regular_routine+0xa0>)
     9c8:	2800      	cmp	r0, #0
     9ca:	d007      	beq.n	9dc <regular_routine+0x1c>
		if (LongPressB1Flag) {
     9cc:	4c25      	ldr	r4, [pc, #148]	; (a64 <regular_routine+0xa4>)
     9ce:	7823      	ldrb	r3, [r4, #0]
     9d0:	2b00      	cmp	r3, #0
     9d2:	d01d      	beq.n	a10 <regular_routine+0x50>
			system_inactive();
     9d4:	f7ff ffe8 	bl	9a8 <system_inactive>
			LongPressB1Flag = false;															// ALLOW IT TO CYCLE AGAIN
     9d8:	2300      	movs	r3, #0
     9da:	7023      	strb	r3, [r4, #0]
				}
			}
		}
	}

	if (BUTTON_ONE_RELEASE_STATUS) {
     9dc:	4b22      	ldr	r3, [pc, #136]	; (a68 <regular_routine+0xa8>)
     9de:	781b      	ldrb	r3, [r3, #0]
     9e0:	2b00      	cmp	r3, #0
     9e2:	d004      	beq.n	9ee <regular_routine+0x2e>
		motor_status_changed = false;
     9e4:	2300      	movs	r3, #0
     9e6:	4a21      	ldr	r2, [pc, #132]	; (a6c <regular_routine+0xac>)
     9e8:	7013      	strb	r3, [r2, #0]
		led_button_status_changed = false;
     9ea:	4a21      	ldr	r2, [pc, #132]	; (a70 <regular_routine+0xb0>)
     9ec:	7013      	strb	r3, [r2, #0]
	//}
	//if (BUTTON_TWO_RELEASE_STATUS) {
		//led_button_status_changed = false;
	//}

	if (Vbus_State == false) {
     9ee:	782b      	ldrb	r3, [r5, #0]
     9f0:	2b00      	cmp	r3, #0
     9f2:	d00c      	beq.n	a0e <regular_routine+0x4e>
		;																						// Enable Motor PWM
		} else {
		
		if (motor_running){
     9f4:	4b1f      	ldr	r3, [pc, #124]	; (a74 <regular_routine+0xb4>)
     9f6:	781b      	ldrb	r3, [r3, #0]
     9f8:	2b00      	cmp	r3, #0
     9fa:	d001      	beq.n	a00 <regular_routine+0x40>
			system_inactive();
     9fc:	f7ff ffd4 	bl	9a8 <system_inactive>
		}
		// ITS PLUGGED IN
		if (Chargn_On_State == false) {															// battery charging (plugged in)
     a00:	4b1d      	ldr	r3, [pc, #116]	; (a78 <regular_routine+0xb8>)
     a02:	781a      	ldrb	r2, [r3, #0]
     a04:	4b1d      	ldr	r3, [pc, #116]	; (a7c <regular_routine+0xbc>)
     a06:	2a00      	cmp	r2, #0
     a08:	d127      	bne.n	a5a <regular_routine+0x9a>
			BATTERY_CHARGING = true;															// show battery charge routine
     a0a:	3201      	adds	r2, #1
			} else {
			BATTERY_CHARGING = false;
     a0c:	701a      	strb	r2, [r3, #0]
		}
		
	}
}
     a0e:	bd70      	pop	{r4, r5, r6, pc}
			if (!motor_status_changed && !led_button_status_changed && !Vbus_State) {
     a10:	4b16      	ldr	r3, [pc, #88]	; (a6c <regular_routine+0xac>)
     a12:	781a      	ldrb	r2, [r3, #0]
     a14:	2a00      	cmp	r2, #0
     a16:	d1e1      	bne.n	9dc <regular_routine+0x1c>
     a18:	4915      	ldr	r1, [pc, #84]	; (a70 <regular_routine+0xb0>)
     a1a:	780a      	ldrb	r2, [r1, #0]
     a1c:	2a00      	cmp	r2, #0
     a1e:	d1dd      	bne.n	9dc <regular_routine+0x1c>
     a20:	782a      	ldrb	r2, [r5, #0]
     a22:	2a00      	cmp	r2, #0
     a24:	d1da      	bne.n	9dc <regular_routine+0x1c>
				led_button_status_changed = true;
     a26:	3201      	adds	r2, #1
				motor_status_changed = true;
     a28:	701a      	strb	r2, [r3, #0]
				led_button_status_changed = true;
     a2a:	700a      	strb	r2, [r1, #0]
				pwm_led_toggle_count++;
     a2c:	4a14      	ldr	r2, [pc, #80]	; (a80 <regular_routine+0xc0>)
				motor_toggle_count++;
     a2e:	4c15      	ldr	r4, [pc, #84]	; (a84 <regular_routine+0xc4>)
				pwm_led_toggle_count++;
     a30:	7813      	ldrb	r3, [r2, #0]
     a32:	3301      	adds	r3, #1
     a34:	7013      	strb	r3, [r2, #0]
				motor_toggle_count++;
     a36:	7823      	ldrb	r3, [r4, #0]
     a38:	3301      	adds	r3, #1
     a3a:	7023      	strb	r3, [r4, #0]
				cycle_pwm_led();
     a3c:	f7ff fee0 	bl	800 <cycle_pwm_led>
				if (!motor_running && motor_toggle_count == 1) {
     a40:	4b0c      	ldr	r3, [pc, #48]	; (a74 <regular_routine+0xb4>)
     a42:	781b      	ldrb	r3, [r3, #0]
     a44:	2b00      	cmp	r3, #0
     a46:	d105      	bne.n	a54 <regular_routine+0x94>
     a48:	7823      	ldrb	r3, [r4, #0]
     a4a:	2b01      	cmp	r3, #1
     a4c:	d102      	bne.n	a54 <regular_routine+0x94>
					motor_enable();
     a4e:	f7ff ff1b 	bl	888 <motor_enable>
     a52:	e7c3      	b.n	9dc <regular_routine+0x1c>
					cycle_pwm_motor();
     a54:	f7ff ff5a 	bl	90c <cycle_pwm_motor>
     a58:	e7c0      	b.n	9dc <regular_routine+0x1c>
			BATTERY_CHARGING = false;
     a5a:	2200      	movs	r2, #0
     a5c:	e7d6      	b.n	a0c <regular_routine+0x4c>
     a5e:	46c0      	nop			; (mov r8, r8)
     a60:	200001f5 	.word	0x200001f5
     a64:	20000036 	.word	0x20000036
     a68:	20000035 	.word	0x20000035
     a6c:	20000040 	.word	0x20000040
     a70:	2000003f 	.word	0x2000003f
     a74:	20000039 	.word	0x20000039
     a78:	200001f6 	.word	0x200001f6
     a7c:	2000003c 	.word	0x2000003c
     a80:	20000037 	.word	0x20000037
     a84:	20000008 	.word	0x20000008

00000a88 <get_battery_level>:
		//
	//}
 //}


void get_battery_level(void) {
     a88:	b530      	push	{r4, r5, lr}

	if (!motor_running) {
     a8a:	4b0f      	ldr	r3, [pc, #60]	; (ac8 <get_battery_level+0x40>)
     a8c:	781b      	ldrb	r3, [r3, #0]
     a8e:	2b00      	cmp	r3, #0
     a90:	d10b      	bne.n	aaa <get_battery_level+0x22>
		if (adc_result <= VOLTAGE_THRESH_LOWEST) {
     a92:	4a0e      	ldr	r2, [pc, #56]	; (acc <get_battery_level+0x44>)
     a94:	4d0e      	ldr	r5, [pc, #56]	; (ad0 <get_battery_level+0x48>)
     a96:	8814      	ldrh	r4, [r2, #0]
     a98:	480e      	ldr	r0, [pc, #56]	; (ad4 <get_battery_level+0x4c>)
     a9a:	490f      	ldr	r1, [pc, #60]	; (ad8 <get_battery_level+0x50>)
     a9c:	4a0f      	ldr	r2, [pc, #60]	; (adc <get_battery_level+0x54>)
     a9e:	42ac      	cmp	r4, r5
     aa0:	d804      	bhi.n	aac <get_battery_level+0x24>
			// LOWEST SITUATION
			BATTERY_LOWEST = true;
     aa2:	2401      	movs	r4, #1
			BATTERY_LOW = false;
     aa4:	700b      	strb	r3, [r1, #0]
			BATTERY_LOWEST = true;
     aa6:	7004      	strb	r4, [r0, #0]
		}
		else { // adc_result > VOLTAGE_THRESH_MAX
			// FULLY CHARGED SITUATION
			BATTERY_LOWEST = false;
			BATTERY_LOW = false;
			BATTERY_CHARGED = true;
     aa8:	7013      	strb	r3, [r2, #0]
		}
	}
}
     aaa:	bd30      	pop	{r4, r5, pc}
		else if (adc_result <= VOLTAGE_THRESH_LOW) { // Ensure adc_result > VOLTAGE_THRESH_LOWEST
     aac:	4d0c      	ldr	r5, [pc, #48]	; (ae0 <get_battery_level+0x58>)
     aae:	42ac      	cmp	r4, r5
     ab0:	d803      	bhi.n	aba <get_battery_level+0x32>
			BATTERY_LOWEST = false;
     ab2:	7003      	strb	r3, [r0, #0]
			BATTERY_LOW = true;
     ab4:	2001      	movs	r0, #1
     ab6:	7008      	strb	r0, [r1, #0]
     ab8:	e7f6      	b.n	aa8 <get_battery_level+0x20>
		else if (adc_result < VOLTAGE_THRESH_MAX) { // Ensure adc_result > VOLTAGE_THRESH_LOW
     aba:	4d0a      	ldr	r5, [pc, #40]	; (ae4 <get_battery_level+0x5c>)
			BATTERY_LOWEST = false;
     abc:	7003      	strb	r3, [r0, #0]
			BATTERY_LOW = false;
     abe:	700b      	strb	r3, [r1, #0]
		else if (adc_result < VOLTAGE_THRESH_MAX) { // Ensure adc_result > VOLTAGE_THRESH_LOW
     ac0:	42ac      	cmp	r4, r5
     ac2:	d9f1      	bls.n	aa8 <get_battery_level+0x20>
			BATTERY_CHARGED = true;
     ac4:	2301      	movs	r3, #1
     ac6:	e7ef      	b.n	aa8 <get_battery_level+0x20>
     ac8:	20000039 	.word	0x20000039
     acc:	20000088 	.word	0x20000088
     ad0:	00000c7a 	.word	0x00000c7a
     ad4:	2000003e 	.word	0x2000003e
     ad8:	2000003d 	.word	0x2000003d
     adc:	2000003b 	.word	0x2000003b
     ae0:	00000d2c 	.word	0x00000d2c
     ae4:	00000e8e 	.word	0x00000e8e

00000ae8 <system_logic>:
 /************************************************************************/
 /* LOGIC MACHINE		                                                */
 /************************************************************************/


 void system_logic(void) {
     ae8:	b510      	push	{r4, lr}
	 if (SYS_TICK_10MS) {
     aea:	4b0b      	ldr	r3, [pc, #44]	; (b18 <system_logic+0x30>)
     aec:	781a      	ldrb	r2, [r3, #0]
     aee:	2a00      	cmp	r2, #0
     af0:	d005      	beq.n	afe <system_logic+0x16>
		 SYS_TICK_10MS = false;
     af2:	2200      	movs	r2, #0
     af4:	701a      	strb	r2, [r3, #0]
		 system_state();						// Get latest system_state
     af6:	f000 f987 	bl	e08 <system_state>
		 regular_routine();
     afa:	f7ff ff61 	bl	9c0 <regular_routine>
	 }
	 if (SYS_TICK_200MS) {
     afe:	4b07      	ldr	r3, [pc, #28]	; (b1c <system_logic+0x34>)
     b00:	781a      	ldrb	r2, [r3, #0]
     b02:	2a00      	cmp	r2, #0
     b04:	d007      	beq.n	b16 <system_logic+0x2e>
		 SYS_TICK_200MS = false;
     b06:	2200      	movs	r2, #0
     b08:	701a      	strb	r2, [r3, #0]
		 toggle_nsleep();
     b0a:	f7ff ff35 	bl	978 <toggle_nsleep>
		 sample_adc();
     b0e:	f7ff fb1d 	bl	14c <sample_adc>
		 get_battery_level();
     b12:	f7ff ffb9 	bl	a88 <get_battery_level>
	 }
     b16:	bd10      	pop	{r4, pc}
     b18:	20000042 	.word	0x20000042
     b1c:	20000043 	.word	0x20000043

00000b20 <sys_tc_callback>:
	static int tick_count_100ms;
	static int tick_count_200ms;
	//static int tick_count_500ms;
	//static int tick_count_1000ms;

	tick_count_1ms++;
     b20:	4919      	ldr	r1, [pc, #100]	; (b88 <sys_tc_callback+0x68>)
     b22:	680b      	ldr	r3, [r1, #0]
     b24:	1c5a      	adds	r2, r3, #1
     b26:	600a      	str	r2, [r1, #0]
     b28:	4b18      	ldr	r3, [pc, #96]	; (b8c <sys_tc_callback+0x6c>)
	
	
	//port_pin_toggle_output_level (LED0_PIN);					// visually check sys clock on PA16
	
	// Check for 10ms interval
	if (tick_count_1ms >= 10)
     b2a:	2a09      	cmp	r2, #9
     b2c:	dd07      	ble.n	b3e <sys_tc_callback+0x1e>
	{
		tick_count_10ms++;
     b2e:	681a      	ldr	r2, [r3, #0]
     b30:	3201      	adds	r2, #1
     b32:	601a      	str	r2, [r3, #0]
		tick_count_1ms = 0;
     b34:	2200      	movs	r2, #0
     b36:	600a      	str	r2, [r1, #0]
		SYS_TICK_10MS = true;									// Flag for 10ms interval
     b38:	2101      	movs	r1, #1
     b3a:	4a15      	ldr	r2, [pc, #84]	; (b90 <sys_tc_callback+0x70>)
     b3c:	7011      	strb	r1, [r2, #0]
		//port_pin_toggle_output_level (LED0_PIN);				// visually check sys clock on PA16
	}
	
	// Check for 50ms interval
	if (tick_count_10ms >= 5)
     b3e:	6819      	ldr	r1, [r3, #0]
     b40:	4a14      	ldr	r2, [pc, #80]	; (b94 <sys_tc_callback+0x74>)
     b42:	2904      	cmp	r1, #4
     b44:	dd07      	ble.n	b56 <sys_tc_callback+0x36>
	{
		tick_count_50ms++;
     b46:	6811      	ldr	r1, [r2, #0]
     b48:	3101      	adds	r1, #1
     b4a:	6011      	str	r1, [r2, #0]
		tick_count_10ms = 0;
     b4c:	2100      	movs	r1, #0
     b4e:	6019      	str	r1, [r3, #0]
		SYS_TICK_50MS = true;									// Flag for 50ms interval
     b50:	4b11      	ldr	r3, [pc, #68]	; (b98 <sys_tc_callback+0x78>)
     b52:	3101      	adds	r1, #1
     b54:	7019      	strb	r1, [r3, #0]
		//port_pin_toggle_output_level (LED0_PIN);				// visually check sys clock on PA16
	}
	
	// Check for 100ms interval
	if (tick_count_50ms >= 2)
     b56:	6811      	ldr	r1, [r2, #0]
     b58:	4b10      	ldr	r3, [pc, #64]	; (b9c <sys_tc_callback+0x7c>)
     b5a:	2901      	cmp	r1, #1
     b5c:	dd07      	ble.n	b6e <sys_tc_callback+0x4e>
	{
		tick_count_100ms++;
     b5e:	6819      	ldr	r1, [r3, #0]
     b60:	3101      	adds	r1, #1
     b62:	6019      	str	r1, [r3, #0]
		tick_count_50ms = 0;
     b64:	2100      	movs	r1, #0
     b66:	6011      	str	r1, [r2, #0]
		SYS_TICK_100MS = true;									// Flag for 100ms interval
     b68:	4a0d      	ldr	r2, [pc, #52]	; (ba0 <sys_tc_callback+0x80>)
     b6a:	3101      	adds	r1, #1
     b6c:	7011      	strb	r1, [r2, #0]
		//port_pin_toggle_output_level (LED0_PIN);				// visually check sys clock on PA16
	}
	
	
	// Check for 200ms interval
	if (tick_count_100ms >= 2)
     b6e:	681a      	ldr	r2, [r3, #0]
     b70:	2a01      	cmp	r2, #1
     b72:	dd08      	ble.n	b86 <sys_tc_callback+0x66>
	{
		tick_count_200ms++;
     b74:	490b      	ldr	r1, [pc, #44]	; (ba4 <sys_tc_callback+0x84>)
     b76:	680a      	ldr	r2, [r1, #0]
     b78:	3201      	adds	r2, #1
     b7a:	600a      	str	r2, [r1, #0]
		tick_count_100ms = 0;
     b7c:	2200      	movs	r2, #0
     b7e:	601a      	str	r2, [r3, #0]
		SYS_TICK_200MS = true;									// Flag for 200ms interval
     b80:	4b09      	ldr	r3, [pc, #36]	; (ba8 <sys_tc_callback+0x88>)
     b82:	3201      	adds	r2, #1
     b84:	701a      	strb	r2, [r3, #0]
		//tick_count_500ms = 0;
		//SYS_TICK_1000MS = true;                                 // Flag for 1000ms interval
		////port_pin_toggle_output_level (LED0_PIN);               // visually check sys clock on PA16
	//}
	
}
     b86:	4770      	bx	lr
     b88:	20000050 	.word	0x20000050
     b8c:	2000004c 	.word	0x2000004c
     b90:	20000042 	.word	0x20000042
     b94:	20000058 	.word	0x20000058
     b98:	20000044 	.word	0x20000044
     b9c:	20000048 	.word	0x20000048
     ba0:	20000041 	.word	0x20000041
     ba4:	20000054 	.word	0x20000054
     ba8:	20000043 	.word	0x20000043

00000bac <extint_detection_callback>:
void extint_detection_callback(void)
{
	//motor_enable();
	//LED_Off(LED0_PIN);

}
     bac:	4770      	bx	lr

00000bae <configure_port_pins>:
{
     bae:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	config->direction  = PORT_PIN_DIR_INPUT;
     bb0:	2600      	movs	r6, #0
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;
     bb2:	2702      	movs	r7, #2
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     bb4:	2501      	movs	r5, #1
     bb6:	ac01      	add	r4, sp, #4
	port_pin_set_config(VBUS_PIN, &config_port_pin);
     bb8:	0021      	movs	r1, r4
     bba:	201b      	movs	r0, #27
     bbc:	7026      	strb	r6, [r4, #0]
	config->powersave  = false;
     bbe:	70a6      	strb	r6, [r4, #2]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;
     bc0:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(VBUS_PIN, &config_port_pin);
     bc2:	f000 f959 	bl	e78 <port_pin_set_config>
	port_pin_set_config(MOTOR_NSLEEP_PIN, &config_port_pin);
     bc6:	0021      	movs	r1, r4
     bc8:	2006      	movs	r0, #6
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     bca:	7025      	strb	r5, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;							// START AT PULL DOWN.
     bcc:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(MOTOR_NSLEEP_PIN, &config_port_pin);
     bce:	f000 f953 	bl	e78 <port_pin_set_config>
	port_pin_set_config(SWITCH_OFF_PIN, &config_port_pin);
     bd2:	0021      	movs	r1, r4
     bd4:	2007      	movs	r0, #7
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     bd6:	7025      	strb	r5, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_UP;								// START AT PULL UP.
     bd8:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(SWITCH_OFF_PIN, &config_port_pin);
     bda:	f000 f94d 	bl	e78 <port_pin_set_config>
	port_pin_set_config(BUTTON_2, &config_port_pin);
     bde:	0021      	movs	r1, r4
     be0:	200f      	movs	r0, #15
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
     be2:	7026      	strb	r6, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_UP;							// START AT PULL DOWN.
     be4:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_2, &config_port_pin);
     be6:	f000 f947 	bl	e78 <port_pin_set_config>
	port_pin_set_config(BAT_CHARGED_PIN, &config_port_pin);
     bea:	0021      	movs	r1, r4
     bec:	200b      	movs	r0, #11
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
     bee:	7026      	strb	r6, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;							// START AT PULL DOWN.
     bf0:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(BAT_CHARGED_PIN, &config_port_pin);
     bf2:	f000 f941 	bl	e78 <port_pin_set_config>
	port_pin_set_config(CHARGN_OFF_PIN, &config_port_pin);
     bf6:	0021      	movs	r1, r4
     bf8:	2003      	movs	r0, #3
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     bfa:	7025      	strb	r5, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;							// START AT PULL DOWN.
     bfc:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(CHARGN_OFF_PIN, &config_port_pin);
     bfe:	f000 f93b 	bl	e78 <port_pin_set_config>
	port_pin_set_config(SAMPLE_ADC_PIN, &config_port_pin);
     c02:	0038      	movs	r0, r7
     c04:	0021      	movs	r1, r4
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
     c06:	7026      	strb	r6, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;							// START AT PULL DOWN.
     c08:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(SAMPLE_ADC_PIN, &config_port_pin);
     c0a:	f000 f935 	bl	e78 <port_pin_set_config>
	port_pin_set_config(XPLAINED_LED, &config_port_pin);
     c0e:	0021      	movs	r1, r4
     c10:	2010      	movs	r0, #16
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     c12:	7025      	strb	r5, [r4, #0]
	port_pin_set_config(XPLAINED_LED, &config_port_pin);
     c14:	f000 f930 	bl	e78 <port_pin_set_config>
	port_pin_set_config(BUTTON_1, &config_port_pin);
     c18:	0021      	movs	r1, r4
     c1a:	200e      	movs	r0, #14
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
     c1c:	7026      	strb	r6, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_UP;
     c1e:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_1, &config_port_pin);
     c20:	f000 f92a 	bl	e78 <port_pin_set_config>
}
     c24:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
	...

00000c28 <configure_system_tc>:
	config->clock_source               = GCLK_GENERATOR_0;
     c28:	2300      	movs	r3, #0
 {
     c2a:	b510      	push	{r4, lr}
     c2c:	b08e      	sub	sp, #56	; 0x38
     c2e:	aa01      	add	r2, sp, #4
	config->counter_16_bit.value                   = 0x0000;
     c30:	8513      	strh	r3, [r2, #40]	; 0x28
	config->clock_source               = GCLK_GENERATOR_0;
     c32:	7013      	strb	r3, [r2, #0]
	config->wave_generation            = TC_WAVE_GENERATION_NORMAL_FREQ;
     c34:	7193      	strb	r3, [r2, #6]
	config->reload_action              = TC_RELOAD_ACTION_GCLK;
     c36:	8113      	strh	r3, [r2, #8]
	config->run_in_standby             = false;
     c38:	7053      	strb	r3, [r2, #1]
	config->waveform_invert_output     = TC_WAVEFORM_INVERT_OUTPUT_NONE;
     c3a:	7293      	strb	r3, [r2, #10]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
     c3c:	72d3      	strb	r3, [r2, #11]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
     c3e:	7313      	strb	r3, [r2, #12]
	config->count_direction            = TC_COUNT_DIRECTION_UP;
     c40:	7393      	strb	r3, [r2, #14]
	config->oneshot                    = false;
     c42:	7353      	strb	r3, [r2, #13]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_out = 0;
     c44:	6153      	str	r3, [r2, #20]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_mux = 0;
     c46:	6193      	str	r3, [r2, #24]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
     c48:	7713      	strb	r3, [r2, #28]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
     c4a:	6213      	str	r3, [r2, #32]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;
     c4c:	6253      	str	r3, [r2, #36]	; 0x24
		[TC_COMPARE_CAPTURE_CHANNEL_0]                        = 0x0000;
     c4e:	8553      	strh	r3, [r2, #42]	; 0x2a
		[TC_COMPARE_CAPTURE_CHANNEL_1]                        = 0x0000;
     c50:	8593      	strh	r3, [r2, #44]	; 0x2c
	 config_tc.counter_size = TC_COUNTER_SIZE;
     c52:	3304      	adds	r3, #4
     c54:	7093      	strb	r3, [r2, #2]
	 config_tc.clock_prescaler = TC_CLOCK_PRESCALER;
     c56:	23a0      	movs	r3, #160	; 0xa0
     c58:	00db      	lsls	r3, r3, #3
     c5a:	8093      	strh	r3, [r2, #4]
	 config_tc.counter_8_bit.period = SYSTEM_TC_PERIOD_VALUE;
     c5c:	232d      	movs	r3, #45	; 0x2d
     c5e:	216f      	movs	r1, #111	; 0x6f
     c60:	446b      	add	r3, sp
     c62:	7019      	strb	r1, [r3, #0]
	 config_tc.pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].enabled = true;
     c64:	2301      	movs	r3, #1
	 tc_init (&system_timer_instance, SYSTEM_TC, &config_tc);
     c66:	4c08      	ldr	r4, [pc, #32]	; (c88 <configure_system_tc+0x60>)
	 config_tc.pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].enabled = true;
     c68:	7413      	strb	r3, [r2, #16]
	 tc_init (&system_timer_instance, SYSTEM_TC, &config_tc);
     c6a:	4908      	ldr	r1, [pc, #32]	; (c8c <configure_system_tc+0x64>)
     c6c:	0020      	movs	r0, r4
     c6e:	f001 f965 	bl	1f3c <tc_init>
     c72:	6823      	ldr	r3, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     c74:	7bda      	ldrb	r2, [r3, #15]
	while (tc_is_syncing(module_inst)) {
     c76:	b252      	sxtb	r2, r2
     c78:	2a00      	cmp	r2, #0
     c7a:	dbfb      	blt.n	c74 <configure_system_tc+0x4c>
	tc_module->CTRLA.reg |= TC_CTRLA_ENABLE;
     c7c:	2202      	movs	r2, #2
     c7e:	8819      	ldrh	r1, [r3, #0]
     c80:	430a      	orrs	r2, r1
     c82:	801a      	strh	r2, [r3, #0]
 }
     c84:	b00e      	add	sp, #56	; 0x38
     c86:	bd10      	pop	{r4, pc}
     c88:	20000118 	.word	0x20000118
     c8c:	42001800 	.word	0x42001800

00000c90 <system_tc_callbacks>:
{
     c90:	b510      	push	{r4, lr}
	tc_register_callback (&system_timer_instance, sys_tc_callback,
     c92:	4c0c      	ldr	r4, [pc, #48]	; (cc4 <system_tc_callbacks+0x34>)
     c94:	2200      	movs	r2, #0
     c96:	490c      	ldr	r1, [pc, #48]	; (cc8 <system_tc_callbacks+0x38>)
     c98:	0020      	movs	r0, r4
     c9a:	f001 f8f2 	bl	1e82 <tc_register_callback>
	/* Sanity check arguments */
	Assert(module);


	/* Enable interrupts for this TC module */
	system_interrupt_enable(_tc_interrupt_get_interrupt_vector(_tc_get_inst_index(module->hw)));
     c9e:	6820      	ldr	r0, [r4, #0]
     ca0:	f001 f93a 	bl	1f18 <_tc_get_inst_index>
	return (enum system_interrupt_vector)tc_interrupt_vectors[inst_num];
     ca4:	4b09      	ldr	r3, [pc, #36]	; (ccc <system_tc_callbacks+0x3c>)
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
     ca6:	5c1a      	ldrb	r2, [r3, r0]
     ca8:	231f      	movs	r3, #31
     caa:	401a      	ands	r2, r3
     cac:	3b1e      	subs	r3, #30
     cae:	0019      	movs	r1, r3
     cb0:	4091      	lsls	r1, r2
     cb2:	4a07      	ldr	r2, [pc, #28]	; (cd0 <system_tc_callbacks+0x40>)
     cb4:	6011      	str	r1, [r2, #0]
	else if (callback_type == TC_CALLBACK_CC_CHANNEL1) {
		module->enable_callback_mask |= TC_INTFLAG_MC(2);
		module->hw->COUNT8.INTENSET.reg = TC_INTFLAG_MC(2);
	}
	else {
		module->enable_callback_mask |= (1 << callback_type);
     cb6:	7e62      	ldrb	r2, [r4, #25]
     cb8:	431a      	orrs	r2, r3
     cba:	7662      	strb	r2, [r4, #25]
		module->hw->COUNT8.INTENSET.reg = (1 << callback_type);
     cbc:	6822      	ldr	r2, [r4, #0]
     cbe:	7353      	strb	r3, [r2, #13]
}
     cc0:	bd10      	pop	{r4, pc}
     cc2:	46c0      	nop			; (mov r8, r8)
     cc4:	20000118 	.word	0x20000118
     cc8:	00000b21 	.word	0x00000b21
     ccc:	00002854 	.word	0x00002854
     cd0:	e000e100 	.word	0xe000e100

00000cd4 <configure_extint_channel>:
{
     cd4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	extint_chan_get_config_defaults(&config_extint_chan);
     cd6:	ac01      	add	r4, sp, #4
     cd8:	0020      	movs	r0, r4
     cda:	f7ff fc8d 	bl	5f8 <extint_chan_get_config_defaults>
	config_extint_chan.gpio_pin           = PIN_PA15A_EIC_EXTINT1;
     cde:	230f      	movs	r3, #15
     ce0:	9301      	str	r3, [sp, #4]
	config_extint_chan.gpio_pin_mux       = MUX_PA15A_EIC_EXTINT1;
     ce2:	2300      	movs	r3, #0
	config_extint_chan.wake_if_sleeping   = true;
     ce4:	2001      	movs	r0, #1
	config_extint_chan.gpio_pin_mux       = MUX_PA15A_EIC_EXTINT1;
     ce6:	6063      	str	r3, [r4, #4]
	extint_chan_set_config(BUTTON_0_EIC_LINE_custom, &config_extint_chan);
     ce8:	0021      	movs	r1, r4
	config_extint_chan.detection_criteria = EXTINT_DETECT_BOTH;
     cea:	3303      	adds	r3, #3
	config_extint_chan.wake_if_sleeping   = true;
     cec:	7260      	strb	r0, [r4, #9]
	config_extint_chan.gpio_pin_pull      = EXTINT_PULL_UP;
     cee:	7220      	strb	r0, [r4, #8]
	config_extint_chan.detection_criteria = EXTINT_DETECT_BOTH;
     cf0:	72e3      	strb	r3, [r4, #11]
	extint_chan_set_config(BUTTON_0_EIC_LINE_custom, &config_extint_chan);
     cf2:	f7ff fc8b 	bl	60c <extint_chan_set_config>
}
     cf6:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00000cf8 <configure_extint_callbacks>:
{
     cf8:	b510      	push	{r4, lr}
	extint_register_callback(extint_detection_callback,
     cfa:	2200      	movs	r2, #0
     cfc:	2101      	movs	r1, #1
     cfe:	4804      	ldr	r0, [pc, #16]	; (d10 <configure_extint_callbacks+0x18>)
     d00:	f7ff fbf6 	bl	4f0 <extint_register_callback>
	extint_chan_enable_callback(BUTTON_0_EIC_LINE_custom,
     d04:	2100      	movs	r1, #0
     d06:	2001      	movs	r0, #1
     d08:	f7ff fc06 	bl	518 <extint_chan_enable_callback>
}
     d0c:	bd10      	pop	{r4, pc}
     d0e:	46c0      	nop			; (mov r8, r8)
     d10:	00000bad 	.word	0x00000bad

00000d14 <startup_default_pin_state>:
		port_base->OUTCLR.reg = pin_mask;
     d14:	2240      	movs	r2, #64	; 0x40
     d16:	4b07      	ldr	r3, [pc, #28]	; (d34 <startup_default_pin_state+0x20>)
     d18:	615a      	str	r2, [r3, #20]
		port_base->OUTSET.reg = pin_mask;
     d1a:	1892      	adds	r2, r2, r2
     d1c:	619a      	str	r2, [r3, #24]
		port_base->OUTCLR.reg = pin_mask;
     d1e:	2280      	movs	r2, #128	; 0x80
     d20:	0212      	lsls	r2, r2, #8
     d22:	615a      	str	r2, [r3, #20]
     d24:	2280      	movs	r2, #128	; 0x80
     d26:	0112      	lsls	r2, r2, #4
     d28:	615a      	str	r2, [r3, #20]
		port_base->OUTSET.reg = pin_mask;
     d2a:	2208      	movs	r2, #8
     d2c:	619a      	str	r2, [r3, #24]
		port_base->OUTCLR.reg = pin_mask;
     d2e:	3a04      	subs	r2, #4
     d30:	615a      	str	r2, [r3, #20]
	 port_pin_set_output_level(SWITCH_OFF_PIN,HIGH); // at high rev 2
	 port_pin_set_output_level(BUTTON_2,LOW);
	 port_pin_set_output_level(BAT_CHARGED_PIN,LOW);
	 port_pin_set_output_level(CHARGN_OFF_PIN,HIGH);
	 port_pin_set_output_level(SAMPLE_ADC_PIN,LOW);
 }
     d32:	4770      	bx	lr
     d34:	41004400 	.word	0x41004400

00000d38 <startup_sys_configs>:


/************************************************************************/
/* SYSTEM startup function call (config functions)						*/
/************************************************************************/
void startup_sys_configs(void){
     d38:	b510      	push	{r4, lr}
	system_init();									// System Initialize
     d3a:	f000 fe74 	bl	1a26 <system_init>
	cpu_irq_enable();
     d3e:	2201      	movs	r2, #1
     d40:	4b0c      	ldr	r3, [pc, #48]	; (d74 <startup_sys_configs+0x3c>)
     d42:	701a      	strb	r2, [r3, #0]
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     d44:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     d48:	b662      	cpsie	i
	system_interrupt_enable_global();				// System Interrupts
	configure_port_pins();							// System PORTs
     d4a:	f7ff ff30 	bl	bae <configure_port_pins>
	startup_default_pin_state();
     d4e:	f7ff ffe1 	bl	d14 <startup_default_pin_state>
	i2c_master_setup();								// Startup I2C
     d52:	f001 fc3b 	bl	25cc <i2c_master_setup>


	configure_system_tc();							// System Clock
     d56:	f7ff ff67 	bl	c28 <configure_system_tc>
	system_tc_callbacks();							// System Clock Callback
     d5a:	f7ff ff99 	bl	c90 <system_tc_callbacks>
	configure_pwm_tcc();							// Startup PWM
     d5e:	f7ff fd0d 	bl	77c <configure_pwm_tcc>
	configure_adc();
     d62:	f7ff f9d1 	bl	108 <configure_adc>
	configure_pwm_generator();
     d66:	f7ff fd5f 	bl	828 <configure_pwm_generator>


	configure_extint_channel();
     d6a:	f7ff ffb3 	bl	cd4 <configure_extint_channel>
	configure_extint_callbacks();
     d6e:	f7ff ffc3 	bl	cf8 <configure_extint_callbacks>
	extint_detection_callback();


     d72:	bd10      	pop	{r4, pc}
     d74:	20000009 	.word	0x20000009

00000d78 <update_battery_states>:
	return (port_base->IN.reg & pin_mask);
     d78:	2101      	movs	r1, #1
     d7a:	4b06      	ldr	r3, [pc, #24]	; (d94 <update_battery_states+0x1c>)
#define CHARGED_STATE port_pin_get_input_level(BAT_CHARGED_PIN)
//#define CHARGN_OFF_STATE port_pin_get_input_level(CHARGN_OFF_PIN)


void update_battery_states(void) {
  Vbus_State = VBUS_STATE;
     d7c:	4806      	ldr	r0, [pc, #24]	; (d98 <update_battery_states+0x20>)
     d7e:	6a1a      	ldr	r2, [r3, #32]
     d80:	0ed2      	lsrs	r2, r2, #27
     d82:	400a      	ands	r2, r1
     d84:	7002      	strb	r2, [r0, #0]
     d86:	6a1b      	ldr	r3, [r3, #32]
  Charged_State = CHARGED_STATE;
     d88:	4a04      	ldr	r2, [pc, #16]	; (d9c <update_battery_states+0x24>)
     d8a:	0adb      	lsrs	r3, r3, #11
     d8c:	400b      	ands	r3, r1
     d8e:	7013      	strb	r3, [r2, #0]
}
     d90:	4770      	bx	lr
     d92:	46c0      	nop			; (mov r8, r8)
     d94:	41004400 	.word	0x41004400
     d98:	200001f5 	.word	0x200001f5
     d9c:	200001f7 	.word	0x200001f7

00000da0 <display_battery_state>:

/************************************************************************/
/* Indication LED Control                                               */
/************************************************************************/

void display_battery_state(void) {
     da0:	b510      	push	{r4, lr}
  2. Steady red light when device has a low battery
  3. Blinking green light when device is charging
  4. Steady green light when the device is at least 100% charged.
  */

	if (Vbus_State) {
     da2:	4b13      	ldr	r3, [pc, #76]	; (df0 <display_battery_state+0x50>)
     da4:	781b      	ldrb	r3, [r3, #0]
     da6:	2b00      	cmp	r3, #0
     da8:	d009      	beq.n	dbe <display_battery_state+0x1e>
	
		if (!Charged_State) {
     daa:	4b12      	ldr	r3, [pc, #72]	; (df4 <display_battery_state+0x54>)
     dac:	781b      	ldrb	r3, [r3, #0]
     dae:	2b00      	cmp	r3, #0
     db0:	d102      	bne.n	db8 <display_battery_state+0x18>
			set_battery_charge_routine();						//  blink
     db2:	f001 faa9 	bl	2308 <set_battery_charge_routine>
					set_color_yellow_indication();			// ideal situation
					}	
		}else{
		}
	}
}
     db6:	bd10      	pop	{r4, pc}
			set_color_green_indication();
     db8:	f001 fa54 	bl	2264 <set_color_green_indication>
     dbc:	e7fb      	b.n	db6 <display_battery_state+0x16>
		if (!motor_running){
     dbe:	4b0e      	ldr	r3, [pc, #56]	; (df8 <display_battery_state+0x58>)
     dc0:	781b      	ldrb	r3, [r3, #0]
     dc2:	2b00      	cmp	r3, #0
     dc4:	d1f7      	bne.n	db6 <display_battery_state+0x16>
				if (BATTERY_LOWEST) {
     dc6:	4b0d      	ldr	r3, [pc, #52]	; (dfc <display_battery_state+0x5c>)
     dc8:	781b      	ldrb	r3, [r3, #0]
     dca:	2b00      	cmp	r3, #0
     dcc:	d002      	beq.n	dd4 <display_battery_state+0x34>
					set_battery_low_routine();				//  blink
     dce:	f001 fae5 	bl	239c <set_battery_low_routine>
     dd2:	e7f0      	b.n	db6 <display_battery_state+0x16>
					} else if (BATTERY_LOW) {
     dd4:	4b0a      	ldr	r3, [pc, #40]	; (e00 <display_battery_state+0x60>)
     dd6:	781b      	ldrb	r3, [r3, #0]
     dd8:	2b00      	cmp	r3, #0
     dda:	d002      	beq.n	de2 <display_battery_state+0x42>
					set_color_red_indication();
     ddc:	f001 fa5c 	bl	2298 <set_color_red_indication>
     de0:	e7e9      	b.n	db6 <display_battery_state+0x16>
					} else if (BATTERY_CHARGED) {
     de2:	4b08      	ldr	r3, [pc, #32]	; (e04 <display_battery_state+0x64>)
     de4:	781b      	ldrb	r3, [r3, #0]
     de6:	2b00      	cmp	r3, #0
     de8:	d1e6      	bne.n	db8 <display_battery_state+0x18>
					set_color_yellow_indication();			// ideal situation
     dea:	f001 fa71 	bl	22d0 <set_color_yellow_indication>
}
     dee:	e7e2      	b.n	db6 <display_battery_state+0x16>
     df0:	200001f5 	.word	0x200001f5
     df4:	200001f7 	.word	0x200001f7
     df8:	20000039 	.word	0x20000039
     dfc:	2000003e 	.word	0x2000003e
     e00:	2000003d 	.word	0x2000003d
     e04:	2000003b 	.word	0x2000003b

00000e08 <system_state>:

/************************************************************************/
/* STATE MACHINE		                                                */
/************************************************************************/

void system_state(void) {
     e08:	b510      	push	{r4, lr}
  update_battery_states();
     e0a:	f7ff ffb5 	bl	d78 <update_battery_states>
  display_battery_state();
     e0e:	f7ff ffc7 	bl	da0 <display_battery_state>
     e12:	bd10      	pop	{r4, pc}

00000e14 <cpu_irq_enter_critical>:
     e14:	4b09      	ldr	r3, [pc, #36]	; (e3c <cpu_irq_enter_critical+0x28>)
     e16:	6819      	ldr	r1, [r3, #0]
     e18:	2900      	cmp	r1, #0
     e1a:	d10b      	bne.n	e34 <cpu_irq_enter_critical+0x20>
     e1c:	f3ef 8010 	mrs	r0, PRIMASK
     e20:	4a07      	ldr	r2, [pc, #28]	; (e40 <cpu_irq_enter_critical+0x2c>)
     e22:	2800      	cmp	r0, #0
     e24:	d105      	bne.n	e32 <cpu_irq_enter_critical+0x1e>
     e26:	b672      	cpsid	i
     e28:	f3bf 8f5f 	dmb	sy
     e2c:	4905      	ldr	r1, [pc, #20]	; (e44 <cpu_irq_enter_critical+0x30>)
     e2e:	7008      	strb	r0, [r1, #0]
     e30:	2101      	movs	r1, #1
     e32:	7011      	strb	r1, [r2, #0]
     e34:	681a      	ldr	r2, [r3, #0]
     e36:	3201      	adds	r2, #1
     e38:	601a      	str	r2, [r3, #0]
     e3a:	4770      	bx	lr
     e3c:	2000005c 	.word	0x2000005c
     e40:	20000060 	.word	0x20000060
     e44:	20000009 	.word	0x20000009

00000e48 <cpu_irq_leave_critical>:
     e48:	4b08      	ldr	r3, [pc, #32]	; (e6c <cpu_irq_leave_critical+0x24>)
     e4a:	681a      	ldr	r2, [r3, #0]
     e4c:	3a01      	subs	r2, #1
     e4e:	601a      	str	r2, [r3, #0]
     e50:	681b      	ldr	r3, [r3, #0]
     e52:	2b00      	cmp	r3, #0
     e54:	d109      	bne.n	e6a <cpu_irq_leave_critical+0x22>
     e56:	4b06      	ldr	r3, [pc, #24]	; (e70 <cpu_irq_leave_critical+0x28>)
     e58:	781b      	ldrb	r3, [r3, #0]
     e5a:	2b00      	cmp	r3, #0
     e5c:	d005      	beq.n	e6a <cpu_irq_leave_critical+0x22>
     e5e:	2201      	movs	r2, #1
     e60:	4b04      	ldr	r3, [pc, #16]	; (e74 <cpu_irq_leave_critical+0x2c>)
     e62:	701a      	strb	r2, [r3, #0]
     e64:	f3bf 8f5f 	dmb	sy
     e68:	b662      	cpsie	i
     e6a:	4770      	bx	lr
     e6c:	2000005c 	.word	0x2000005c
     e70:	20000060 	.word	0x20000060
     e74:	20000009 	.word	0x20000009

00000e78 <port_pin_set_config>:
     e78:	b507      	push	{r0, r1, r2, lr}
     e7a:	2280      	movs	r2, #128	; 0x80
     e7c:	ab01      	add	r3, sp, #4
     e7e:	701a      	strb	r2, [r3, #0]
     e80:	780a      	ldrb	r2, [r1, #0]
     e82:	705a      	strb	r2, [r3, #1]
     e84:	784a      	ldrb	r2, [r1, #1]
     e86:	709a      	strb	r2, [r3, #2]
     e88:	788a      	ldrb	r2, [r1, #2]
     e8a:	0019      	movs	r1, r3
     e8c:	70da      	strb	r2, [r3, #3]
     e8e:	f000 fdb5 	bl	19fc <system_pinmux_pin_set_config>
     e92:	bd07      	pop	{r0, r1, r2, pc}

00000e94 <_i2c_master_wait_for_sync>:
     e94:	2307      	movs	r3, #7
     e96:	6801      	ldr	r1, [r0, #0]
     e98:	69ca      	ldr	r2, [r1, #28]
     e9a:	421a      	tst	r2, r3
     e9c:	d1fc      	bne.n	e98 <_i2c_master_wait_for_sync+0x4>
     e9e:	4770      	bx	lr

00000ea0 <i2c_master_init>:
     ea0:	b5f0      	push	{r4, r5, r6, r7, lr}
     ea2:	0005      	movs	r5, r0
     ea4:	b085      	sub	sp, #20
     ea6:	6029      	str	r1, [r5, #0]
     ea8:	0008      	movs	r0, r1
     eaa:	0014      	movs	r4, r2
     eac:	000e      	movs	r6, r1
     eae:	f000 faf7 	bl	14a0 <_sercom_get_sercom_inst_index>
     eb2:	2701      	movs	r7, #1
     eb4:	1c83      	adds	r3, r0, #2
     eb6:	409f      	lsls	r7, r3
     eb8:	003b      	movs	r3, r7
     eba:	4a5c      	ldr	r2, [pc, #368]	; (102c <i2c_master_init+0x18c>)
     ebc:	300e      	adds	r0, #14
     ebe:	6a11      	ldr	r1, [r2, #32]
     ec0:	b2c7      	uxtb	r7, r0
     ec2:	430b      	orrs	r3, r1
     ec4:	6213      	str	r3, [r2, #32]
     ec6:	7b23      	ldrb	r3, [r4, #12]
     ec8:	aa02      	add	r2, sp, #8
     eca:	0011      	movs	r1, r2
     ecc:	0038      	movs	r0, r7
     ece:	7013      	strb	r3, [r2, #0]
     ed0:	f000 fd32 	bl	1938 <system_gclk_chan_set_config>
     ed4:	0038      	movs	r0, r7
     ed6:	f000 fcf3 	bl	18c0 <system_gclk_chan_enable>
     eda:	7b20      	ldrb	r0, [r4, #12]
     edc:	2100      	movs	r1, #0
     ede:	f000 fa67 	bl	13b0 <sercom_set_gclk_generator>
     ee2:	6833      	ldr	r3, [r6, #0]
     ee4:	201c      	movs	r0, #28
     ee6:	079b      	lsls	r3, r3, #30
     ee8:	d500      	bpl.n	eec <i2c_master_init+0x4c>
     eea:	e09d      	b.n	1028 <i2c_master_init+0x188>
     eec:	2201      	movs	r2, #1
     eee:	6833      	ldr	r3, [r6, #0]
     ef0:	3817      	subs	r0, #23
     ef2:	401a      	ands	r2, r3
     ef4:	9200      	str	r2, [sp, #0]
     ef6:	d000      	beq.n	efa <i2c_master_init+0x5a>
     ef8:	e096      	b.n	1028 <i2c_master_init+0x188>
     efa:	6828      	ldr	r0, [r5, #0]
     efc:	f000 fad0 	bl	14a0 <_sercom_get_sercom_inst_index>
     f00:	0007      	movs	r7, r0
     f02:	494b      	ldr	r1, [pc, #300]	; (1030 <i2c_master_init+0x190>)
     f04:	f000 faea 	bl	14dc <_sercom_set_handler>
     f08:	4b4a      	ldr	r3, [pc, #296]	; (1034 <i2c_master_init+0x194>)
     f0a:	00bf      	lsls	r7, r7, #2
     f0c:	50fd      	str	r5, [r7, r3]
     f0e:	466b      	mov	r3, sp
     f10:	781b      	ldrb	r3, [r3, #0]
     f12:	466a      	mov	r2, sp
     f14:	762b      	strb	r3, [r5, #24]
     f16:	466b      	mov	r3, sp
     f18:	781b      	ldrb	r3, [r3, #0]
     f1a:	7812      	ldrb	r2, [r2, #0]
     f1c:	766b      	strb	r3, [r5, #25]
     f1e:	466b      	mov	r3, sp
     f20:	881b      	ldrh	r3, [r3, #0]
     f22:	836b      	strh	r3, [r5, #26]
     f24:	466b      	mov	r3, sp
     f26:	881b      	ldrh	r3, [r3, #0]
     f28:	83ab      	strh	r3, [r5, #28]
     f2a:	1dab      	adds	r3, r5, #6
     f2c:	77da      	strb	r2, [r3, #31]
     f2e:	9b00      	ldr	r3, [sp, #0]
     f30:	622b      	str	r3, [r5, #32]
     f32:	2314      	movs	r3, #20
     f34:	6033      	str	r3, [r6, #0]
     f36:	682f      	ldr	r7, [r5, #0]
     f38:	ae03      	add	r6, sp, #12
     f3a:	0038      	movs	r0, r7
     f3c:	f000 fab0 	bl	14a0 <_sercom_get_sercom_inst_index>
     f40:	2380      	movs	r3, #128	; 0x80
     f42:	7033      	strb	r3, [r6, #0]
     f44:	466b      	mov	r3, sp
     f46:	781b      	ldrb	r3, [r3, #0]
     f48:	9001      	str	r0, [sp, #4]
     f4a:	7073      	strb	r3, [r6, #1]
     f4c:	2301      	movs	r3, #1
     f4e:	70b3      	strb	r3, [r6, #2]
     f50:	466b      	mov	r3, sp
     f52:	781b      	ldrb	r3, [r3, #0]
     f54:	69e0      	ldr	r0, [r4, #28]
     f56:	70f3      	strb	r3, [r6, #3]
     f58:	6a23      	ldr	r3, [r4, #32]
     f5a:	9300      	str	r3, [sp, #0]
     f5c:	2800      	cmp	r0, #0
     f5e:	d103      	bne.n	f68 <i2c_master_init+0xc8>
     f60:	0001      	movs	r1, r0
     f62:	0038      	movs	r0, r7
     f64:	f000 fa42 	bl	13ec <_sercom_get_default_pad>
     f68:	2302      	movs	r3, #2
     f6a:	7030      	strb	r0, [r6, #0]
     f6c:	0c00      	lsrs	r0, r0, #16
     f6e:	b2c0      	uxtb	r0, r0
     f70:	0031      	movs	r1, r6
     f72:	7073      	strb	r3, [r6, #1]
     f74:	f000 fd42 	bl	19fc <system_pinmux_pin_set_config>
     f78:	9b00      	ldr	r3, [sp, #0]
     f7a:	2b00      	cmp	r3, #0
     f7c:	d104      	bne.n	f88 <i2c_master_init+0xe8>
     f7e:	2101      	movs	r1, #1
     f80:	0038      	movs	r0, r7
     f82:	f000 fa33 	bl	13ec <_sercom_get_default_pad>
     f86:	9000      	str	r0, [sp, #0]
     f88:	466b      	mov	r3, sp
     f8a:	781b      	ldrb	r3, [r3, #0]
     f8c:	0031      	movs	r1, r6
     f8e:	7033      	strb	r3, [r6, #0]
     f90:	2302      	movs	r3, #2
     f92:	7073      	strb	r3, [r6, #1]
     f94:	9b00      	ldr	r3, [sp, #0]
     f96:	0c18      	lsrs	r0, r3, #16
     f98:	b2c0      	uxtb	r0, r0
     f9a:	f000 fd2f 	bl	19fc <system_pinmux_pin_set_config>
     f9e:	8aa3      	ldrh	r3, [r4, #20]
     fa0:	80eb      	strh	r3, [r5, #6]
     fa2:	8ae3      	ldrh	r3, [r4, #22]
     fa4:	812b      	strh	r3, [r5, #8]
     fa6:	7e22      	ldrb	r2, [r4, #24]
     fa8:	2380      	movs	r3, #128	; 0x80
     faa:	2a00      	cmp	r2, #0
     fac:	d106      	bne.n	fbc <i2c_master_init+0x11c>
     fae:	4b22      	ldr	r3, [pc, #136]	; (1038 <i2c_master_init+0x198>)
     fb0:	3202      	adds	r2, #2
     fb2:	789b      	ldrb	r3, [r3, #2]
     fb4:	4013      	ands	r3, r2
     fb6:	1e5a      	subs	r2, r3, #1
     fb8:	4193      	sbcs	r3, r2
     fba:	01db      	lsls	r3, r3, #7
     fbc:	68a1      	ldr	r1, [r4, #8]
     fbe:	6922      	ldr	r2, [r4, #16]
     fc0:	430a      	orrs	r2, r1
     fc2:	4313      	orrs	r3, r2
     fc4:	1d62      	adds	r2, r4, #5
     fc6:	7fd2      	ldrb	r2, [r2, #31]
     fc8:	2a00      	cmp	r2, #0
     fca:	d002      	beq.n	fd2 <i2c_master_init+0x132>
     fcc:	2280      	movs	r2, #128	; 0x80
     fce:	05d2      	lsls	r2, r2, #23
     fd0:	4313      	orrs	r3, r2
     fd2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
     fd4:	4313      	orrs	r3, r2
     fd6:	0022      	movs	r2, r4
     fd8:	322c      	adds	r2, #44	; 0x2c
     fda:	7812      	ldrb	r2, [r2, #0]
     fdc:	2a00      	cmp	r2, #0
     fde:	d103      	bne.n	fe8 <i2c_master_init+0x148>
     fe0:	2280      	movs	r2, #128	; 0x80
     fe2:	0492      	lsls	r2, r2, #18
     fe4:	4291      	cmp	r1, r2
     fe6:	d102      	bne.n	fee <i2c_master_init+0x14e>
     fe8:	2280      	movs	r2, #128	; 0x80
     fea:	0512      	lsls	r2, r2, #20
     fec:	4313      	orrs	r3, r2
     fee:	0022      	movs	r2, r4
     ff0:	322d      	adds	r2, #45	; 0x2d
     ff2:	7812      	ldrb	r2, [r2, #0]
     ff4:	2a00      	cmp	r2, #0
     ff6:	d002      	beq.n	ffe <i2c_master_init+0x15e>
     ff8:	2280      	movs	r2, #128	; 0x80
     ffa:	0412      	lsls	r2, r2, #16
     ffc:	4313      	orrs	r3, r2
     ffe:	342e      	adds	r4, #46	; 0x2e
    1000:	7822      	ldrb	r2, [r4, #0]
    1002:	2a00      	cmp	r2, #0
    1004:	d002      	beq.n	100c <i2c_master_init+0x16c>
    1006:	2280      	movs	r2, #128	; 0x80
    1008:	03d2      	lsls	r2, r2, #15
    100a:	4313      	orrs	r3, r2
    100c:	683a      	ldr	r2, [r7, #0]
    100e:	9801      	ldr	r0, [sp, #4]
    1010:	4313      	orrs	r3, r2
    1012:	603b      	str	r3, [r7, #0]
    1014:	2380      	movs	r3, #128	; 0x80
    1016:	300e      	adds	r0, #14
    1018:	005b      	lsls	r3, r3, #1
    101a:	607b      	str	r3, [r7, #4]
    101c:	b2c0      	uxtb	r0, r0
    101e:	f000 fc97 	bl	1950 <system_gclk_chan_get_hz>
    1022:	2323      	movs	r3, #35	; 0x23
    1024:	2000      	movs	r0, #0
    1026:	60fb      	str	r3, [r7, #12]
    1028:	b005      	add	sp, #20
    102a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    102c:	40000400 	.word	0x40000400
    1030:	00001231 	.word	0x00001231
    1034:	200001f8 	.word	0x200001f8
    1038:	41002000 	.word	0x41002000

0000103c <_i2c_master_address_response>:
    103c:	2202      	movs	r2, #2
    103e:	6803      	ldr	r3, [r0, #0]
    1040:	7e19      	ldrb	r1, [r3, #24]
    1042:	4211      	tst	r1, r2
    1044:	d006      	beq.n	1054 <_i2c_master_address_response+0x18>
    1046:	761a      	strb	r2, [r3, #24]
    1048:	8b5b      	ldrh	r3, [r3, #26]
    104a:	2041      	movs	r0, #65	; 0x41
    104c:	4213      	tst	r3, r2
    104e:	d10a      	bne.n	1066 <_i2c_master_address_response+0x2a>
    1050:	2000      	movs	r0, #0
    1052:	e008      	b.n	1066 <_i2c_master_address_response+0x2a>
    1054:	8b5a      	ldrh	r2, [r3, #26]
    1056:	0752      	lsls	r2, r2, #29
    1058:	d5fa      	bpl.n	1050 <_i2c_master_address_response+0x14>
    105a:	22c0      	movs	r2, #192	; 0xc0
    105c:	2018      	movs	r0, #24
    105e:	6859      	ldr	r1, [r3, #4]
    1060:	0292      	lsls	r2, r2, #10
    1062:	430a      	orrs	r2, r1
    1064:	605a      	str	r2, [r3, #4]
    1066:	4770      	bx	lr

00001068 <_i2c_master_wait_for_bus>:
    1068:	b570      	push	{r4, r5, r6, lr}
    106a:	2200      	movs	r2, #0
    106c:	2601      	movs	r6, #1
    106e:	2402      	movs	r4, #2
    1070:	6801      	ldr	r1, [r0, #0]
    1072:	7e0b      	ldrb	r3, [r1, #24]
    1074:	4033      	ands	r3, r6
    1076:	d102      	bne.n	107e <_i2c_master_wait_for_bus+0x16>
    1078:	7e0d      	ldrb	r5, [r1, #24]
    107a:	4225      	tst	r5, r4
    107c:	d001      	beq.n	1082 <_i2c_master_wait_for_bus+0x1a>
    107e:	2000      	movs	r0, #0
    1080:	e005      	b.n	108e <_i2c_master_wait_for_bus+0x26>
    1082:	3201      	adds	r2, #1
    1084:	8903      	ldrh	r3, [r0, #8]
    1086:	b292      	uxth	r2, r2
    1088:	4293      	cmp	r3, r2
    108a:	d8f2      	bhi.n	1072 <_i2c_master_wait_for_bus+0xa>
    108c:	2012      	movs	r0, #18
    108e:	bd70      	pop	{r4, r5, r6, pc}

00001090 <_i2c_master_send_hs_master_code>:
    1090:	2380      	movs	r3, #128	; 0x80
    1092:	b510      	push	{r4, lr}
    1094:	6804      	ldr	r4, [r0, #0]
    1096:	02db      	lsls	r3, r3, #11
    1098:	6862      	ldr	r2, [r4, #4]
    109a:	4313      	orrs	r3, r2
    109c:	6063      	str	r3, [r4, #4]
    109e:	6261      	str	r1, [r4, #36]	; 0x24
    10a0:	f7ff ffe2 	bl	1068 <_i2c_master_wait_for_bus>
    10a4:	2301      	movs	r3, #1
    10a6:	7623      	strb	r3, [r4, #24]
    10a8:	bd10      	pop	{r4, pc}
	...

000010ac <_i2c_master_write_packet>:
    10ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    10ae:	000f      	movs	r7, r1
    10b0:	884b      	ldrh	r3, [r1, #2]
    10b2:	0005      	movs	r5, r0
    10b4:	9301      	str	r3, [sp, #4]
    10b6:	6804      	ldr	r4, [r0, #0]
    10b8:	f7ff feec 	bl	e94 <_i2c_master_wait_for_sync>
    10bc:	7a7b      	ldrb	r3, [r7, #9]
    10be:	2b00      	cmp	r3, #0
    10c0:	d003      	beq.n	10ca <_i2c_master_write_packet+0x1e>
    10c2:	7ab9      	ldrb	r1, [r7, #10]
    10c4:	0028      	movs	r0, r5
    10c6:	f7ff ffe3 	bl	1090 <_i2c_master_send_hs_master_code>
    10ca:	6863      	ldr	r3, [r4, #4]
    10cc:	4a24      	ldr	r2, [pc, #144]	; (1160 <_i2c_master_write_packet+0xb4>)
    10ce:	4013      	ands	r3, r2
    10d0:	6063      	str	r3, [r4, #4]
    10d2:	7a7a      	ldrb	r2, [r7, #9]
    10d4:	883b      	ldrh	r3, [r7, #0]
    10d6:	7a39      	ldrb	r1, [r7, #8]
    10d8:	005b      	lsls	r3, r3, #1
    10da:	0392      	lsls	r2, r2, #14
    10dc:	4313      	orrs	r3, r2
    10de:	2900      	cmp	r1, #0
    10e0:	d002      	beq.n	10e8 <_i2c_master_write_packet+0x3c>
    10e2:	2280      	movs	r2, #128	; 0x80
    10e4:	0212      	lsls	r2, r2, #8
    10e6:	4313      	orrs	r3, r2
    10e8:	6263      	str	r3, [r4, #36]	; 0x24
    10ea:	0028      	movs	r0, r5
    10ec:	f7ff ffbc 	bl	1068 <_i2c_master_wait_for_bus>
    10f0:	1e06      	subs	r6, r0, #0
    10f2:	d115      	bne.n	1120 <_i2c_master_write_packet+0x74>
    10f4:	0028      	movs	r0, r5
    10f6:	f7ff ffa1 	bl	103c <_i2c_master_address_response>
    10fa:	1e06      	subs	r6, r0, #0
    10fc:	d110      	bne.n	1120 <_i2c_master_write_packet+0x74>
    10fe:	9000      	str	r0, [sp, #0]
    1100:	9b00      	ldr	r3, [sp, #0]
    1102:	9a01      	ldr	r2, [sp, #4]
    1104:	4293      	cmp	r3, r2
    1106:	d10d      	bne.n	1124 <_i2c_master_write_packet+0x78>
    1108:	2600      	movs	r6, #0
    110a:	7aab      	ldrb	r3, [r5, #10]
    110c:	2b00      	cmp	r3, #0
    110e:	d007      	beq.n	1120 <_i2c_master_write_packet+0x74>
    1110:	0028      	movs	r0, r5
    1112:	f7ff febf 	bl	e94 <_i2c_master_wait_for_sync>
    1116:	23c0      	movs	r3, #192	; 0xc0
    1118:	6862      	ldr	r2, [r4, #4]
    111a:	029b      	lsls	r3, r3, #10
    111c:	4313      	orrs	r3, r2
    111e:	6063      	str	r3, [r4, #4]
    1120:	0030      	movs	r0, r6
    1122:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    1124:	2220      	movs	r2, #32
    1126:	8b63      	ldrh	r3, [r4, #26]
    1128:	4213      	tst	r3, r2
    112a:	d016      	beq.n	115a <_i2c_master_write_packet+0xae>
    112c:	0028      	movs	r0, r5
    112e:	f7ff feb1 	bl	e94 <_i2c_master_wait_for_sync>
    1132:	687b      	ldr	r3, [r7, #4]
    1134:	9a00      	ldr	r2, [sp, #0]
    1136:	0028      	movs	r0, r5
    1138:	5c9a      	ldrb	r2, [r3, r2]
    113a:	0023      	movs	r3, r4
    113c:	3328      	adds	r3, #40	; 0x28
    113e:	701a      	strb	r2, [r3, #0]
    1140:	f7ff ff92 	bl	1068 <_i2c_master_wait_for_bus>
    1144:	1e06      	subs	r6, r0, #0
    1146:	d1e0      	bne.n	110a <_i2c_master_write_packet+0x5e>
    1148:	9a00      	ldr	r2, [sp, #0]
    114a:	8b63      	ldrh	r3, [r4, #26]
    114c:	3201      	adds	r2, #1
    114e:	9200      	str	r2, [sp, #0]
    1150:	2204      	movs	r2, #4
    1152:	4213      	tst	r3, r2
    1154:	d0d4      	beq.n	1100 <_i2c_master_write_packet+0x54>
    1156:	261e      	movs	r6, #30
    1158:	e7d7      	b.n	110a <_i2c_master_write_packet+0x5e>
    115a:	2641      	movs	r6, #65	; 0x41
    115c:	e7e0      	b.n	1120 <_i2c_master_write_packet+0x74>
    115e:	46c0      	nop			; (mov r8, r8)
    1160:	fffbffff 	.word	0xfffbffff

00001164 <i2c_master_write_packet_wait>:
    1164:	b510      	push	{r4, lr}
    1166:	8b82      	ldrh	r2, [r0, #28]
    1168:	0003      	movs	r3, r0
    116a:	2005      	movs	r0, #5
    116c:	2a00      	cmp	r2, #0
    116e:	d105      	bne.n	117c <i2c_master_write_packet_wait+0x18>
    1170:	3201      	adds	r2, #1
    1172:	729a      	strb	r2, [r3, #10]
    1174:	72da      	strb	r2, [r3, #11]
    1176:	0018      	movs	r0, r3
    1178:	f7ff ff98 	bl	10ac <_i2c_master_write_packet>
    117c:	bd10      	pop	{r4, pc}

0000117e <_i2c_master_wait_for_sync>:
    117e:	2307      	movs	r3, #7
    1180:	6801      	ldr	r1, [r0, #0]
    1182:	69ca      	ldr	r2, [r1, #28]
    1184:	421a      	tst	r2, r3
    1186:	d1fc      	bne.n	1182 <_i2c_master_wait_for_sync+0x4>
    1188:	4770      	bx	lr

0000118a <_i2c_master_read>:
    118a:	b570      	push	{r4, r5, r6, lr}
    118c:	6805      	ldr	r5, [r0, #0]
    118e:	0004      	movs	r4, r0
    1190:	682a      	ldr	r2, [r5, #0]
    1192:	8b46      	ldrh	r6, [r0, #26]
    1194:	8b83      	ldrh	r3, [r0, #28]
    1196:	1af6      	subs	r6, r6, r3
    1198:	8b83      	ldrh	r3, [r0, #28]
    119a:	b2b6      	uxth	r6, r6
    119c:	3b01      	subs	r3, #1
    119e:	b29b      	uxth	r3, r3
    11a0:	8383      	strh	r3, [r0, #28]
    11a2:	7ac3      	ldrb	r3, [r0, #11]
    11a4:	0112      	lsls	r2, r2, #4
    11a6:	d50a      	bpl.n	11be <_i2c_master_read+0x34>
    11a8:	2b00      	cmp	r3, #0
    11aa:	d00d      	beq.n	11c8 <_i2c_master_read+0x3e>
    11ac:	8b83      	ldrh	r3, [r0, #28]
    11ae:	2b01      	cmp	r3, #1
    11b0:	d10a      	bne.n	11c8 <_i2c_master_read+0x3e>
    11b2:	2380      	movs	r3, #128	; 0x80
    11b4:	686a      	ldr	r2, [r5, #4]
    11b6:	02db      	lsls	r3, r3, #11
    11b8:	4313      	orrs	r3, r2
    11ba:	606b      	str	r3, [r5, #4]
    11bc:	e004      	b.n	11c8 <_i2c_master_read+0x3e>
    11be:	2b00      	cmp	r3, #0
    11c0:	d002      	beq.n	11c8 <_i2c_master_read+0x3e>
    11c2:	8b83      	ldrh	r3, [r0, #28]
    11c4:	2b00      	cmp	r3, #0
    11c6:	d0f4      	beq.n	11b2 <_i2c_master_read+0x28>
    11c8:	8ba3      	ldrh	r3, [r4, #28]
    11ca:	2b00      	cmp	r3, #0
    11cc:	d10a      	bne.n	11e4 <_i2c_master_read+0x5a>
    11ce:	7aa3      	ldrb	r3, [r4, #10]
    11d0:	2b00      	cmp	r3, #0
    11d2:	d007      	beq.n	11e4 <_i2c_master_read+0x5a>
    11d4:	0020      	movs	r0, r4
    11d6:	f7ff ffd2 	bl	117e <_i2c_master_wait_for_sync>
    11da:	23c0      	movs	r3, #192	; 0xc0
    11dc:	686a      	ldr	r2, [r5, #4]
    11de:	029b      	lsls	r3, r3, #10
    11e0:	4313      	orrs	r3, r2
    11e2:	606b      	str	r3, [r5, #4]
    11e4:	0020      	movs	r0, r4
    11e6:	f7ff ffca 	bl	117e <_i2c_master_wait_for_sync>
    11ea:	6a23      	ldr	r3, [r4, #32]
    11ec:	3528      	adds	r5, #40	; 0x28
    11ee:	199e      	adds	r6, r3, r6
    11f0:	782b      	ldrb	r3, [r5, #0]
    11f2:	b2db      	uxtb	r3, r3
    11f4:	7033      	strb	r3, [r6, #0]
    11f6:	bd70      	pop	{r4, r5, r6, pc}

000011f8 <_i2c_master_write>:
    11f8:	b570      	push	{r4, r5, r6, lr}
    11fa:	6806      	ldr	r6, [r0, #0]
    11fc:	0004      	movs	r4, r0
    11fe:	8b73      	ldrh	r3, [r6, #26]
    1200:	075b      	lsls	r3, r3, #29
    1202:	d503      	bpl.n	120c <_i2c_master_write+0x14>
    1204:	231e      	movs	r3, #30
    1206:	3406      	adds	r4, #6
    1208:	77e3      	strb	r3, [r4, #31]
    120a:	bd70      	pop	{r4, r5, r6, pc}
    120c:	8b45      	ldrh	r5, [r0, #26]
    120e:	8b83      	ldrh	r3, [r0, #28]
    1210:	3628      	adds	r6, #40	; 0x28
    1212:	1aed      	subs	r5, r5, r3
    1214:	8b83      	ldrh	r3, [r0, #28]
    1216:	b2ad      	uxth	r5, r5
    1218:	3b01      	subs	r3, #1
    121a:	b29b      	uxth	r3, r3
    121c:	8383      	strh	r3, [r0, #28]
    121e:	f7ff ffae 	bl	117e <_i2c_master_wait_for_sync>
    1222:	6a23      	ldr	r3, [r4, #32]
    1224:	195d      	adds	r5, r3, r5
    1226:	782b      	ldrb	r3, [r5, #0]
    1228:	b2db      	uxtb	r3, r3
    122a:	7033      	strb	r3, [r6, #0]
    122c:	e7ed      	b.n	120a <_i2c_master_write+0x12>
	...

00001230 <_i2c_master_interrupt_handler>:
    1230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1232:	4b5e      	ldr	r3, [pc, #376]	; (13ac <_i2c_master_interrupt_handler+0x17c>)
    1234:	0080      	lsls	r0, r0, #2
    1236:	58c4      	ldr	r4, [r0, r3]
    1238:	6825      	ldr	r5, [r4, #0]
    123a:	1da6      	adds	r6, r4, #6
    123c:	682b      	ldr	r3, [r5, #0]
    123e:	7e62      	ldrb	r2, [r4, #25]
    1240:	7e27      	ldrb	r7, [r4, #24]
    1242:	011b      	lsls	r3, r3, #4
    1244:	4017      	ands	r7, r2
    1246:	8b62      	ldrh	r2, [r4, #26]
    1248:	0fdb      	lsrs	r3, r3, #31
    124a:	2a00      	cmp	r2, #0
    124c:	d12e      	bne.n	12ac <_i2c_master_interrupt_handler+0x7c>
    124e:	8ba2      	ldrh	r2, [r4, #28]
    1250:	2a00      	cmp	r2, #0
    1252:	d02b      	beq.n	12ac <_i2c_master_interrupt_handler+0x7c>
    1254:	2301      	movs	r3, #1
    1256:	7e2a      	ldrb	r2, [r5, #24]
    1258:	421a      	tst	r2, r3
    125a:	d006      	beq.n	126a <_i2c_master_interrupt_handler+0x3a>
    125c:	2202      	movs	r2, #2
    125e:	762b      	strb	r3, [r5, #24]
    1260:	8b6b      	ldrh	r3, [r5, #26]
    1262:	4013      	ands	r3, r2
    1264:	d010      	beq.n	1288 <_i2c_master_interrupt_handler+0x58>
    1266:	2341      	movs	r3, #65	; 0x41
    1268:	77f3      	strb	r3, [r6, #31]
    126a:	8ba3      	ldrh	r3, [r4, #28]
    126c:	b29b      	uxth	r3, r3
    126e:	8363      	strh	r3, [r4, #26]
    1270:	7ff3      	ldrb	r3, [r6, #31]
    1272:	2b05      	cmp	r3, #5
    1274:	d13c      	bne.n	12f0 <_i2c_master_interrupt_handler+0xc0>
    1276:	1d63      	adds	r3, r4, #5
    1278:	7fdb      	ldrb	r3, [r3, #31]
    127a:	0020      	movs	r0, r4
    127c:	2b00      	cmp	r3, #0
    127e:	d000      	beq.n	1282 <_i2c_master_interrupt_handler+0x52>
    1280:	e08a      	b.n	1398 <_i2c_master_interrupt_handler+0x168>
    1282:	f7ff ffb9 	bl	11f8 <_i2c_master_write>
    1286:	e033      	b.n	12f0 <_i2c_master_interrupt_handler+0xc0>
    1288:	8b6a      	ldrh	r2, [r5, #26]
    128a:	0752      	lsls	r2, r2, #29
    128c:	d5ed      	bpl.n	126a <_i2c_master_interrupt_handler+0x3a>
    128e:	2218      	movs	r2, #24
    1290:	77f2      	strb	r2, [r6, #31]
    1292:	83a3      	strh	r3, [r4, #28]
    1294:	7aa3      	ldrb	r3, [r4, #10]
    1296:	2b00      	cmp	r3, #0
    1298:	d0e7      	beq.n	126a <_i2c_master_interrupt_handler+0x3a>
    129a:	0020      	movs	r0, r4
    129c:	f7ff ff6f 	bl	117e <_i2c_master_wait_for_sync>
    12a0:	23c0      	movs	r3, #192	; 0xc0
    12a2:	686a      	ldr	r2, [r5, #4]
    12a4:	029b      	lsls	r3, r3, #10
    12a6:	4313      	orrs	r3, r2
    12a8:	606b      	str	r3, [r5, #4]
    12aa:	e7de      	b.n	126a <_i2c_master_interrupt_handler+0x3a>
    12ac:	8b62      	ldrh	r2, [r4, #26]
    12ae:	2a00      	cmp	r2, #0
    12b0:	d05f      	beq.n	1372 <_i2c_master_interrupt_handler+0x142>
    12b2:	8ba2      	ldrh	r2, [r4, #28]
    12b4:	2a00      	cmp	r2, #0
    12b6:	d15c      	bne.n	1372 <_i2c_master_interrupt_handler+0x142>
    12b8:	7ff2      	ldrb	r2, [r6, #31]
    12ba:	2a05      	cmp	r2, #5
    12bc:	d159      	bne.n	1372 <_i2c_master_interrupt_handler+0x142>
    12be:	1d62      	adds	r2, r4, #5
    12c0:	7fd2      	ldrb	r2, [r2, #31]
    12c2:	b2d2      	uxtb	r2, r2
    12c4:	2a00      	cmp	r2, #0
    12c6:	d154      	bne.n	1372 <_i2c_master_interrupt_handler+0x142>
    12c8:	2303      	movs	r3, #3
    12ca:	752b      	strb	r3, [r5, #20]
    12cc:	8362      	strh	r2, [r4, #26]
    12ce:	77f2      	strb	r2, [r6, #31]
    12d0:	7aa3      	ldrb	r3, [r4, #10]
    12d2:	2b00      	cmp	r3, #0
    12d4:	d04a      	beq.n	136c <_i2c_master_interrupt_handler+0x13c>
    12d6:	0020      	movs	r0, r4
    12d8:	f7ff ff51 	bl	117e <_i2c_master_wait_for_sync>
    12dc:	23c0      	movs	r3, #192	; 0xc0
    12de:	686a      	ldr	r2, [r5, #4]
    12e0:	029b      	lsls	r3, r3, #10
    12e2:	4313      	orrs	r3, r2
    12e4:	606b      	str	r3, [r5, #4]
    12e6:	07fb      	lsls	r3, r7, #31
    12e8:	d502      	bpl.n	12f0 <_i2c_master_interrupt_handler+0xc0>
    12ea:	68e3      	ldr	r3, [r4, #12]
    12ec:	0020      	movs	r0, r4
    12ee:	4798      	blx	r3
    12f0:	8b63      	ldrh	r3, [r4, #26]
    12f2:	2b00      	cmp	r3, #0
    12f4:	d01b      	beq.n	132e <_i2c_master_interrupt_handler+0xfe>
    12f6:	8ba3      	ldrh	r3, [r4, #28]
    12f8:	2b00      	cmp	r3, #0
    12fa:	d118      	bne.n	132e <_i2c_master_interrupt_handler+0xfe>
    12fc:	7ff3      	ldrb	r3, [r6, #31]
    12fe:	2b05      	cmp	r3, #5
    1300:	d115      	bne.n	132e <_i2c_master_interrupt_handler+0xfe>
    1302:	1d63      	adds	r3, r4, #5
    1304:	7fda      	ldrb	r2, [r3, #31]
    1306:	2a01      	cmp	r2, #1
    1308:	d111      	bne.n	132e <_i2c_master_interrupt_handler+0xfe>
    130a:	7e29      	ldrb	r1, [r5, #24]
    130c:	3201      	adds	r2, #1
    130e:	4211      	tst	r1, r2
    1310:	d000      	beq.n	1314 <_i2c_master_interrupt_handler+0xe4>
    1312:	762a      	strb	r2, [r5, #24]
    1314:	2203      	movs	r2, #3
    1316:	752a      	strb	r2, [r5, #20]
    1318:	2200      	movs	r2, #0
    131a:	8362      	strh	r2, [r4, #26]
    131c:	77f2      	strb	r2, [r6, #31]
    131e:	07ba      	lsls	r2, r7, #30
    1320:	d53d      	bpl.n	139e <_i2c_master_interrupt_handler+0x16e>
    1322:	7fda      	ldrb	r2, [r3, #31]
    1324:	2a01      	cmp	r2, #1
    1326:	d13a      	bne.n	139e <_i2c_master_interrupt_handler+0x16e>
    1328:	6923      	ldr	r3, [r4, #16]
    132a:	0020      	movs	r0, r4
    132c:	4798      	blx	r3
    132e:	7ff3      	ldrb	r3, [r6, #31]
    1330:	2b05      	cmp	r3, #5
    1332:	d01a      	beq.n	136a <_i2c_master_interrupt_handler+0x13a>
    1334:	7ff3      	ldrb	r3, [r6, #31]
    1336:	2b00      	cmp	r3, #0
    1338:	d017      	beq.n	136a <_i2c_master_interrupt_handler+0x13a>
    133a:	2303      	movs	r3, #3
    133c:	752b      	strb	r3, [r5, #20]
    133e:	2300      	movs	r3, #0
    1340:	8363      	strh	r3, [r4, #26]
    1342:	83a3      	strh	r3, [r4, #28]
    1344:	7ff3      	ldrb	r3, [r6, #31]
    1346:	2b41      	cmp	r3, #65	; 0x41
    1348:	d00a      	beq.n	1360 <_i2c_master_interrupt_handler+0x130>
    134a:	7aa3      	ldrb	r3, [r4, #10]
    134c:	2b00      	cmp	r3, #0
    134e:	d007      	beq.n	1360 <_i2c_master_interrupt_handler+0x130>
    1350:	0020      	movs	r0, r4
    1352:	f7ff ff14 	bl	117e <_i2c_master_wait_for_sync>
    1356:	23e0      	movs	r3, #224	; 0xe0
    1358:	686a      	ldr	r2, [r5, #4]
    135a:	02db      	lsls	r3, r3, #11
    135c:	4313      	orrs	r3, r2
    135e:	606b      	str	r3, [r5, #4]
    1360:	077b      	lsls	r3, r7, #29
    1362:	d502      	bpl.n	136a <_i2c_master_interrupt_handler+0x13a>
    1364:	6963      	ldr	r3, [r4, #20]
    1366:	0020      	movs	r0, r4
    1368:	4798      	blx	r3
    136a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    136c:	2301      	movs	r3, #1
    136e:	762b      	strb	r3, [r5, #24]
    1370:	e7b9      	b.n	12e6 <_i2c_master_interrupt_handler+0xb6>
    1372:	8b62      	ldrh	r2, [r4, #26]
    1374:	2a00      	cmp	r2, #0
    1376:	d0bb      	beq.n	12f0 <_i2c_master_interrupt_handler+0xc0>
    1378:	8ba2      	ldrh	r2, [r4, #28]
    137a:	2a00      	cmp	r2, #0
    137c:	d0b8      	beq.n	12f0 <_i2c_master_interrupt_handler+0xc0>
    137e:	8b6a      	ldrh	r2, [r5, #26]
    1380:	0692      	lsls	r2, r2, #26
    1382:	d500      	bpl.n	1386 <_i2c_master_interrupt_handler+0x156>
    1384:	e777      	b.n	1276 <_i2c_master_interrupt_handler+0x46>
    1386:	2b00      	cmp	r3, #0
    1388:	d003      	beq.n	1392 <_i2c_master_interrupt_handler+0x162>
    138a:	8ba3      	ldrh	r3, [r4, #28]
    138c:	2b01      	cmp	r3, #1
    138e:	d100      	bne.n	1392 <_i2c_master_interrupt_handler+0x162>
    1390:	e771      	b.n	1276 <_i2c_master_interrupt_handler+0x46>
    1392:	2341      	movs	r3, #65	; 0x41
    1394:	77f3      	strb	r3, [r6, #31]
    1396:	e7ab      	b.n	12f0 <_i2c_master_interrupt_handler+0xc0>
    1398:	f7ff fef7 	bl	118a <_i2c_master_read>
    139c:	e7a8      	b.n	12f0 <_i2c_master_interrupt_handler+0xc0>
    139e:	07fa      	lsls	r2, r7, #31
    13a0:	d5c5      	bpl.n	132e <_i2c_master_interrupt_handler+0xfe>
    13a2:	7fdb      	ldrb	r3, [r3, #31]
    13a4:	2b00      	cmp	r3, #0
    13a6:	d1c2      	bne.n	132e <_i2c_master_interrupt_handler+0xfe>
    13a8:	68e3      	ldr	r3, [r4, #12]
    13aa:	e7be      	b.n	132a <_i2c_master_interrupt_handler+0xfa>
    13ac:	200001f8 	.word	0x200001f8

000013b0 <sercom_set_gclk_generator>:
    13b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
    13b2:	4c0d      	ldr	r4, [pc, #52]	; (13e8 <sercom_set_gclk_generator+0x38>)
    13b4:	0005      	movs	r5, r0
    13b6:	7823      	ldrb	r3, [r4, #0]
    13b8:	2b00      	cmp	r3, #0
    13ba:	d001      	beq.n	13c0 <sercom_set_gclk_generator+0x10>
    13bc:	2900      	cmp	r1, #0
    13be:	d00c      	beq.n	13da <sercom_set_gclk_generator+0x2a>
    13c0:	a901      	add	r1, sp, #4
    13c2:	200d      	movs	r0, #13
    13c4:	700d      	strb	r5, [r1, #0]
    13c6:	f000 fab7 	bl	1938 <system_gclk_chan_set_config>
    13ca:	200d      	movs	r0, #13
    13cc:	f000 fa78 	bl	18c0 <system_gclk_chan_enable>
    13d0:	2301      	movs	r3, #1
    13d2:	2000      	movs	r0, #0
    13d4:	7065      	strb	r5, [r4, #1]
    13d6:	7023      	strb	r3, [r4, #0]
    13d8:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    13da:	7863      	ldrb	r3, [r4, #1]
    13dc:	0008      	movs	r0, r1
    13de:	42ab      	cmp	r3, r5
    13e0:	d0fa      	beq.n	13d8 <sercom_set_gclk_generator+0x28>
    13e2:	201d      	movs	r0, #29
    13e4:	e7f8      	b.n	13d8 <sercom_set_gclk_generator+0x28>
    13e6:	46c0      	nop			; (mov r8, r8)
    13e8:	20000061 	.word	0x20000061

000013ec <_sercom_get_default_pad>:
    13ec:	4a1d      	ldr	r2, [pc, #116]	; (1464 <_sercom_get_default_pad+0x78>)
    13ee:	0003      	movs	r3, r0
    13f0:	b500      	push	{lr}
    13f2:	0008      	movs	r0, r1
    13f4:	4293      	cmp	r3, r2
    13f6:	d013      	beq.n	1420 <_sercom_get_default_pad+0x34>
    13f8:	4a1b      	ldr	r2, [pc, #108]	; (1468 <_sercom_get_default_pad+0x7c>)
    13fa:	4293      	cmp	r3, r2
    13fc:	d01d      	beq.n	143a <_sercom_get_default_pad+0x4e>
    13fe:	4a1b      	ldr	r2, [pc, #108]	; (146c <_sercom_get_default_pad+0x80>)
    1400:	4293      	cmp	r3, r2
    1402:	d127      	bne.n	1454 <_sercom_get_default_pad+0x68>
    1404:	2300      	movs	r3, #0
    1406:	2903      	cmp	r1, #3
    1408:	d804      	bhi.n	1414 <_sercom_get_default_pad+0x28>
    140a:	f001 f937 	bl	267c <__gnu_thumb1_case_uqi>
    140e:	0225      	.short	0x0225
    1410:	0705      	.short	0x0705
    1412:	4b17      	ldr	r3, [pc, #92]	; (1470 <_sercom_get_default_pad+0x84>)
    1414:	0018      	movs	r0, r3
    1416:	bd00      	pop	{pc}
    1418:	4b16      	ldr	r3, [pc, #88]	; (1474 <_sercom_get_default_pad+0x88>)
    141a:	e7fb      	b.n	1414 <_sercom_get_default_pad+0x28>
    141c:	4b16      	ldr	r3, [pc, #88]	; (1478 <_sercom_get_default_pad+0x8c>)
    141e:	e7f9      	b.n	1414 <_sercom_get_default_pad+0x28>
    1420:	2300      	movs	r3, #0
    1422:	2903      	cmp	r1, #3
    1424:	d8f6      	bhi.n	1414 <_sercom_get_default_pad+0x28>
    1426:	f001 f929 	bl	267c <__gnu_thumb1_case_uqi>
    142a:	0219      	.short	0x0219
    142c:	0604      	.short	0x0604
    142e:	4b13      	ldr	r3, [pc, #76]	; (147c <_sercom_get_default_pad+0x90>)
    1430:	e7f0      	b.n	1414 <_sercom_get_default_pad+0x28>
    1432:	4b13      	ldr	r3, [pc, #76]	; (1480 <_sercom_get_default_pad+0x94>)
    1434:	e7ee      	b.n	1414 <_sercom_get_default_pad+0x28>
    1436:	4b13      	ldr	r3, [pc, #76]	; (1484 <_sercom_get_default_pad+0x98>)
    1438:	e7ec      	b.n	1414 <_sercom_get_default_pad+0x28>
    143a:	2300      	movs	r3, #0
    143c:	2903      	cmp	r1, #3
    143e:	d8e9      	bhi.n	1414 <_sercom_get_default_pad+0x28>
    1440:	f001 f91c 	bl	267c <__gnu_thumb1_case_uqi>
    1444:	0604020e 	.word	0x0604020e
    1448:	4b0f      	ldr	r3, [pc, #60]	; (1488 <_sercom_get_default_pad+0x9c>)
    144a:	e7e3      	b.n	1414 <_sercom_get_default_pad+0x28>
    144c:	4b0f      	ldr	r3, [pc, #60]	; (148c <_sercom_get_default_pad+0xa0>)
    144e:	e7e1      	b.n	1414 <_sercom_get_default_pad+0x28>
    1450:	4b0f      	ldr	r3, [pc, #60]	; (1490 <_sercom_get_default_pad+0xa4>)
    1452:	e7df      	b.n	1414 <_sercom_get_default_pad+0x28>
    1454:	2300      	movs	r3, #0
    1456:	e7dd      	b.n	1414 <_sercom_get_default_pad+0x28>
    1458:	4b0e      	ldr	r3, [pc, #56]	; (1494 <_sercom_get_default_pad+0xa8>)
    145a:	e7db      	b.n	1414 <_sercom_get_default_pad+0x28>
    145c:	4b0e      	ldr	r3, [pc, #56]	; (1498 <_sercom_get_default_pad+0xac>)
    145e:	e7d9      	b.n	1414 <_sercom_get_default_pad+0x28>
    1460:	4b0e      	ldr	r3, [pc, #56]	; (149c <_sercom_get_default_pad+0xb0>)
    1462:	e7d7      	b.n	1414 <_sercom_get_default_pad+0x28>
    1464:	42000c00 	.word	0x42000c00
    1468:	42001000 	.word	0x42001000
    146c:	42000800 	.word	0x42000800
    1470:	00050003 	.word	0x00050003
    1474:	00060003 	.word	0x00060003
    1478:	00070003 	.word	0x00070003
    147c:	00170002 	.word	0x00170002
    1480:	001e0003 	.word	0x001e0003
    1484:	001f0003 	.word	0x001f0003
    1488:	00170003 	.word	0x00170003
    148c:	00100003 	.word	0x00100003
    1490:	00190003 	.word	0x00190003
    1494:	00040003 	.word	0x00040003
    1498:	00160002 	.word	0x00160002
    149c:	00160003 	.word	0x00160003

000014a0 <_sercom_get_sercom_inst_index>:
    14a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    14a2:	4b0c      	ldr	r3, [pc, #48]	; (14d4 <_sercom_get_sercom_inst_index+0x34>)
    14a4:	0001      	movs	r1, r0
    14a6:	0018      	movs	r0, r3
    14a8:	aa01      	add	r2, sp, #4
    14aa:	c870      	ldmia	r0!, {r4, r5, r6}
    14ac:	c270      	stmia	r2!, {r4, r5, r6}
    14ae:	9a01      	ldr	r2, [sp, #4]
    14b0:	428a      	cmp	r2, r1
    14b2:	d00a      	beq.n	14ca <_sercom_get_sercom_inst_index+0x2a>
    14b4:	685a      	ldr	r2, [r3, #4]
    14b6:	428a      	cmp	r2, r1
    14b8:	d009      	beq.n	14ce <_sercom_get_sercom_inst_index+0x2e>
    14ba:	689b      	ldr	r3, [r3, #8]
    14bc:	2000      	movs	r0, #0
    14be:	428b      	cmp	r3, r1
    14c0:	d101      	bne.n	14c6 <_sercom_get_sercom_inst_index+0x26>
    14c2:	3002      	adds	r0, #2
    14c4:	b2c0      	uxtb	r0, r0
    14c6:	b004      	add	sp, #16
    14c8:	bd70      	pop	{r4, r5, r6, pc}
    14ca:	2000      	movs	r0, #0
    14cc:	e7fa      	b.n	14c4 <_sercom_get_sercom_inst_index+0x24>
    14ce:	2001      	movs	r0, #1
    14d0:	e7f8      	b.n	14c4 <_sercom_get_sercom_inst_index+0x24>
    14d2:	46c0      	nop			; (mov r8, r8)
    14d4:	00002858 	.word	0x00002858

000014d8 <_sercom_default_handler>:
    14d8:	4770      	bx	lr
	...

000014dc <_sercom_set_handler>:
    14dc:	b570      	push	{r4, r5, r6, lr}
    14de:	4e09      	ldr	r6, [pc, #36]	; (1504 <_sercom_set_handler+0x28>)
    14e0:	4b09      	ldr	r3, [pc, #36]	; (1508 <_sercom_set_handler+0x2c>)
    14e2:	7832      	ldrb	r2, [r6, #0]
    14e4:	2a00      	cmp	r2, #0
    14e6:	d109      	bne.n	14fc <_sercom_set_handler+0x20>
    14e8:	4c08      	ldr	r4, [pc, #32]	; (150c <_sercom_set_handler+0x30>)
    14ea:	4d09      	ldr	r5, [pc, #36]	; (1510 <_sercom_set_handler+0x34>)
    14ec:	6022      	str	r2, [r4, #0]
    14ee:	6062      	str	r2, [r4, #4]
    14f0:	60a2      	str	r2, [r4, #8]
    14f2:	3201      	adds	r2, #1
    14f4:	601d      	str	r5, [r3, #0]
    14f6:	605d      	str	r5, [r3, #4]
    14f8:	609d      	str	r5, [r3, #8]
    14fa:	7032      	strb	r2, [r6, #0]
    14fc:	0080      	lsls	r0, r0, #2
    14fe:	5019      	str	r1, [r3, r0]
    1500:	bd70      	pop	{r4, r5, r6, pc}
    1502:	46c0      	nop			; (mov r8, r8)
    1504:	20000063 	.word	0x20000063
    1508:	20000064 	.word	0x20000064
    150c:	200001f8 	.word	0x200001f8
    1510:	000014d9 	.word	0x000014d9

00001514 <_sercom_get_interrupt_vector>:
    1514:	2309      	movs	r3, #9
    1516:	b513      	push	{r0, r1, r4, lr}
    1518:	ac01      	add	r4, sp, #4
    151a:	7023      	strb	r3, [r4, #0]
    151c:	3301      	adds	r3, #1
    151e:	7063      	strb	r3, [r4, #1]
    1520:	3301      	adds	r3, #1
    1522:	70a3      	strb	r3, [r4, #2]
    1524:	f7ff ffbc 	bl	14a0 <_sercom_get_sercom_inst_index>
    1528:	5620      	ldrsb	r0, [r4, r0]
    152a:	bd16      	pop	{r1, r2, r4, pc}

0000152c <SERCOM0_Handler>:
    152c:	b510      	push	{r4, lr}
    152e:	4b02      	ldr	r3, [pc, #8]	; (1538 <SERCOM0_Handler+0xc>)
    1530:	2000      	movs	r0, #0
    1532:	681b      	ldr	r3, [r3, #0]
    1534:	4798      	blx	r3
    1536:	bd10      	pop	{r4, pc}
    1538:	20000064 	.word	0x20000064

0000153c <SERCOM1_Handler>:
    153c:	b510      	push	{r4, lr}
    153e:	4b02      	ldr	r3, [pc, #8]	; (1548 <SERCOM1_Handler+0xc>)
    1540:	2001      	movs	r0, #1
    1542:	685b      	ldr	r3, [r3, #4]
    1544:	4798      	blx	r3
    1546:	bd10      	pop	{r4, pc}
    1548:	20000064 	.word	0x20000064

0000154c <SERCOM2_Handler>:
    154c:	b510      	push	{r4, lr}
    154e:	4b02      	ldr	r3, [pc, #8]	; (1558 <SERCOM2_Handler+0xc>)
    1550:	2002      	movs	r0, #2
    1552:	689b      	ldr	r3, [r3, #8]
    1554:	4798      	blx	r3
    1556:	bd10      	pop	{r4, pc}
    1558:	20000064 	.word	0x20000064

0000155c <_system_dfll_wait_for_sync>:
    155c:	2310      	movs	r3, #16
    155e:	4902      	ldr	r1, [pc, #8]	; (1568 <_system_dfll_wait_for_sync+0xc>)
    1560:	68ca      	ldr	r2, [r1, #12]
    1562:	421a      	tst	r2, r3
    1564:	d0fc      	beq.n	1560 <_system_dfll_wait_for_sync+0x4>
    1566:	4770      	bx	lr
    1568:	40000800 	.word	0x40000800

0000156c <system_clock_source_get_hz>:
    156c:	b570      	push	{r4, r5, r6, lr}
    156e:	2808      	cmp	r0, #8
    1570:	d806      	bhi.n	1580 <system_clock_source_get_hz+0x14>
    1572:	f001 f883 	bl	267c <__gnu_thumb1_case_uqi>
    1576:	0508      	.short	0x0508
    1578:	12303005 	.word	0x12303005
    157c:	150b      	.short	0x150b
    157e:	28          	.byte	0x28
    157f:	00          	.byte	0x00
    1580:	2400      	movs	r4, #0
    1582:	0020      	movs	r0, r4
    1584:	bd70      	pop	{r4, r5, r6, pc}
    1586:	4b16      	ldr	r3, [pc, #88]	; (15e0 <system_clock_source_get_hz+0x74>)
    1588:	691c      	ldr	r4, [r3, #16]
    158a:	e7fa      	b.n	1582 <system_clock_source_get_hz+0x16>
    158c:	4b15      	ldr	r3, [pc, #84]	; (15e4 <system_clock_source_get_hz+0x78>)
    158e:	4c16      	ldr	r4, [pc, #88]	; (15e8 <system_clock_source_get_hz+0x7c>)
    1590:	6a1b      	ldr	r3, [r3, #32]
    1592:	059b      	lsls	r3, r3, #22
    1594:	0f9b      	lsrs	r3, r3, #30
    1596:	40dc      	lsrs	r4, r3
    1598:	e7f3      	b.n	1582 <system_clock_source_get_hz+0x16>
    159a:	4b11      	ldr	r3, [pc, #68]	; (15e0 <system_clock_source_get_hz+0x74>)
    159c:	695c      	ldr	r4, [r3, #20]
    159e:	e7f0      	b.n	1582 <system_clock_source_get_hz+0x16>
    15a0:	4d0f      	ldr	r5, [pc, #60]	; (15e0 <system_clock_source_get_hz+0x74>)
    15a2:	2400      	movs	r4, #0
    15a4:	682b      	ldr	r3, [r5, #0]
    15a6:	079b      	lsls	r3, r3, #30
    15a8:	d5eb      	bpl.n	1582 <system_clock_source_get_hz+0x16>
    15aa:	f7ff ffd7 	bl	155c <_system_dfll_wait_for_sync>
    15ae:	2224      	movs	r2, #36	; 0x24
    15b0:	682b      	ldr	r3, [r5, #0]
    15b2:	4013      	ands	r3, r2
    15b4:	2b04      	cmp	r3, #4
    15b6:	d111      	bne.n	15dc <system_clock_source_get_hz+0x70>
    15b8:	0020      	movs	r0, r4
    15ba:	f000 f9c9 	bl	1950 <system_gclk_chan_get_hz>
    15be:	68ac      	ldr	r4, [r5, #8]
    15c0:	b2a4      	uxth	r4, r4
    15c2:	4344      	muls	r4, r0
    15c4:	e7dd      	b.n	1582 <system_clock_source_get_hz+0x16>
    15c6:	4b09      	ldr	r3, [pc, #36]	; (15ec <system_clock_source_get_hz+0x80>)
    15c8:	2400      	movs	r4, #0
    15ca:	781b      	ldrb	r3, [r3, #0]
    15cc:	075b      	lsls	r3, r3, #29
    15ce:	d5d8      	bpl.n	1582 <system_clock_source_get_hz+0x16>
    15d0:	4b03      	ldr	r3, [pc, #12]	; (15e0 <system_clock_source_get_hz+0x74>)
    15d2:	68dc      	ldr	r4, [r3, #12]
    15d4:	e7d5      	b.n	1582 <system_clock_source_get_hz+0x16>
    15d6:	2480      	movs	r4, #128	; 0x80
    15d8:	0224      	lsls	r4, r4, #8
    15da:	e7d2      	b.n	1582 <system_clock_source_get_hz+0x16>
    15dc:	4c04      	ldr	r4, [pc, #16]	; (15f0 <system_clock_source_get_hz+0x84>)
    15de:	e7d0      	b.n	1582 <system_clock_source_get_hz+0x16>
    15e0:	20000070 	.word	0x20000070
    15e4:	40000800 	.word	0x40000800
    15e8:	007a1200 	.word	0x007a1200
    15ec:	40000850 	.word	0x40000850
    15f0:	02dc6c00 	.word	0x02dc6c00

000015f4 <system_clock_source_osc8m_set_config>:
    15f4:	b570      	push	{r4, r5, r6, lr}
    15f6:	7884      	ldrb	r4, [r0, #2]
    15f8:	7802      	ldrb	r2, [r0, #0]
    15fa:	7845      	ldrb	r5, [r0, #1]
    15fc:	2001      	movs	r0, #1
    15fe:	2640      	movs	r6, #64	; 0x40
    1600:	4005      	ands	r5, r0
    1602:	4020      	ands	r0, r4
    1604:	2480      	movs	r4, #128	; 0x80
    1606:	4908      	ldr	r1, [pc, #32]	; (1628 <system_clock_source_osc8m_set_config+0x34>)
    1608:	01ad      	lsls	r5, r5, #6
    160a:	6a0b      	ldr	r3, [r1, #32]
    160c:	01c0      	lsls	r0, r0, #7
    160e:	43b3      	bics	r3, r6
    1610:	432b      	orrs	r3, r5
    1612:	43a3      	bics	r3, r4
    1614:	4303      	orrs	r3, r0
    1616:	2003      	movs	r0, #3
    1618:	4002      	ands	r2, r0
    161a:	4804      	ldr	r0, [pc, #16]	; (162c <system_clock_source_osc8m_set_config+0x38>)
    161c:	0212      	lsls	r2, r2, #8
    161e:	4003      	ands	r3, r0
    1620:	4313      	orrs	r3, r2
    1622:	620b      	str	r3, [r1, #32]
    1624:	bd70      	pop	{r4, r5, r6, pc}
    1626:	46c0      	nop			; (mov r8, r8)
    1628:	40000800 	.word	0x40000800
    162c:	fffffcff 	.word	0xfffffcff

00001630 <system_clock_source_enable>:
    1630:	b570      	push	{r4, r5, r6, lr}
    1632:	2808      	cmp	r0, #8
    1634:	d806      	bhi.n	1644 <system_clock_source_enable+0x14>
    1636:	f001 f821 	bl	267c <__gnu_thumb1_case_uqi>
    163a:	0514      	.short	0x0514
    163c:	1a0e0c05 	.word	0x1a0e0c05
    1640:	2007      	.short	0x2007
    1642:	35          	.byte	0x35
    1643:	00          	.byte	0x00
    1644:	2017      	movs	r0, #23
    1646:	bd70      	pop	{r4, r5, r6, pc}
    1648:	2302      	movs	r3, #2
    164a:	4a19      	ldr	r2, [pc, #100]	; (16b0 <system_clock_source_enable+0x80>)
    164c:	6a11      	ldr	r1, [r2, #32]
    164e:	430b      	orrs	r3, r1
    1650:	6213      	str	r3, [r2, #32]
    1652:	2000      	movs	r0, #0
    1654:	e7f7      	b.n	1646 <system_clock_source_enable+0x16>
    1656:	2302      	movs	r3, #2
    1658:	4a15      	ldr	r2, [pc, #84]	; (16b0 <system_clock_source_enable+0x80>)
    165a:	6991      	ldr	r1, [r2, #24]
    165c:	430b      	orrs	r3, r1
    165e:	6193      	str	r3, [r2, #24]
    1660:	e7f7      	b.n	1652 <system_clock_source_enable+0x22>
    1662:	2302      	movs	r3, #2
    1664:	4a12      	ldr	r2, [pc, #72]	; (16b0 <system_clock_source_enable+0x80>)
    1666:	8a11      	ldrh	r1, [r2, #16]
    1668:	430b      	orrs	r3, r1
    166a:	8213      	strh	r3, [r2, #16]
    166c:	e7f1      	b.n	1652 <system_clock_source_enable+0x22>
    166e:	2302      	movs	r3, #2
    1670:	4a0f      	ldr	r2, [pc, #60]	; (16b0 <system_clock_source_enable+0x80>)
    1672:	8a91      	ldrh	r1, [r2, #20]
    1674:	430b      	orrs	r3, r1
    1676:	8293      	strh	r3, [r2, #20]
    1678:	e7eb      	b.n	1652 <system_clock_source_enable+0x22>
    167a:	2202      	movs	r2, #2
    167c:	2400      	movs	r4, #0
    167e:	4e0d      	ldr	r6, [pc, #52]	; (16b4 <system_clock_source_enable+0x84>)
    1680:	4d0b      	ldr	r5, [pc, #44]	; (16b0 <system_clock_source_enable+0x80>)
    1682:	6833      	ldr	r3, [r6, #0]
    1684:	4313      	orrs	r3, r2
    1686:	6033      	str	r3, [r6, #0]
    1688:	84aa      	strh	r2, [r5, #36]	; 0x24
    168a:	f7ff ff67 	bl	155c <_system_dfll_wait_for_sync>
    168e:	68b3      	ldr	r3, [r6, #8]
    1690:	62eb      	str	r3, [r5, #44]	; 0x2c
    1692:	6873      	ldr	r3, [r6, #4]
    1694:	62ab      	str	r3, [r5, #40]	; 0x28
    1696:	84ac      	strh	r4, [r5, #36]	; 0x24
    1698:	f7ff ff60 	bl	155c <_system_dfll_wait_for_sync>
    169c:	6833      	ldr	r3, [r6, #0]
    169e:	b29b      	uxth	r3, r3
    16a0:	84ab      	strh	r3, [r5, #36]	; 0x24
    16a2:	e7d6      	b.n	1652 <system_clock_source_enable+0x22>
    16a4:	2302      	movs	r3, #2
    16a6:	4a04      	ldr	r2, [pc, #16]	; (16b8 <system_clock_source_enable+0x88>)
    16a8:	7811      	ldrb	r1, [r2, #0]
    16aa:	430b      	orrs	r3, r1
    16ac:	7013      	strb	r3, [r2, #0]
    16ae:	e7d0      	b.n	1652 <system_clock_source_enable+0x22>
    16b0:	40000800 	.word	0x40000800
    16b4:	20000070 	.word	0x20000070
    16b8:	40000844 	.word	0x40000844

000016bc <system_clock_init>:
    16bc:	22c2      	movs	r2, #194	; 0xc2
    16be:	211e      	movs	r1, #30
    16c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    16c2:	4b20      	ldr	r3, [pc, #128]	; (1744 <system_clock_init+0x88>)
    16c4:	00d2      	lsls	r2, r2, #3
    16c6:	609a      	str	r2, [r3, #8]
    16c8:	4a1f      	ldr	r2, [pc, #124]	; (1748 <system_clock_init+0x8c>)
    16ca:	2500      	movs	r5, #0
    16cc:	6853      	ldr	r3, [r2, #4]
    16ce:	b085      	sub	sp, #20
    16d0:	438b      	bics	r3, r1
    16d2:	6053      	str	r3, [r2, #4]
    16d4:	2301      	movs	r3, #1
    16d6:	ac01      	add	r4, sp, #4
    16d8:	7023      	strb	r3, [r4, #0]
    16da:	b2e8      	uxtb	r0, r5
    16dc:	0021      	movs	r1, r4
    16de:	3501      	adds	r5, #1
    16e0:	f000 f92a 	bl	1938 <system_gclk_chan_set_config>
    16e4:	2d18      	cmp	r5, #24
    16e6:	d1f8      	bne.n	16da <system_clock_init+0x1e>
    16e8:	2500      	movs	r5, #0
    16ea:	466b      	mov	r3, sp
    16ec:	2601      	movs	r6, #1
    16ee:	2706      	movs	r7, #6
    16f0:	4668      	mov	r0, sp
    16f2:	701d      	strb	r5, [r3, #0]
    16f4:	709d      	strb	r5, [r3, #2]
    16f6:	705e      	strb	r6, [r3, #1]
    16f8:	f7ff ff7c 	bl	15f4 <system_clock_source_osc8m_set_config>
    16fc:	2006      	movs	r0, #6
    16fe:	f7ff ff97 	bl	1630 <system_clock_source_enable>
    1702:	f000 f82b 	bl	175c <system_gclk_init>
    1706:	0021      	movs	r1, r4
    1708:	2005      	movs	r0, #5
    170a:	6066      	str	r6, [r4, #4]
    170c:	7065      	strb	r5, [r4, #1]
    170e:	7027      	strb	r7, [r4, #0]
    1710:	7225      	strb	r5, [r4, #8]
    1712:	7265      	strb	r5, [r4, #9]
    1714:	f000 f832 	bl	177c <system_gclk_gen_set_config>
    1718:	2005      	movs	r0, #5
    171a:	f000 f87d 	bl	1818 <system_gclk_gen_enable>
    171e:	4b0b      	ldr	r3, [pc, #44]	; (174c <system_clock_init+0x90>)
    1720:	0021      	movs	r1, r4
    1722:	721d      	strb	r5, [r3, #8]
    1724:	0028      	movs	r0, r5
    1726:	725d      	strb	r5, [r3, #9]
    1728:	729d      	strb	r5, [r3, #10]
    172a:	72dd      	strb	r5, [r3, #11]
    172c:	6066      	str	r6, [r4, #4]
    172e:	7065      	strb	r5, [r4, #1]
    1730:	7027      	strb	r7, [r4, #0]
    1732:	7265      	strb	r5, [r4, #9]
    1734:	7226      	strb	r6, [r4, #8]
    1736:	f000 f821 	bl	177c <system_gclk_gen_set_config>
    173a:	0028      	movs	r0, r5
    173c:	f000 f86c 	bl	1818 <system_gclk_gen_enable>
    1740:	b005      	add	sp, #20
    1742:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1744:	40000800 	.word	0x40000800
    1748:	41004000 	.word	0x41004000
    174c:	40000400 	.word	0x40000400

00001750 <system_gclk_is_syncing>:
    1750:	4b01      	ldr	r3, [pc, #4]	; (1758 <system_gclk_is_syncing+0x8>)
    1752:	7858      	ldrb	r0, [r3, #1]
    1754:	09c0      	lsrs	r0, r0, #7
    1756:	4770      	bx	lr
    1758:	40000c00 	.word	0x40000c00

0000175c <system_gclk_init>:
    175c:	2308      	movs	r3, #8
    175e:	4a05      	ldr	r2, [pc, #20]	; (1774 <system_gclk_init+0x18>)
    1760:	6991      	ldr	r1, [r2, #24]
    1762:	430b      	orrs	r3, r1
    1764:	6193      	str	r3, [r2, #24]
    1766:	2301      	movs	r3, #1
    1768:	4a03      	ldr	r2, [pc, #12]	; (1778 <system_gclk_init+0x1c>)
    176a:	7013      	strb	r3, [r2, #0]
    176c:	7811      	ldrb	r1, [r2, #0]
    176e:	4219      	tst	r1, r3
    1770:	d1fc      	bne.n	176c <system_gclk_init+0x10>
    1772:	4770      	bx	lr
    1774:	40000400 	.word	0x40000400
    1778:	40000c00 	.word	0x40000c00

0000177c <system_gclk_gen_set_config>:
    177c:	b570      	push	{r4, r5, r6, lr}
    177e:	780c      	ldrb	r4, [r1, #0]
    1780:	784b      	ldrb	r3, [r1, #1]
    1782:	0224      	lsls	r4, r4, #8
    1784:	0006      	movs	r6, r0
    1786:	0005      	movs	r5, r0
    1788:	4304      	orrs	r4, r0
    178a:	2b00      	cmp	r3, #0
    178c:	d002      	beq.n	1794 <system_gclk_gen_set_config+0x18>
    178e:	2380      	movs	r3, #128	; 0x80
    1790:	02db      	lsls	r3, r3, #11
    1792:	431c      	orrs	r4, r3
    1794:	7a4b      	ldrb	r3, [r1, #9]
    1796:	2b00      	cmp	r3, #0
    1798:	d002      	beq.n	17a0 <system_gclk_gen_set_config+0x24>
    179a:	2380      	movs	r3, #128	; 0x80
    179c:	031b      	lsls	r3, r3, #12
    179e:	431c      	orrs	r4, r3
    17a0:	684b      	ldr	r3, [r1, #4]
    17a2:	2b01      	cmp	r3, #1
    17a4:	d912      	bls.n	17cc <system_gclk_gen_set_config+0x50>
    17a6:	1e5d      	subs	r5, r3, #1
    17a8:	401d      	ands	r5, r3
    17aa:	2202      	movs	r2, #2
    17ac:	2d00      	cmp	r5, #0
    17ae:	d006      	beq.n	17be <system_gclk_gen_set_config+0x42>
    17b0:	021d      	lsls	r5, r3, #8
    17b2:	2380      	movs	r3, #128	; 0x80
    17b4:	4335      	orrs	r5, r6
    17b6:	029b      	lsls	r3, r3, #10
    17b8:	e007      	b.n	17ca <system_gclk_gen_set_config+0x4e>
    17ba:	3501      	adds	r5, #1
    17bc:	0052      	lsls	r2, r2, #1
    17be:	429a      	cmp	r2, r3
    17c0:	d3fb      	bcc.n	17ba <system_gclk_gen_set_config+0x3e>
    17c2:	2380      	movs	r3, #128	; 0x80
    17c4:	022d      	lsls	r5, r5, #8
    17c6:	4335      	orrs	r5, r6
    17c8:	035b      	lsls	r3, r3, #13
    17ca:	431c      	orrs	r4, r3
    17cc:	7a0b      	ldrb	r3, [r1, #8]
    17ce:	2b00      	cmp	r3, #0
    17d0:	d002      	beq.n	17d8 <system_gclk_gen_set_config+0x5c>
    17d2:	2380      	movs	r3, #128	; 0x80
    17d4:	039b      	lsls	r3, r3, #14
    17d6:	431c      	orrs	r4, r3
    17d8:	f7ff ffba 	bl	1750 <system_gclk_is_syncing>
    17dc:	2800      	cmp	r0, #0
    17de:	d1fb      	bne.n	17d8 <system_gclk_gen_set_config+0x5c>
    17e0:	f7ff fb18 	bl	e14 <cpu_irq_enter_critical>
    17e4:	4b0a      	ldr	r3, [pc, #40]	; (1810 <system_gclk_gen_set_config+0x94>)
    17e6:	701e      	strb	r6, [r3, #0]
    17e8:	f7ff ffb2 	bl	1750 <system_gclk_is_syncing>
    17ec:	2800      	cmp	r0, #0
    17ee:	d1fb      	bne.n	17e8 <system_gclk_gen_set_config+0x6c>
    17f0:	4b08      	ldr	r3, [pc, #32]	; (1814 <system_gclk_gen_set_config+0x98>)
    17f2:	609d      	str	r5, [r3, #8]
    17f4:	001d      	movs	r5, r3
    17f6:	f7ff ffab 	bl	1750 <system_gclk_is_syncing>
    17fa:	2800      	cmp	r0, #0
    17fc:	d1fb      	bne.n	17f6 <system_gclk_gen_set_config+0x7a>
    17fe:	2280      	movs	r2, #128	; 0x80
    1800:	686b      	ldr	r3, [r5, #4]
    1802:	0252      	lsls	r2, r2, #9
    1804:	4013      	ands	r3, r2
    1806:	431c      	orrs	r4, r3
    1808:	606c      	str	r4, [r5, #4]
    180a:	f7ff fb1d 	bl	e48 <cpu_irq_leave_critical>
    180e:	bd70      	pop	{r4, r5, r6, pc}
    1810:	40000c08 	.word	0x40000c08
    1814:	40000c00 	.word	0x40000c00

00001818 <system_gclk_gen_enable>:
    1818:	b510      	push	{r4, lr}
    181a:	0004      	movs	r4, r0
    181c:	f7ff ff98 	bl	1750 <system_gclk_is_syncing>
    1820:	2800      	cmp	r0, #0
    1822:	d1fb      	bne.n	181c <system_gclk_gen_enable+0x4>
    1824:	f7ff faf6 	bl	e14 <cpu_irq_enter_critical>
    1828:	4b07      	ldr	r3, [pc, #28]	; (1848 <system_gclk_gen_enable+0x30>)
    182a:	701c      	strb	r4, [r3, #0]
    182c:	f7ff ff90 	bl	1750 <system_gclk_is_syncing>
    1830:	2800      	cmp	r0, #0
    1832:	d1fb      	bne.n	182c <system_gclk_gen_enable+0x14>
    1834:	2380      	movs	r3, #128	; 0x80
    1836:	4a05      	ldr	r2, [pc, #20]	; (184c <system_gclk_gen_enable+0x34>)
    1838:	025b      	lsls	r3, r3, #9
    183a:	6851      	ldr	r1, [r2, #4]
    183c:	430b      	orrs	r3, r1
    183e:	6053      	str	r3, [r2, #4]
    1840:	f7ff fb02 	bl	e48 <cpu_irq_leave_critical>
    1844:	bd10      	pop	{r4, pc}
    1846:	46c0      	nop			; (mov r8, r8)
    1848:	40000c04 	.word	0x40000c04
    184c:	40000c00 	.word	0x40000c00

00001850 <system_gclk_gen_get_hz>:
    1850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1852:	0007      	movs	r7, r0
    1854:	f7ff ff7c 	bl	1750 <system_gclk_is_syncing>
    1858:	2800      	cmp	r0, #0
    185a:	d1fb      	bne.n	1854 <system_gclk_gen_get_hz+0x4>
    185c:	4e15      	ldr	r6, [pc, #84]	; (18b4 <system_gclk_gen_get_hz+0x64>)
    185e:	f7ff fad9 	bl	e14 <cpu_irq_enter_critical>
    1862:	7037      	strb	r7, [r6, #0]
    1864:	f7ff ff74 	bl	1750 <system_gclk_is_syncing>
    1868:	2800      	cmp	r0, #0
    186a:	d1fb      	bne.n	1864 <system_gclk_gen_get_hz+0x14>
    186c:	4c12      	ldr	r4, [pc, #72]	; (18b8 <system_gclk_gen_get_hz+0x68>)
    186e:	6860      	ldr	r0, [r4, #4]
    1870:	04c0      	lsls	r0, r0, #19
    1872:	0ec0      	lsrs	r0, r0, #27
    1874:	f7ff fe7a 	bl	156c <system_clock_source_get_hz>
    1878:	0005      	movs	r5, r0
    187a:	7037      	strb	r7, [r6, #0]
    187c:	6866      	ldr	r6, [r4, #4]
    187e:	4b0f      	ldr	r3, [pc, #60]	; (18bc <system_gclk_gen_get_hz+0x6c>)
    1880:	02f6      	lsls	r6, r6, #11
    1882:	0ff6      	lsrs	r6, r6, #31
    1884:	701f      	strb	r7, [r3, #0]
    1886:	f7ff ff63 	bl	1750 <system_gclk_is_syncing>
    188a:	2800      	cmp	r0, #0
    188c:	d1fb      	bne.n	1886 <system_gclk_gen_get_hz+0x36>
    188e:	68a4      	ldr	r4, [r4, #8]
    1890:	0224      	lsls	r4, r4, #8
    1892:	0c24      	lsrs	r4, r4, #16
    1894:	f7ff fad8 	bl	e48 <cpu_irq_leave_critical>
    1898:	2e00      	cmp	r6, #0
    189a:	d108      	bne.n	18ae <system_gclk_gen_get_hz+0x5e>
    189c:	2c01      	cmp	r4, #1
    189e:	d904      	bls.n	18aa <system_gclk_gen_get_hz+0x5a>
    18a0:	0028      	movs	r0, r5
    18a2:	0021      	movs	r1, r4
    18a4:	f000 fef4 	bl	2690 <__udivsi3>
    18a8:	0005      	movs	r5, r0
    18aa:	0028      	movs	r0, r5
    18ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    18ae:	3401      	adds	r4, #1
    18b0:	40e5      	lsrs	r5, r4
    18b2:	e7fa      	b.n	18aa <system_gclk_gen_get_hz+0x5a>
    18b4:	40000c04 	.word	0x40000c04
    18b8:	40000c00 	.word	0x40000c00
    18bc:	40000c08 	.word	0x40000c08

000018c0 <system_gclk_chan_enable>:
    18c0:	b510      	push	{r4, lr}
    18c2:	0004      	movs	r4, r0
    18c4:	f7ff faa6 	bl	e14 <cpu_irq_enter_critical>
    18c8:	4b05      	ldr	r3, [pc, #20]	; (18e0 <system_gclk_chan_enable+0x20>)
    18ca:	4a06      	ldr	r2, [pc, #24]	; (18e4 <system_gclk_chan_enable+0x24>)
    18cc:	701c      	strb	r4, [r3, #0]
    18ce:	2380      	movs	r3, #128	; 0x80
    18d0:	8851      	ldrh	r1, [r2, #2]
    18d2:	01db      	lsls	r3, r3, #7
    18d4:	430b      	orrs	r3, r1
    18d6:	8053      	strh	r3, [r2, #2]
    18d8:	f7ff fab6 	bl	e48 <cpu_irq_leave_critical>
    18dc:	bd10      	pop	{r4, pc}
    18de:	46c0      	nop			; (mov r8, r8)
    18e0:	40000c02 	.word	0x40000c02
    18e4:	40000c00 	.word	0x40000c00

000018e8 <system_gclk_chan_disable>:
    18e8:	b510      	push	{r4, lr}
    18ea:	0004      	movs	r4, r0
    18ec:	f7ff fa92 	bl	e14 <cpu_irq_enter_critical>
    18f0:	4b0d      	ldr	r3, [pc, #52]	; (1928 <system_gclk_chan_disable+0x40>)
    18f2:	4a0e      	ldr	r2, [pc, #56]	; (192c <system_gclk_chan_disable+0x44>)
    18f4:	701c      	strb	r4, [r3, #0]
    18f6:	4b0e      	ldr	r3, [pc, #56]	; (1930 <system_gclk_chan_disable+0x48>)
    18f8:	4c0e      	ldr	r4, [pc, #56]	; (1934 <system_gclk_chan_disable+0x4c>)
    18fa:	8858      	ldrh	r0, [r3, #2]
    18fc:	8859      	ldrh	r1, [r3, #2]
    18fe:	0500      	lsls	r0, r0, #20
    1900:	4011      	ands	r1, r2
    1902:	8059      	strh	r1, [r3, #2]
    1904:	8859      	ldrh	r1, [r3, #2]
    1906:	0f00      	lsrs	r0, r0, #28
    1908:	4021      	ands	r1, r4
    190a:	8059      	strh	r1, [r3, #2]
    190c:	0011      	movs	r1, r2
    190e:	2280      	movs	r2, #128	; 0x80
    1910:	01d2      	lsls	r2, r2, #7
    1912:	885c      	ldrh	r4, [r3, #2]
    1914:	4214      	tst	r4, r2
    1916:	d1fc      	bne.n	1912 <system_gclk_chan_disable+0x2a>
    1918:	885a      	ldrh	r2, [r3, #2]
    191a:	0200      	lsls	r0, r0, #8
    191c:	400a      	ands	r2, r1
    191e:	4302      	orrs	r2, r0
    1920:	805a      	strh	r2, [r3, #2]
    1922:	f7ff fa91 	bl	e48 <cpu_irq_leave_critical>
    1926:	bd10      	pop	{r4, pc}
    1928:	40000c02 	.word	0x40000c02
    192c:	fffff0ff 	.word	0xfffff0ff
    1930:	40000c00 	.word	0x40000c00
    1934:	ffffbfff 	.word	0xffffbfff

00001938 <system_gclk_chan_set_config>:
    1938:	b510      	push	{r4, lr}
    193a:	780c      	ldrb	r4, [r1, #0]
    193c:	0224      	lsls	r4, r4, #8
    193e:	4304      	orrs	r4, r0
    1940:	f7ff ffd2 	bl	18e8 <system_gclk_chan_disable>
    1944:	4b01      	ldr	r3, [pc, #4]	; (194c <system_gclk_chan_set_config+0x14>)
    1946:	b2a4      	uxth	r4, r4
    1948:	805c      	strh	r4, [r3, #2]
    194a:	bd10      	pop	{r4, pc}
    194c:	40000c00 	.word	0x40000c00

00001950 <system_gclk_chan_get_hz>:
    1950:	b510      	push	{r4, lr}
    1952:	0004      	movs	r4, r0
    1954:	f7ff fa5e 	bl	e14 <cpu_irq_enter_critical>
    1958:	4b05      	ldr	r3, [pc, #20]	; (1970 <system_gclk_chan_get_hz+0x20>)
    195a:	701c      	strb	r4, [r3, #0]
    195c:	4b05      	ldr	r3, [pc, #20]	; (1974 <system_gclk_chan_get_hz+0x24>)
    195e:	885c      	ldrh	r4, [r3, #2]
    1960:	f7ff fa72 	bl	e48 <cpu_irq_leave_critical>
    1964:	0524      	lsls	r4, r4, #20
    1966:	0f24      	lsrs	r4, r4, #28
    1968:	0020      	movs	r0, r4
    196a:	f7ff ff71 	bl	1850 <system_gclk_gen_get_hz>
    196e:	bd10      	pop	{r4, pc}
    1970:	40000c02 	.word	0x40000c02
    1974:	40000c00 	.word	0x40000c00

00001978 <_system_pinmux_config>:
    1978:	78d3      	ldrb	r3, [r2, #3]
    197a:	b530      	push	{r4, r5, lr}
    197c:	2b00      	cmp	r3, #0
    197e:	d135      	bne.n	19ec <_system_pinmux_config+0x74>
    1980:	7814      	ldrb	r4, [r2, #0]
    1982:	2c80      	cmp	r4, #128	; 0x80
    1984:	d003      	beq.n	198e <_system_pinmux_config+0x16>
    1986:	2380      	movs	r3, #128	; 0x80
    1988:	0624      	lsls	r4, r4, #24
    198a:	025b      	lsls	r3, r3, #9
    198c:	4323      	orrs	r3, r4
    198e:	2502      	movs	r5, #2
    1990:	7854      	ldrb	r4, [r2, #1]
    1992:	43ac      	bics	r4, r5
    1994:	d106      	bne.n	19a4 <_system_pinmux_config+0x2c>
    1996:	7894      	ldrb	r4, [r2, #2]
    1998:	2c00      	cmp	r4, #0
    199a:	d124      	bne.n	19e6 <_system_pinmux_config+0x6e>
    199c:	2480      	movs	r4, #128	; 0x80
    199e:	02a4      	lsls	r4, r4, #10
    19a0:	4323      	orrs	r3, r4
    19a2:	6041      	str	r1, [r0, #4]
    19a4:	7854      	ldrb	r4, [r2, #1]
    19a6:	3c01      	subs	r4, #1
    19a8:	2c01      	cmp	r4, #1
    19aa:	d801      	bhi.n	19b0 <_system_pinmux_config+0x38>
    19ac:	4c12      	ldr	r4, [pc, #72]	; (19f8 <_system_pinmux_config+0x80>)
    19ae:	4023      	ands	r3, r4
    19b0:	24a0      	movs	r4, #160	; 0xa0
    19b2:	b28d      	uxth	r5, r1
    19b4:	05e4      	lsls	r4, r4, #23
    19b6:	432c      	orrs	r4, r5
    19b8:	431c      	orrs	r4, r3
    19ba:	6284      	str	r4, [r0, #40]	; 0x28
    19bc:	24d0      	movs	r4, #208	; 0xd0
    19be:	0c0d      	lsrs	r5, r1, #16
    19c0:	0624      	lsls	r4, r4, #24
    19c2:	432c      	orrs	r4, r5
    19c4:	431c      	orrs	r4, r3
    19c6:	6284      	str	r4, [r0, #40]	; 0x28
    19c8:	78d4      	ldrb	r4, [r2, #3]
    19ca:	2c00      	cmp	r4, #0
    19cc:	d10a      	bne.n	19e4 <_system_pinmux_config+0x6c>
    19ce:	035b      	lsls	r3, r3, #13
    19d0:	d503      	bpl.n	19da <_system_pinmux_config+0x62>
    19d2:	7893      	ldrb	r3, [r2, #2]
    19d4:	2b01      	cmp	r3, #1
    19d6:	d10c      	bne.n	19f2 <_system_pinmux_config+0x7a>
    19d8:	6181      	str	r1, [r0, #24]
    19da:	7853      	ldrb	r3, [r2, #1]
    19dc:	3b01      	subs	r3, #1
    19de:	2b01      	cmp	r3, #1
    19e0:	d800      	bhi.n	19e4 <_system_pinmux_config+0x6c>
    19e2:	6081      	str	r1, [r0, #8]
    19e4:	bd30      	pop	{r4, r5, pc}
    19e6:	24c0      	movs	r4, #192	; 0xc0
    19e8:	02e4      	lsls	r4, r4, #11
    19ea:	e7d9      	b.n	19a0 <_system_pinmux_config+0x28>
    19ec:	6041      	str	r1, [r0, #4]
    19ee:	2300      	movs	r3, #0
    19f0:	e7de      	b.n	19b0 <_system_pinmux_config+0x38>
    19f2:	6141      	str	r1, [r0, #20]
    19f4:	e7f1      	b.n	19da <_system_pinmux_config+0x62>
    19f6:	46c0      	nop			; (mov r8, r8)
    19f8:	fffbffff 	.word	0xfffbffff

000019fc <system_pinmux_pin_set_config>:
    19fc:	b510      	push	{r4, lr}
    19fe:	0003      	movs	r3, r0
    1a00:	000a      	movs	r2, r1
    1a02:	0944      	lsrs	r4, r0, #5
    1a04:	09c1      	lsrs	r1, r0, #7
    1a06:	2000      	movs	r0, #0
    1a08:	4281      	cmp	r1, r0
    1a0a:	d102      	bne.n	1a12 <system_pinmux_pin_set_config+0x16>
    1a0c:	4904      	ldr	r1, [pc, #16]	; (1a20 <system_pinmux_pin_set_config+0x24>)
    1a0e:	01e0      	lsls	r0, r4, #7
    1a10:	1840      	adds	r0, r0, r1
    1a12:	211f      	movs	r1, #31
    1a14:	400b      	ands	r3, r1
    1a16:	391e      	subs	r1, #30
    1a18:	4099      	lsls	r1, r3
    1a1a:	f7ff ffad 	bl	1978 <_system_pinmux_config>
    1a1e:	bd10      	pop	{r4, pc}
    1a20:	41004400 	.word	0x41004400

00001a24 <_system_dummy_init>:
    1a24:	4770      	bx	lr

00001a26 <system_init>:
    1a26:	b510      	push	{r4, lr}
    1a28:	f7ff fe48 	bl	16bc <system_clock_init>
    1a2c:	f7ff fffa 	bl	1a24 <_system_dummy_init>
    1a30:	f7fe fdb6 	bl	5a0 <_system_extint_init>
    1a34:	f7ff fff6 	bl	1a24 <_system_dummy_init>
    1a38:	bd10      	pop	{r4, pc}

00001a3a <_tcc_get_inst_index>:
    1a3a:	2000      	movs	r0, #0
    1a3c:	4770      	bx	lr
	...

00001a40 <_tcc_set_compare_value.isra.5>:
    1a40:	b530      	push	{r4, r5, lr}
    1a42:	0004      	movs	r4, r0
    1a44:	2017      	movs	r0, #23
    1a46:	2903      	cmp	r1, #3
    1a48:	d813      	bhi.n	1a72 <_tcc_set_compare_value.isra.5+0x32>
    1a4a:	4d10      	ldr	r5, [pc, #64]	; (1a8c <_tcc_set_compare_value.isra.5+0x4c>)
    1a4c:	42aa      	cmp	r2, r5
    1a4e:	d810      	bhi.n	1a72 <_tcc_set_compare_value.isra.5+0x32>
    1a50:	2b00      	cmp	r3, #0
    1a52:	d00f      	beq.n	1a74 <_tcc_set_compare_value.isra.5+0x34>
    1a54:	2380      	movs	r3, #128	; 0x80
    1a56:	025b      	lsls	r3, r3, #9
    1a58:	408b      	lsls	r3, r1
    1a5a:	6b20      	ldr	r0, [r4, #48]	; 0x30
    1a5c:	4203      	tst	r3, r0
    1a5e:	d1fc      	bne.n	1a5a <_tcc_set_compare_value.isra.5+0x1a>
    1a60:	2580      	movs	r5, #128	; 0x80
    1a62:	032d      	lsls	r5, r5, #12
    1a64:	408d      	lsls	r5, r1
    1a66:	68a0      	ldr	r0, [r4, #8]
    1a68:	4028      	ands	r0, r5
    1a6a:	d1fc      	bne.n	1a66 <_tcc_set_compare_value.isra.5+0x26>
    1a6c:	311c      	adds	r1, #28
    1a6e:	0089      	lsls	r1, r1, #2
    1a70:	510a      	str	r2, [r1, r4]
    1a72:	bd30      	pop	{r4, r5, pc}
    1a74:	2080      	movs	r0, #128	; 0x80
    1a76:	0040      	lsls	r0, r0, #1
    1a78:	4088      	lsls	r0, r1
    1a7a:	68a3      	ldr	r3, [r4, #8]
    1a7c:	4003      	ands	r3, r0
    1a7e:	d1fc      	bne.n	1a7a <_tcc_set_compare_value.isra.5+0x3a>
    1a80:	3110      	adds	r1, #16
    1a82:	0089      	lsls	r1, r1, #2
    1a84:	1861      	adds	r1, r4, r1
    1a86:	604a      	str	r2, [r1, #4]
    1a88:	0018      	movs	r0, r3
    1a8a:	e7f2      	b.n	1a72 <_tcc_set_compare_value.isra.5+0x32>
    1a8c:	00ffffff 	.word	0x00ffffff

00001a90 <tcc_get_config_defaults>:
    1a90:	4a37      	ldr	r2, [pc, #220]	; (1b70 <tcc_get_config_defaults+0xe0>)
    1a92:	b510      	push	{r4, lr}
    1a94:	6042      	str	r2, [r0, #4]
    1a96:	0002      	movs	r2, r0
    1a98:	2300      	movs	r3, #0
    1a9a:	0004      	movs	r4, r0
    1a9c:	322c      	adds	r2, #44	; 0x2c
    1a9e:	3448      	adds	r4, #72	; 0x48
    1aa0:	6003      	str	r3, [r0, #0]
    1aa2:	7283      	strb	r3, [r0, #10]
    1aa4:	72c3      	strb	r3, [r0, #11]
    1aa6:	7303      	strb	r3, [r0, #12]
    1aa8:	7243      	strb	r3, [r0, #9]
    1aaa:	7203      	strb	r3, [r0, #8]
    1aac:	61c3      	str	r3, [r0, #28]
    1aae:	6203      	str	r3, [r0, #32]
    1ab0:	6243      	str	r3, [r0, #36]	; 0x24
    1ab2:	6283      	str	r3, [r0, #40]	; 0x28
    1ab4:	7503      	strb	r3, [r0, #20]
    1ab6:	7543      	strb	r3, [r0, #21]
    1ab8:	7583      	strb	r3, [r0, #22]
    1aba:	75c3      	strb	r3, [r0, #23]
    1abc:	7603      	strb	r3, [r0, #24]
    1abe:	7643      	strb	r3, [r0, #25]
    1ac0:	7403      	strb	r3, [r0, #16]
    1ac2:	7443      	strb	r3, [r0, #17]
    1ac4:	7483      	strb	r3, [r0, #18]
    1ac6:	74c3      	strb	r3, [r0, #19]
    1ac8:	7013      	strb	r3, [r2, #0]
    1aca:	7053      	strb	r3, [r2, #1]
    1acc:	7093      	strb	r3, [r2, #2]
    1ace:	70d3      	strb	r3, [r2, #3]
    1ad0:	7113      	strb	r3, [r2, #4]
    1ad2:	7153      	strb	r3, [r2, #5]
    1ad4:	7193      	strb	r3, [r2, #6]
    1ad6:	71d3      	strb	r3, [r2, #7]
    1ad8:	7213      	strb	r3, [r2, #8]
    1ada:	7253      	strb	r3, [r2, #9]
    1adc:	7293      	strb	r3, [r2, #10]
    1ade:	72d3      	strb	r3, [r2, #11]
    1ae0:	320c      	adds	r2, #12
    1ae2:	7013      	strb	r3, [r2, #0]
    1ae4:	7053      	strb	r3, [r2, #1]
    1ae6:	7093      	strb	r3, [r2, #2]
    1ae8:	70d3      	strb	r3, [r2, #3]
    1aea:	7113      	strb	r3, [r2, #4]
    1aec:	7153      	strb	r3, [r2, #5]
    1aee:	7193      	strb	r3, [r2, #6]
    1af0:	71d3      	strb	r3, [r2, #7]
    1af2:	7213      	strb	r3, [r2, #8]
    1af4:	7253      	strb	r3, [r2, #9]
    1af6:	7293      	strb	r3, [r2, #10]
    1af8:	72d3      	strb	r3, [r2, #11]
    1afa:	7313      	strb	r3, [r2, #12]
    1afc:	7353      	strb	r3, [r2, #13]
    1afe:	7393      	strb	r3, [r2, #14]
    1b00:	73d3      	strb	r3, [r2, #15]
    1b02:	1d01      	adds	r1, r0, #4
    1b04:	7023      	strb	r3, [r4, #0]
    1b06:	7063      	strb	r3, [r4, #1]
    1b08:	70a3      	strb	r3, [r4, #2]
    1b0a:	70e3      	strb	r3, [r4, #3]
    1b0c:	7123      	strb	r3, [r4, #4]
    1b0e:	7163      	strb	r3, [r4, #5]
    1b10:	71a3      	strb	r3, [r4, #6]
    1b12:	71e3      	strb	r3, [r4, #7]
    1b14:	7223      	strb	r3, [r4, #8]
    1b16:	7263      	strb	r3, [r4, #9]
    1b18:	72a3      	strb	r3, [r4, #10]
    1b1a:	72e3      	strb	r3, [r4, #11]
    1b1c:	7323      	strb	r3, [r4, #12]
    1b1e:	7363      	strb	r3, [r4, #13]
    1b20:	73a3      	strb	r3, [r4, #14]
    1b22:	73e3      	strb	r3, [r4, #15]
    1b24:	3450      	adds	r4, #80	; 0x50
    1b26:	7023      	strb	r3, [r4, #0]
    1b28:	6583      	str	r3, [r0, #88]	; 0x58
    1b2a:	6783      	str	r3, [r0, #120]	; 0x78
    1b2c:	7063      	strb	r3, [r4, #1]
    1b2e:	65c3      	str	r3, [r0, #92]	; 0x5c
    1b30:	67c3      	str	r3, [r0, #124]	; 0x7c
    1b32:	70a3      	strb	r3, [r4, #2]
    1b34:	6603      	str	r3, [r0, #96]	; 0x60
    1b36:	67cb      	str	r3, [r1, #124]	; 0x7c
    1b38:	3197      	adds	r1, #151	; 0x97
    1b3a:	700b      	strb	r3, [r1, #0]
    1b3c:	2101      	movs	r1, #1
    1b3e:	3a30      	subs	r2, #48	; 0x30
    1b40:	6643      	str	r3, [r0, #100]	; 0x64
    1b42:	67d3      	str	r3, [r2, #124]	; 0x7c
    1b44:	3294      	adds	r2, #148	; 0x94
    1b46:	7013      	strb	r3, [r2, #0]
    1b48:	3a14      	subs	r2, #20
    1b4a:	6683      	str	r3, [r0, #104]	; 0x68
    1b4c:	6013      	str	r3, [r2, #0]
    1b4e:	7553      	strb	r3, [r2, #21]
    1b50:	3204      	adds	r2, #4
    1b52:	66c3      	str	r3, [r0, #108]	; 0x6c
    1b54:	6013      	str	r3, [r2, #0]
    1b56:	7493      	strb	r3, [r2, #18]
    1b58:	3204      	adds	r2, #4
    1b5a:	6703      	str	r3, [r0, #112]	; 0x70
    1b5c:	6013      	str	r3, [r2, #0]
    1b5e:	73d3      	strb	r3, [r2, #15]
    1b60:	6743      	str	r3, [r0, #116]	; 0x74
    1b62:	3204      	adds	r2, #4
    1b64:	30a1      	adds	r0, #161	; 0xa1
    1b66:	6013      	str	r3, [r2, #0]
    1b68:	7311      	strb	r1, [r2, #12]
    1b6a:	7003      	strb	r3, [r0, #0]
    1b6c:	bd10      	pop	{r4, pc}
    1b6e:	46c0      	nop			; (mov r8, r8)
    1b70:	00ffffff 	.word	0x00ffffff

00001b74 <tcc_init>:
    1b74:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b76:	0006      	movs	r6, r0
    1b78:	b08f      	sub	sp, #60	; 0x3c
    1b7a:	0008      	movs	r0, r1
    1b7c:	000d      	movs	r5, r1
    1b7e:	0014      	movs	r4, r2
    1b80:	f7ff ff5b 	bl	1a3a <_tcc_get_inst_index>
    1b84:	2320      	movs	r3, #32
    1b86:	4aa3      	ldr	r2, [pc, #652]	; (1e14 <tcc_init+0x2a0>)
    1b88:	9009      	str	r0, [sp, #36]	; 0x24
    1b8a:	6a11      	ldr	r1, [r2, #32]
    1b8c:	201c      	movs	r0, #28
    1b8e:	430b      	orrs	r3, r1
    1b90:	6213      	str	r3, [r2, #32]
    1b92:	682b      	ldr	r3, [r5, #0]
    1b94:	079b      	lsls	r3, r3, #30
    1b96:	d407      	bmi.n	1ba8 <tcc_init+0x34>
    1b98:	682b      	ldr	r3, [r5, #0]
    1b9a:	07db      	lsls	r3, r3, #31
    1b9c:	d404      	bmi.n	1ba8 <tcc_init+0x34>
    1b9e:	4a9e      	ldr	r2, [pc, #632]	; (1e18 <tcc_init+0x2a4>)
    1ba0:	6823      	ldr	r3, [r4, #0]
    1ba2:	4293      	cmp	r3, r2
    1ba4:	d902      	bls.n	1bac <tcc_init+0x38>
    1ba6:	2017      	movs	r0, #23
    1ba8:	b00f      	add	sp, #60	; 0x3c
    1baa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1bac:	6863      	ldr	r3, [r4, #4]
    1bae:	4293      	cmp	r3, r2
    1bb0:	d8f9      	bhi.n	1ba6 <tcc_init+0x32>
    1bb2:	0023      	movs	r3, r4
    1bb4:	0021      	movs	r1, r4
    1bb6:	331c      	adds	r3, #28
    1bb8:	312c      	adds	r1, #44	; 0x2c
    1bba:	6818      	ldr	r0, [r3, #0]
    1bbc:	4290      	cmp	r0, r2
    1bbe:	d8f2      	bhi.n	1ba6 <tcc_init+0x32>
    1bc0:	3304      	adds	r3, #4
    1bc2:	428b      	cmp	r3, r1
    1bc4:	d1f9      	bne.n	1bba <tcc_init+0x46>
    1bc6:	2200      	movs	r2, #0
    1bc8:	2180      	movs	r1, #128	; 0x80
    1bca:	9202      	str	r2, [sp, #8]
    1bcc:	0449      	lsls	r1, r1, #17
    1bce:	18a0      	adds	r0, r4, r2
    1bd0:	7c00      	ldrb	r0, [r0, #16]
    1bd2:	2801      	cmp	r0, #1
    1bd4:	d104      	bne.n	1be0 <tcc_init+0x6c>
    1bd6:	0008      	movs	r0, r1
    1bd8:	4090      	lsls	r0, r2
    1bda:	9f02      	ldr	r7, [sp, #8]
    1bdc:	4307      	orrs	r7, r0
    1bde:	9702      	str	r7, [sp, #8]
    1be0:	3201      	adds	r2, #1
    1be2:	2a04      	cmp	r2, #4
    1be4:	d1f3      	bne.n	1bce <tcc_init+0x5a>
    1be6:	0022      	movs	r2, r4
    1be8:	32a1      	adds	r2, #161	; 0xa1
    1bea:	7812      	ldrb	r2, [r2, #0]
    1bec:	2a00      	cmp	r2, #0
    1bee:	d004      	beq.n	1bfa <tcc_init+0x86>
    1bf0:	2280      	movs	r2, #128	; 0x80
    1bf2:	9902      	ldr	r1, [sp, #8]
    1bf4:	0112      	lsls	r2, r2, #4
    1bf6:	4311      	orrs	r1, r2
    1bf8:	9102      	str	r1, [sp, #8]
    1bfa:	7a22      	ldrb	r2, [r4, #8]
    1bfc:	1e51      	subs	r1, r2, #1
    1bfe:	418a      	sbcs	r2, r1
    1c00:	0092      	lsls	r2, r2, #2
    1c02:	9203      	str	r2, [sp, #12]
    1c04:	7a62      	ldrb	r2, [r4, #9]
    1c06:	2a01      	cmp	r2, #1
    1c08:	d102      	bne.n	1c10 <tcc_init+0x9c>
    1c0a:	9903      	ldr	r1, [sp, #12]
    1c0c:	4311      	orrs	r1, r2
    1c0e:	9103      	str	r1, [sp, #12]
    1c10:	7b22      	ldrb	r2, [r4, #12]
    1c12:	9206      	str	r2, [sp, #24]
    1c14:	7ae2      	ldrb	r2, [r4, #11]
    1c16:	9207      	str	r2, [sp, #28]
    1c18:	2200      	movs	r2, #0
    1c1a:	4694      	mov	ip, r2
    1c1c:	7a5f      	ldrb	r7, [r3, #9]
    1c1e:	2f03      	cmp	r7, #3
    1c20:	d8c1      	bhi.n	1ba6 <tcc_init+0x32>
    1c22:	7819      	ldrb	r1, [r3, #0]
    1c24:	290f      	cmp	r1, #15
    1c26:	d8be      	bhi.n	1ba6 <tcc_init+0x32>
    1c28:	20f0      	movs	r0, #240	; 0xf0
    1c2a:	785a      	ldrb	r2, [r3, #1]
    1c2c:	0500      	lsls	r0, r0, #20
    1c2e:	0609      	lsls	r1, r1, #24
    1c30:	4001      	ands	r1, r0
    1c32:	0412      	lsls	r2, r2, #16
    1c34:	430a      	orrs	r2, r1
    1c36:	7899      	ldrb	r1, [r3, #2]
    1c38:	9201      	str	r2, [sp, #4]
    1c3a:	1e48      	subs	r0, r1, #1
    1c3c:	4181      	sbcs	r1, r0
    1c3e:	01c9      	lsls	r1, r1, #7
    1c40:	9104      	str	r1, [sp, #16]
    1c42:	78d9      	ldrb	r1, [r3, #3]
    1c44:	2203      	movs	r2, #3
    1c46:	1e48      	subs	r0, r1, #1
    1c48:	4181      	sbcs	r1, r0
    1c4a:	7918      	ldrb	r0, [r3, #4]
    1c4c:	00c9      	lsls	r1, r1, #3
    1c4e:	9105      	str	r1, [sp, #20]
    1c50:	1e41      	subs	r1, r0, #1
    1c52:	4188      	sbcs	r0, r1
    1c54:	0101      	lsls	r1, r0, #4
    1c56:	2060      	movs	r0, #96	; 0x60
    1c58:	9108      	str	r1, [sp, #32]
    1c5a:	7999      	ldrb	r1, [r3, #6]
    1c5c:	02bf      	lsls	r7, r7, #10
    1c5e:	0149      	lsls	r1, r1, #5
    1c60:	4001      	ands	r1, r0
    1c62:	7958      	ldrb	r0, [r3, #5]
    1c64:	4010      	ands	r0, r2
    1c66:	9a01      	ldr	r2, [sp, #4]
    1c68:	4302      	orrs	r2, r0
    1c6a:	430a      	orrs	r2, r1
    1c6c:	21c0      	movs	r1, #192	; 0xc0
    1c6e:	79d8      	ldrb	r0, [r3, #7]
    1c70:	0089      	lsls	r1, r1, #2
    1c72:	0200      	lsls	r0, r0, #8
    1c74:	4001      	ands	r1, r0
    1c76:	20e0      	movs	r0, #224	; 0xe0
    1c78:	4311      	orrs	r1, r2
    1c7a:	7a1a      	ldrb	r2, [r3, #8]
    1c7c:	01c0      	lsls	r0, r0, #7
    1c7e:	0312      	lsls	r2, r2, #12
    1c80:	4002      	ands	r2, r0
    1c82:	20c0      	movs	r0, #192	; 0xc0
    1c84:	0100      	lsls	r0, r0, #4
    1c86:	4311      	orrs	r1, r2
    1c88:	4007      	ands	r7, r0
    1c8a:	430f      	orrs	r7, r1
    1c8c:	4661      	mov	r1, ip
    1c8e:	9a04      	ldr	r2, [sp, #16]
    1c90:	330a      	adds	r3, #10
    1c92:	4317      	orrs	r7, r2
    1c94:	9a05      	ldr	r2, [sp, #20]
    1c96:	4317      	orrs	r7, r2
    1c98:	9a08      	ldr	r2, [sp, #32]
    1c9a:	4317      	orrs	r7, r2
    1c9c:	aa0c      	add	r2, sp, #48	; 0x30
    1c9e:	508f      	str	r7, [r1, r2]
    1ca0:	2204      	movs	r2, #4
    1ca2:	4494      	add	ip, r2
    1ca4:	4662      	mov	r2, ip
    1ca6:	2a08      	cmp	r2, #8
    1ca8:	d1b8      	bne.n	1c1c <tcc_init+0xa8>
    1caa:	2280      	movs	r2, #128	; 0x80
    1cac:	2300      	movs	r3, #0
    1cae:	0252      	lsls	r2, r2, #9
    1cb0:	2002      	movs	r0, #2
    1cb2:	4694      	mov	ip, r2
    1cb4:	9301      	str	r3, [sp, #4]
    1cb6:	30ff      	adds	r0, #255	; 0xff
    1cb8:	18e2      	adds	r2, r4, r3
    1cba:	0017      	movs	r7, r2
    1cbc:	3750      	adds	r7, #80	; 0x50
    1cbe:	783f      	ldrb	r7, [r7, #0]
    1cc0:	2f00      	cmp	r7, #0
    1cc2:	d004      	beq.n	1cce <tcc_init+0x15a>
    1cc4:	4667      	mov	r7, ip
    1cc6:	409f      	lsls	r7, r3
    1cc8:	9901      	ldr	r1, [sp, #4]
    1cca:	4339      	orrs	r1, r7
    1ccc:	9101      	str	r1, [sp, #4]
    1cce:	001f      	movs	r7, r3
    1cd0:	3741      	adds	r7, #65	; 0x41
    1cd2:	5dd2      	ldrb	r2, [r2, r7]
    1cd4:	2a00      	cmp	r2, #0
    1cd6:	d007      	beq.n	1ce8 <tcc_init+0x174>
    1cd8:	2a02      	cmp	r2, #2
    1cda:	d000      	beq.n	1cde <tcc_init+0x16a>
    1cdc:	e098      	b.n	1e10 <tcc_init+0x29c>
    1cde:	0002      	movs	r2, r0
    1ce0:	409a      	lsls	r2, r3
    1ce2:	9901      	ldr	r1, [sp, #4]
    1ce4:	4311      	orrs	r1, r2
    1ce6:	9101      	str	r1, [sp, #4]
    1ce8:	3301      	adds	r3, #1
    1cea:	2b08      	cmp	r3, #8
    1cec:	d1e4      	bne.n	1cb8 <tcc_init+0x144>
    1cee:	2230      	movs	r2, #48	; 0x30
    1cf0:	2107      	movs	r1, #7
    1cf2:	7e63      	ldrb	r3, [r4, #25]
    1cf4:	011b      	lsls	r3, r3, #4
    1cf6:	4013      	ands	r3, r2
    1cf8:	7e22      	ldrb	r2, [r4, #24]
    1cfa:	400a      	ands	r2, r1
    1cfc:	4313      	orrs	r3, r2
    1cfe:	2280      	movs	r2, #128	; 0x80
    1d00:	9304      	str	r3, [sp, #16]
    1d02:	2300      	movs	r3, #0
    1d04:	0252      	lsls	r2, r2, #9
    1d06:	18e1      	adds	r1, r4, r3
    1d08:	7d09      	ldrb	r1, [r1, #20]
    1d0a:	2900      	cmp	r1, #0
    1d0c:	d004      	beq.n	1d18 <tcc_init+0x1a4>
    1d0e:	0011      	movs	r1, r2
    1d10:	4099      	lsls	r1, r3
    1d12:	9804      	ldr	r0, [sp, #16]
    1d14:	4308      	orrs	r0, r1
    1d16:	9004      	str	r0, [sp, #16]
    1d18:	3301      	adds	r3, #1
    1d1a:	2b04      	cmp	r3, #4
    1d1c:	d1f3      	bne.n	1d06 <tcc_init+0x192>
    1d1e:	0031      	movs	r1, r6
    1d20:	2300      	movs	r3, #0
    1d22:	1d32      	adds	r2, r6, #4
    1d24:	3134      	adds	r1, #52	; 0x34
    1d26:	c208      	stmia	r2!, {r3}
    1d28:	428a      	cmp	r2, r1
    1d2a:	d1fc      	bne.n	1d26 <tcc_init+0x1b2>
    1d2c:	6373      	str	r3, [r6, #52]	; 0x34
    1d2e:	63b3      	str	r3, [r6, #56]	; 0x38
    1d30:	9b09      	ldr	r3, [sp, #36]	; 0x24
    1d32:	aa0a      	add	r2, sp, #40	; 0x28
    1d34:	0098      	lsls	r0, r3, #2
    1d36:	4b39      	ldr	r3, [pc, #228]	; (1e1c <tcc_init+0x2a8>)
    1d38:	0011      	movs	r1, r2
    1d3a:	50c6      	str	r6, [r0, r3]
    1d3c:	0023      	movs	r3, r4
    1d3e:	6035      	str	r5, [r6, #0]
    1d40:	33a0      	adds	r3, #160	; 0xa0
    1d42:	781b      	ldrb	r3, [r3, #0]
    1d44:	363c      	adds	r6, #60	; 0x3c
    1d46:	7033      	strb	r3, [r6, #0]
    1d48:	7aa3      	ldrb	r3, [r4, #10]
    1d4a:	2011      	movs	r0, #17
    1d4c:	7013      	strb	r3, [r2, #0]
    1d4e:	f7ff fdf3 	bl	1938 <system_gclk_chan_set_config>
    1d52:	2011      	movs	r0, #17
    1d54:	f7ff fdb4 	bl	18c0 <system_gclk_chan_enable>
    1d58:	0023      	movs	r3, r4
    1d5a:	0027      	movs	r7, r4
    1d5c:	0026      	movs	r6, r4
    1d5e:	3378      	adds	r3, #120	; 0x78
    1d60:	3798      	adds	r7, #152	; 0x98
    1d62:	3658      	adds	r6, #88	; 0x58
    1d64:	9305      	str	r3, [sp, #20]
    1d66:	783b      	ldrb	r3, [r7, #0]
    1d68:	2b00      	cmp	r3, #0
    1d6a:	d00d      	beq.n	1d88 <tcc_init+0x214>
    1d6c:	2301      	movs	r3, #1
    1d6e:	a90b      	add	r1, sp, #44	; 0x2c
    1d70:	708b      	strb	r3, [r1, #2]
    1d72:	2300      	movs	r3, #0
    1d74:	70cb      	strb	r3, [r1, #3]
    1d76:	3320      	adds	r3, #32
    1d78:	18f3      	adds	r3, r6, r3
    1d7a:	781b      	ldrb	r3, [r3, #0]
    1d7c:	7830      	ldrb	r0, [r6, #0]
    1d7e:	700b      	strb	r3, [r1, #0]
    1d80:	2301      	movs	r3, #1
    1d82:	704b      	strb	r3, [r1, #1]
    1d84:	f7ff fe3a 	bl	19fc <system_pinmux_pin_set_config>
    1d88:	9b05      	ldr	r3, [sp, #20]
    1d8a:	3604      	adds	r6, #4
    1d8c:	3701      	adds	r7, #1
    1d8e:	42b3      	cmp	r3, r6
    1d90:	d1e9      	bne.n	1d66 <tcc_init+0x1f2>
    1d92:	9b06      	ldr	r3, [sp, #24]
    1d94:	9a07      	ldr	r2, [sp, #28]
    1d96:	031b      	lsls	r3, r3, #12
    1d98:	0212      	lsls	r2, r2, #8
    1d9a:	4313      	orrs	r3, r2
    1d9c:	9a02      	ldr	r2, [sp, #8]
    1d9e:	4313      	orrs	r3, r2
    1da0:	602b      	str	r3, [r5, #0]
    1da2:	2304      	movs	r3, #4
    1da4:	68aa      	ldr	r2, [r5, #8]
    1da6:	421a      	tst	r2, r3
    1da8:	d1fc      	bne.n	1da4 <tcc_init+0x230>
    1daa:	23ff      	movs	r3, #255	; 0xff
    1dac:	712b      	strb	r3, [r5, #4]
    1dae:	3bfb      	subs	r3, #251	; 0xfb
    1db0:	68aa      	ldr	r2, [r5, #8]
    1db2:	421a      	tst	r2, r3
    1db4:	d1fc      	bne.n	1db0 <tcc_init+0x23c>
    1db6:	466b      	mov	r3, sp
    1db8:	7b1b      	ldrb	r3, [r3, #12]
    1dba:	716b      	strb	r3, [r5, #5]
    1dbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    1dbe:	60eb      	str	r3, [r5, #12]
    1dc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    1dc2:	612b      	str	r3, [r5, #16]
    1dc4:	9b01      	ldr	r3, [sp, #4]
    1dc6:	61ab      	str	r3, [r5, #24]
    1dc8:	4b15      	ldr	r3, [pc, #84]	; (1e20 <tcc_init+0x2ac>)
    1dca:	68aa      	ldr	r2, [r5, #8]
    1dcc:	421a      	tst	r2, r3
    1dce:	d1fc      	bne.n	1dca <tcc_init+0x256>
    1dd0:	9b04      	ldr	r3, [sp, #16]
    1dd2:	63eb      	str	r3, [r5, #60]	; 0x3c
    1dd4:	2310      	movs	r3, #16
    1dd6:	68aa      	ldr	r2, [r5, #8]
    1dd8:	421a      	tst	r2, r3
    1dda:	d1fc      	bne.n	1dd6 <tcc_init+0x262>
    1ddc:	6823      	ldr	r3, [r4, #0]
    1dde:	4a11      	ldr	r2, [pc, #68]	; (1e24 <tcc_init+0x2b0>)
    1de0:	636b      	str	r3, [r5, #52]	; 0x34
    1de2:	68ab      	ldr	r3, [r5, #8]
    1de4:	4013      	ands	r3, r2
    1de6:	d1fc      	bne.n	1de2 <tcc_init+0x26e>
    1de8:	6862      	ldr	r2, [r4, #4]
    1dea:	490f      	ldr	r1, [pc, #60]	; (1e28 <tcc_init+0x2b4>)
    1dec:	642a      	str	r2, [r5, #64]	; 0x40
    1dee:	000a      	movs	r2, r1
    1df0:	409a      	lsls	r2, r3
    1df2:	68a8      	ldr	r0, [r5, #8]
    1df4:	4010      	ands	r0, r2
    1df6:	d1fc      	bne.n	1df2 <tcc_init+0x27e>
    1df8:	009a      	lsls	r2, r3, #2
    1dfa:	18a2      	adds	r2, r4, r2
    1dfc:	69d6      	ldr	r6, [r2, #28]
    1dfe:	001a      	movs	r2, r3
    1e00:	3210      	adds	r2, #16
    1e02:	0092      	lsls	r2, r2, #2
    1e04:	18aa      	adds	r2, r5, r2
    1e06:	3301      	adds	r3, #1
    1e08:	6056      	str	r6, [r2, #4]
    1e0a:	2b04      	cmp	r3, #4
    1e0c:	d1ef      	bne.n	1dee <tcc_init+0x27a>
    1e0e:	e6cb      	b.n	1ba8 <tcc_init+0x34>
    1e10:	2201      	movs	r2, #1
    1e12:	e765      	b.n	1ce0 <tcc_init+0x16c>
    1e14:	40000400 	.word	0x40000400
    1e18:	00ffffff 	.word	0x00ffffff
    1e1c:	20000204 	.word	0x20000204
    1e20:	00020040 	.word	0x00020040
    1e24:	00040080 	.word	0x00040080
    1e28:	00080100 	.word	0x00080100

00001e2c <tcc_set_compare_value>:
    1e2c:	0003      	movs	r3, r0
    1e2e:	b510      	push	{r4, lr}
    1e30:	333c      	adds	r3, #60	; 0x3c
    1e32:	781b      	ldrb	r3, [r3, #0]
    1e34:	6800      	ldr	r0, [r0, #0]
    1e36:	f7ff fe03 	bl	1a40 <_tcc_set_compare_value.isra.5>
    1e3a:	bd10      	pop	{r4, pc}

00001e3c <_tcc_interrupt_handler>:
    1e3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e3e:	2500      	movs	r5, #0
    1e40:	4b0b      	ldr	r3, [pc, #44]	; (1e70 <_tcc_interrupt_handler+0x34>)
    1e42:	0080      	lsls	r0, r0, #2
    1e44:	58c4      	ldr	r4, [r0, r3]
    1e46:	6823      	ldr	r3, [r4, #0]
    1e48:	6b62      	ldr	r2, [r4, #52]	; 0x34
    1e4a:	6ade      	ldr	r6, [r3, #44]	; 0x2c
    1e4c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    1e4e:	4013      	ands	r3, r2
    1e50:	401e      	ands	r6, r3
    1e52:	4b08      	ldr	r3, [pc, #32]	; (1e74 <_tcc_interrupt_handler+0x38>)
    1e54:	58ef      	ldr	r7, [r5, r3]
    1e56:	4237      	tst	r7, r6
    1e58:	d005      	beq.n	1e66 <_tcc_interrupt_handler+0x2a>
    1e5a:	1963      	adds	r3, r4, r5
    1e5c:	685b      	ldr	r3, [r3, #4]
    1e5e:	0020      	movs	r0, r4
    1e60:	4798      	blx	r3
    1e62:	6823      	ldr	r3, [r4, #0]
    1e64:	62df      	str	r7, [r3, #44]	; 0x2c
    1e66:	3504      	adds	r5, #4
    1e68:	2d30      	cmp	r5, #48	; 0x30
    1e6a:	d1f2      	bne.n	1e52 <_tcc_interrupt_handler+0x16>
    1e6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1e6e:	46c0      	nop			; (mov r8, r8)
    1e70:	20000204 	.word	0x20000204
    1e74:	00002864 	.word	0x00002864

00001e78 <TCC0_Handler>:
    1e78:	b510      	push	{r4, lr}
    1e7a:	2000      	movs	r0, #0
    1e7c:	f7ff ffde 	bl	1e3c <_tcc_interrupt_handler>
    1e80:	bd10      	pop	{r4, pc}

00001e82 <tc_register_callback>:
    1e82:	1c93      	adds	r3, r2, #2
    1e84:	009b      	lsls	r3, r3, #2
    1e86:	5019      	str	r1, [r3, r0]
    1e88:	7e03      	ldrb	r3, [r0, #24]
    1e8a:	2a02      	cmp	r2, #2
    1e8c:	d104      	bne.n	1e98 <tc_register_callback+0x16>
    1e8e:	320e      	adds	r2, #14
    1e90:	4313      	orrs	r3, r2
    1e92:	7603      	strb	r3, [r0, #24]
    1e94:	2000      	movs	r0, #0
    1e96:	4770      	bx	lr
    1e98:	2a03      	cmp	r2, #3
    1e9a:	d101      	bne.n	1ea0 <tc_register_callback+0x1e>
    1e9c:	321d      	adds	r2, #29
    1e9e:	e7f7      	b.n	1e90 <tc_register_callback+0xe>
    1ea0:	2101      	movs	r1, #1
    1ea2:	4091      	lsls	r1, r2
    1ea4:	430b      	orrs	r3, r1
    1ea6:	e7f4      	b.n	1e92 <tc_register_callback+0x10>

00001ea8 <_tc_interrupt_handler>:
    1ea8:	b570      	push	{r4, r5, r6, lr}
    1eaa:	2601      	movs	r6, #1
    1eac:	4b14      	ldr	r3, [pc, #80]	; (1f00 <_tc_interrupt_handler+0x58>)
    1eae:	0080      	lsls	r0, r0, #2
    1eb0:	58c4      	ldr	r4, [r0, r3]
    1eb2:	6823      	ldr	r3, [r4, #0]
    1eb4:	7e22      	ldrb	r2, [r4, #24]
    1eb6:	7e65      	ldrb	r5, [r4, #25]
    1eb8:	7b9b      	ldrb	r3, [r3, #14]
    1eba:	4015      	ands	r5, r2
    1ebc:	401d      	ands	r5, r3
    1ebe:	4235      	tst	r5, r6
    1ec0:	d004      	beq.n	1ecc <_tc_interrupt_handler+0x24>
    1ec2:	68a3      	ldr	r3, [r4, #8]
    1ec4:	0020      	movs	r0, r4
    1ec6:	4798      	blx	r3
    1ec8:	6823      	ldr	r3, [r4, #0]
    1eca:	739e      	strb	r6, [r3, #14]
    1ecc:	2602      	movs	r6, #2
    1ece:	4235      	tst	r5, r6
    1ed0:	d004      	beq.n	1edc <_tc_interrupt_handler+0x34>
    1ed2:	68e3      	ldr	r3, [r4, #12]
    1ed4:	0020      	movs	r0, r4
    1ed6:	4798      	blx	r3
    1ed8:	6823      	ldr	r3, [r4, #0]
    1eda:	739e      	strb	r6, [r3, #14]
    1edc:	2610      	movs	r6, #16
    1ede:	4235      	tst	r5, r6
    1ee0:	d004      	beq.n	1eec <_tc_interrupt_handler+0x44>
    1ee2:	6923      	ldr	r3, [r4, #16]
    1ee4:	0020      	movs	r0, r4
    1ee6:	4798      	blx	r3
    1ee8:	6823      	ldr	r3, [r4, #0]
    1eea:	739e      	strb	r6, [r3, #14]
    1eec:	2620      	movs	r6, #32
    1eee:	4235      	tst	r5, r6
    1ef0:	d004      	beq.n	1efc <_tc_interrupt_handler+0x54>
    1ef2:	6963      	ldr	r3, [r4, #20]
    1ef4:	0020      	movs	r0, r4
    1ef6:	4798      	blx	r3
    1ef8:	6823      	ldr	r3, [r4, #0]
    1efa:	739e      	strb	r6, [r3, #14]
    1efc:	bd70      	pop	{r4, r5, r6, pc}
    1efe:	46c0      	nop			; (mov r8, r8)
    1f00:	20000208 	.word	0x20000208

00001f04 <TC1_Handler>:
    1f04:	b510      	push	{r4, lr}
    1f06:	2000      	movs	r0, #0
    1f08:	f7ff ffce 	bl	1ea8 <_tc_interrupt_handler>
    1f0c:	bd10      	pop	{r4, pc}

00001f0e <TC2_Handler>:
    1f0e:	b510      	push	{r4, lr}
    1f10:	2001      	movs	r0, #1
    1f12:	f7ff ffc9 	bl	1ea8 <_tc_interrupt_handler>
    1f16:	bd10      	pop	{r4, pc}

00001f18 <_tc_get_inst_index>:
    1f18:	4b06      	ldr	r3, [pc, #24]	; (1f34 <_tc_get_inst_index+0x1c>)
    1f1a:	4298      	cmp	r0, r3
    1f1c:	d007      	beq.n	1f2e <_tc_get_inst_index+0x16>
    1f1e:	4a06      	ldr	r2, [pc, #24]	; (1f38 <_tc_get_inst_index+0x20>)
    1f20:	2300      	movs	r3, #0
    1f22:	4290      	cmp	r0, r2
    1f24:	d101      	bne.n	1f2a <_tc_get_inst_index+0x12>
    1f26:	3301      	adds	r3, #1
    1f28:	b2db      	uxtb	r3, r3
    1f2a:	0018      	movs	r0, r3
    1f2c:	4770      	bx	lr
    1f2e:	2300      	movs	r3, #0
    1f30:	e7fa      	b.n	1f28 <_tc_get_inst_index+0x10>
    1f32:	46c0      	nop			; (mov r8, r8)
    1f34:	42001800 	.word	0x42001800
    1f38:	42001c00 	.word	0x42001c00

00001f3c <tc_init>:
    1f3c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1f3e:	0005      	movs	r5, r0
    1f40:	b085      	sub	sp, #20
    1f42:	0008      	movs	r0, r1
    1f44:	0014      	movs	r4, r2
    1f46:	000e      	movs	r6, r1
    1f48:	f7ff ffe6 	bl	1f18 <_tc_get_inst_index>
    1f4c:	466a      	mov	r2, sp
    1f4e:	2312      	movs	r3, #18
    1f50:	7113      	strb	r3, [r2, #4]
    1f52:	7153      	strb	r3, [r2, #5]
    1f54:	332e      	adds	r3, #46	; 0x2e
    1f56:	8113      	strh	r3, [r2, #8]
    1f58:	3340      	adds	r3, #64	; 0x40
    1f5a:	8153      	strh	r3, [r2, #10]
    1f5c:	2300      	movs	r3, #0
    1f5e:	60ab      	str	r3, [r5, #8]
    1f60:	60eb      	str	r3, [r5, #12]
    1f62:	612b      	str	r3, [r5, #16]
    1f64:	616b      	str	r3, [r5, #20]
    1f66:	762b      	strb	r3, [r5, #24]
    1f68:	766b      	strb	r3, [r5, #25]
    1f6a:	4b7c      	ldr	r3, [pc, #496]	; (215c <tc_init+0x220>)
    1f6c:	0082      	lsls	r2, r0, #2
    1f6e:	50d5      	str	r5, [r2, r3]
    1f70:	602e      	str	r6, [r5, #0]
    1f72:	78a3      	ldrb	r3, [r4, #2]
    1f74:	0007      	movs	r7, r0
    1f76:	2b08      	cmp	r3, #8
    1f78:	d103      	bne.n	1f82 <tc_init+0x46>
    1f7a:	2017      	movs	r0, #23
    1f7c:	07fa      	lsls	r2, r7, #31
    1f7e:	d500      	bpl.n	1f82 <tc_init+0x46>
    1f80:	e0d5      	b.n	212e <tc_init+0x1f2>
    1f82:	2201      	movs	r2, #1
    1f84:	712b      	strb	r3, [r5, #4]
    1f86:	8833      	ldrh	r3, [r6, #0]
    1f88:	2005      	movs	r0, #5
    1f8a:	4213      	tst	r3, r2
    1f8c:	d000      	beq.n	1f90 <tc_init+0x54>
    1f8e:	e0ce      	b.n	212e <tc_init+0x1f2>
    1f90:	7bf3      	ldrb	r3, [r6, #15]
    1f92:	3017      	adds	r0, #23
    1f94:	06db      	lsls	r3, r3, #27
    1f96:	d500      	bpl.n	1f9a <tc_init+0x5e>
    1f98:	e0c9      	b.n	212e <tc_init+0x1f2>
    1f9a:	2102      	movs	r1, #2
    1f9c:	8833      	ldrh	r3, [r6, #0]
    1f9e:	400b      	ands	r3, r1
    1fa0:	d000      	beq.n	1fa4 <tc_init+0x68>
    1fa2:	e0c4      	b.n	212e <tc_init+0x1f2>
    1fa4:	7c21      	ldrb	r1, [r4, #16]
    1fa6:	2900      	cmp	r1, #0
    1fa8:	d008      	beq.n	1fbc <tc_init+0x80>
    1faa:	a903      	add	r1, sp, #12
    1fac:	70cb      	strb	r3, [r1, #3]
    1fae:	7e23      	ldrb	r3, [r4, #24]
    1fb0:	7d20      	ldrb	r0, [r4, #20]
    1fb2:	708a      	strb	r2, [r1, #2]
    1fb4:	700b      	strb	r3, [r1, #0]
    1fb6:	704a      	strb	r2, [r1, #1]
    1fb8:	f7ff fd20 	bl	19fc <system_pinmux_pin_set_config>
    1fbc:	7f23      	ldrb	r3, [r4, #28]
    1fbe:	2b00      	cmp	r3, #0
    1fc0:	d00e      	beq.n	1fe0 <tc_init+0xa4>
    1fc2:	2200      	movs	r2, #0
    1fc4:	2301      	movs	r3, #1
    1fc6:	a903      	add	r1, sp, #12
    1fc8:	70ca      	strb	r2, [r1, #3]
    1fca:	3224      	adds	r2, #36	; 0x24
    1fcc:	708b      	strb	r3, [r1, #2]
    1fce:	18a2      	adds	r2, r4, r2
    1fd0:	704b      	strb	r3, [r1, #1]
    1fd2:	331f      	adds	r3, #31
    1fd4:	7812      	ldrb	r2, [r2, #0]
    1fd6:	18e3      	adds	r3, r4, r3
    1fd8:	7818      	ldrb	r0, [r3, #0]
    1fda:	700a      	strb	r2, [r1, #0]
    1fdc:	f7ff fd0e 	bl	19fc <system_pinmux_pin_set_config>
    1fe0:	007a      	lsls	r2, r7, #1
    1fe2:	4694      	mov	ip, r2
    1fe4:	4668      	mov	r0, sp
    1fe6:	2208      	movs	r2, #8
    1fe8:	1880      	adds	r0, r0, r2
    1fea:	4662      	mov	r2, ip
    1fec:	4b5c      	ldr	r3, [pc, #368]	; (2160 <tc_init+0x224>)
    1fee:	5a82      	ldrh	r2, [r0, r2]
    1ff0:	6a19      	ldr	r1, [r3, #32]
    1ff2:	430a      	orrs	r2, r1
    1ff4:	621a      	str	r2, [r3, #32]
    1ff6:	78a2      	ldrb	r2, [r4, #2]
    1ff8:	2a08      	cmp	r2, #8
    1ffa:	d10a      	bne.n	2012 <tc_init+0xd6>
    1ffc:	1c79      	adds	r1, r7, #1
    1ffe:	004a      	lsls	r2, r1, #1
    2000:	4694      	mov	ip, r2
    2002:	2108      	movs	r1, #8
    2004:	466a      	mov	r2, sp
    2006:	1852      	adds	r2, r2, r1
    2008:	4661      	mov	r1, ip
    200a:	6a18      	ldr	r0, [r3, #32]
    200c:	5a52      	ldrh	r2, [r2, r1]
    200e:	4302      	orrs	r2, r0
    2010:	621a      	str	r2, [r3, #32]
    2012:	466a      	mov	r2, sp
    2014:	7823      	ldrb	r3, [r4, #0]
    2016:	4669      	mov	r1, sp
    2018:	7013      	strb	r3, [r2, #0]
    201a:	466b      	mov	r3, sp
    201c:	3304      	adds	r3, #4
    201e:	5ddf      	ldrb	r7, [r3, r7]
    2020:	0038      	movs	r0, r7
    2022:	f7ff fc89 	bl	1938 <system_gclk_chan_set_config>
    2026:	0038      	movs	r0, r7
    2028:	f7ff fc4a 	bl	18c0 <system_gclk_chan_enable>
    202c:	8923      	ldrh	r3, [r4, #8]
    202e:	88a2      	ldrh	r2, [r4, #4]
    2030:	79a1      	ldrb	r1, [r4, #6]
    2032:	431a      	orrs	r2, r3
    2034:	78a3      	ldrb	r3, [r4, #2]
    2036:	430b      	orrs	r3, r1
    2038:	4313      	orrs	r3, r2
    203a:	7862      	ldrb	r2, [r4, #1]
    203c:	2a00      	cmp	r2, #0
    203e:	d002      	beq.n	2046 <tc_init+0x10a>
    2040:	2280      	movs	r2, #128	; 0x80
    2042:	0112      	lsls	r2, r2, #4
    2044:	4313      	orrs	r3, r2
    2046:	6829      	ldr	r1, [r5, #0]
    2048:	7bca      	ldrb	r2, [r1, #15]
    204a:	b252      	sxtb	r2, r2
    204c:	2a00      	cmp	r2, #0
    204e:	dbfb      	blt.n	2048 <tc_init+0x10c>
    2050:	8033      	strh	r3, [r6, #0]
    2052:	7b63      	ldrb	r3, [r4, #13]
    2054:	1e5a      	subs	r2, r3, #1
    2056:	4193      	sbcs	r3, r2
    2058:	7ba2      	ldrb	r2, [r4, #14]
    205a:	009b      	lsls	r3, r3, #2
    205c:	2a00      	cmp	r2, #0
    205e:	d001      	beq.n	2064 <tc_init+0x128>
    2060:	2201      	movs	r2, #1
    2062:	4313      	orrs	r3, r2
    2064:	6829      	ldr	r1, [r5, #0]
    2066:	7bca      	ldrb	r2, [r1, #15]
    2068:	b252      	sxtb	r2, r2
    206a:	2a00      	cmp	r2, #0
    206c:	dbfb      	blt.n	2066 <tc_init+0x12a>
    206e:	22ff      	movs	r2, #255	; 0xff
    2070:	7132      	strb	r2, [r6, #4]
    2072:	2b00      	cmp	r3, #0
    2074:	d005      	beq.n	2082 <tc_init+0x146>
    2076:	6829      	ldr	r1, [r5, #0]
    2078:	7bca      	ldrb	r2, [r1, #15]
    207a:	b252      	sxtb	r2, r2
    207c:	2a00      	cmp	r2, #0
    207e:	dbfb      	blt.n	2078 <tc_init+0x13c>
    2080:	7173      	strb	r3, [r6, #5]
    2082:	7ae3      	ldrb	r3, [r4, #11]
    2084:	7aa2      	ldrb	r2, [r4, #10]
    2086:	2b00      	cmp	r3, #0
    2088:	d001      	beq.n	208e <tc_init+0x152>
    208a:	2310      	movs	r3, #16
    208c:	431a      	orrs	r2, r3
    208e:	7b23      	ldrb	r3, [r4, #12]
    2090:	2b00      	cmp	r3, #0
    2092:	d001      	beq.n	2098 <tc_init+0x15c>
    2094:	2320      	movs	r3, #32
    2096:	431a      	orrs	r2, r3
    2098:	6829      	ldr	r1, [r5, #0]
    209a:	7bcb      	ldrb	r3, [r1, #15]
    209c:	b25b      	sxtb	r3, r3
    209e:	2b00      	cmp	r3, #0
    20a0:	dbfb      	blt.n	209a <tc_init+0x15e>
    20a2:	71b2      	strb	r2, [r6, #6]
    20a4:	682b      	ldr	r3, [r5, #0]
    20a6:	7bda      	ldrb	r2, [r3, #15]
    20a8:	b252      	sxtb	r2, r2
    20aa:	2a00      	cmp	r2, #0
    20ac:	dbfb      	blt.n	20a6 <tc_init+0x16a>
    20ae:	792a      	ldrb	r2, [r5, #4]
    20b0:	2a04      	cmp	r2, #4
    20b2:	d019      	beq.n	20e8 <tc_init+0x1ac>
    20b4:	2a08      	cmp	r2, #8
    20b6:	d03c      	beq.n	2132 <tc_init+0x1f6>
    20b8:	2017      	movs	r0, #23
    20ba:	2a00      	cmp	r2, #0
    20bc:	d137      	bne.n	212e <tc_init+0x1f2>
    20be:	7bda      	ldrb	r2, [r3, #15]
    20c0:	b252      	sxtb	r2, r2
    20c2:	2a00      	cmp	r2, #0
    20c4:	dbfb      	blt.n	20be <tc_init+0x182>
    20c6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    20c8:	8233      	strh	r3, [r6, #16]
    20ca:	682a      	ldr	r2, [r5, #0]
    20cc:	7bd3      	ldrb	r3, [r2, #15]
    20ce:	b25b      	sxtb	r3, r3
    20d0:	2b00      	cmp	r3, #0
    20d2:	dbfb      	blt.n	20cc <tc_init+0x190>
    20d4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    20d6:	8333      	strh	r3, [r6, #24]
    20d8:	682a      	ldr	r2, [r5, #0]
    20da:	7bd3      	ldrb	r3, [r2, #15]
    20dc:	b25b      	sxtb	r3, r3
    20de:	2b00      	cmp	r3, #0
    20e0:	dbfb      	blt.n	20da <tc_init+0x19e>
    20e2:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    20e4:	8373      	strh	r3, [r6, #26]
    20e6:	e021      	b.n	212c <tc_init+0x1f0>
    20e8:	7bda      	ldrb	r2, [r3, #15]
    20ea:	b252      	sxtb	r2, r2
    20ec:	2a00      	cmp	r2, #0
    20ee:	dbfb      	blt.n	20e8 <tc_init+0x1ac>
    20f0:	0023      	movs	r3, r4
    20f2:	3328      	adds	r3, #40	; 0x28
    20f4:	781b      	ldrb	r3, [r3, #0]
    20f6:	7433      	strb	r3, [r6, #16]
    20f8:	682a      	ldr	r2, [r5, #0]
    20fa:	7bd3      	ldrb	r3, [r2, #15]
    20fc:	b25b      	sxtb	r3, r3
    20fe:	2b00      	cmp	r3, #0
    2100:	dbfb      	blt.n	20fa <tc_init+0x1be>
    2102:	0023      	movs	r3, r4
    2104:	3329      	adds	r3, #41	; 0x29
    2106:	781b      	ldrb	r3, [r3, #0]
    2108:	7533      	strb	r3, [r6, #20]
    210a:	682a      	ldr	r2, [r5, #0]
    210c:	7bd3      	ldrb	r3, [r2, #15]
    210e:	b25b      	sxtb	r3, r3
    2110:	2b00      	cmp	r3, #0
    2112:	dbfb      	blt.n	210c <tc_init+0x1d0>
    2114:	0023      	movs	r3, r4
    2116:	332a      	adds	r3, #42	; 0x2a
    2118:	781b      	ldrb	r3, [r3, #0]
    211a:	7633      	strb	r3, [r6, #24]
    211c:	682a      	ldr	r2, [r5, #0]
    211e:	7bd3      	ldrb	r3, [r2, #15]
    2120:	b25b      	sxtb	r3, r3
    2122:	2b00      	cmp	r3, #0
    2124:	dbfb      	blt.n	211e <tc_init+0x1e2>
    2126:	342b      	adds	r4, #43	; 0x2b
    2128:	7823      	ldrb	r3, [r4, #0]
    212a:	7673      	strb	r3, [r6, #25]
    212c:	2000      	movs	r0, #0
    212e:	b005      	add	sp, #20
    2130:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2132:	7bda      	ldrb	r2, [r3, #15]
    2134:	b252      	sxtb	r2, r2
    2136:	2a00      	cmp	r2, #0
    2138:	dbfb      	blt.n	2132 <tc_init+0x1f6>
    213a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    213c:	6133      	str	r3, [r6, #16]
    213e:	682a      	ldr	r2, [r5, #0]
    2140:	7bd3      	ldrb	r3, [r2, #15]
    2142:	b25b      	sxtb	r3, r3
    2144:	2b00      	cmp	r3, #0
    2146:	dbfb      	blt.n	2140 <tc_init+0x204>
    2148:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    214a:	61b3      	str	r3, [r6, #24]
    214c:	682a      	ldr	r2, [r5, #0]
    214e:	7bd3      	ldrb	r3, [r2, #15]
    2150:	b25b      	sxtb	r3, r3
    2152:	2b00      	cmp	r3, #0
    2154:	dbfb      	blt.n	214e <tc_init+0x212>
    2156:	6b23      	ldr	r3, [r4, #48]	; 0x30
    2158:	61f3      	str	r3, [r6, #28]
    215a:	e7e7      	b.n	212c <tc_init+0x1f0>
    215c:	20000208 	.word	0x20000208
    2160:	40000400 	.word	0x40000400

00002164 <tc_set_compare_value>:
    2164:	b510      	push	{r4, lr}
    2166:	6804      	ldr	r4, [r0, #0]
    2168:	7be3      	ldrb	r3, [r4, #15]
    216a:	b25b      	sxtb	r3, r3
    216c:	2b00      	cmp	r3, #0
    216e:	dbfb      	blt.n	2168 <tc_set_compare_value+0x4>
    2170:	7903      	ldrb	r3, [r0, #4]
    2172:	2b04      	cmp	r3, #4
    2174:	d00c      	beq.n	2190 <tc_set_compare_value+0x2c>
    2176:	2b08      	cmp	r3, #8
    2178:	d012      	beq.n	21a0 <tc_set_compare_value+0x3c>
    217a:	2017      	movs	r0, #23
    217c:	2b00      	cmp	r3, #0
    217e:	d10e      	bne.n	219e <tc_set_compare_value+0x3a>
    2180:	2017      	movs	r0, #23
    2182:	2901      	cmp	r1, #1
    2184:	d80b      	bhi.n	219e <tc_set_compare_value+0x3a>
    2186:	310c      	adds	r1, #12
    2188:	b292      	uxth	r2, r2
    218a:	0049      	lsls	r1, r1, #1
    218c:	530a      	strh	r2, [r1, r4]
    218e:	e005      	b.n	219c <tc_set_compare_value+0x38>
    2190:	2017      	movs	r0, #23
    2192:	2901      	cmp	r1, #1
    2194:	d803      	bhi.n	219e <tc_set_compare_value+0x3a>
    2196:	b2d2      	uxtb	r2, r2
    2198:	1861      	adds	r1, r4, r1
    219a:	760a      	strb	r2, [r1, #24]
    219c:	2000      	movs	r0, #0
    219e:	bd10      	pop	{r4, pc}
    21a0:	2017      	movs	r0, #23
    21a2:	2901      	cmp	r1, #1
    21a4:	d8fb      	bhi.n	219e <tc_set_compare_value+0x3a>
    21a6:	3106      	adds	r1, #6
    21a8:	0089      	lsls	r1, r1, #2
    21aa:	510a      	str	r2, [r1, r4]
    21ac:	e7f6      	b.n	219c <tc_set_compare_value+0x38>

000021ae <Dummy_Handler>:
    21ae:	e7fe      	b.n	21ae <Dummy_Handler>

000021b0 <Reset_Handler>:
    21b0:	4821      	ldr	r0, [pc, #132]	; (2238 <Reset_Handler+0x88>)
    21b2:	4922      	ldr	r1, [pc, #136]	; (223c <Reset_Handler+0x8c>)
    21b4:	b570      	push	{r4, r5, r6, lr}
    21b6:	4288      	cmp	r0, r1
    21b8:	d004      	beq.n	21c4 <Reset_Handler+0x14>
    21ba:	2300      	movs	r3, #0
    21bc:	4c20      	ldr	r4, [pc, #128]	; (2240 <Reset_Handler+0x90>)
    21be:	18ca      	adds	r2, r1, r3
    21c0:	42a2      	cmp	r2, r4
    21c2:	d332      	bcc.n	222a <Reset_Handler+0x7a>
    21c4:	2100      	movs	r1, #0
    21c6:	4b1f      	ldr	r3, [pc, #124]	; (2244 <Reset_Handler+0x94>)
    21c8:	4a1f      	ldr	r2, [pc, #124]	; (2248 <Reset_Handler+0x98>)
    21ca:	4293      	cmp	r3, r2
    21cc:	d331      	bcc.n	2232 <Reset_Handler+0x82>
    21ce:	21ff      	movs	r1, #255	; 0xff
    21d0:	4b1e      	ldr	r3, [pc, #120]	; (224c <Reset_Handler+0x9c>)
    21d2:	4a1f      	ldr	r2, [pc, #124]	; (2250 <Reset_Handler+0xa0>)
    21d4:	438b      	bics	r3, r1
    21d6:	6093      	str	r3, [r2, #8]
    21d8:	2202      	movs	r2, #2
    21da:	250c      	movs	r5, #12
    21dc:	2408      	movs	r4, #8
    21de:	2630      	movs	r6, #48	; 0x30
    21e0:	4b1c      	ldr	r3, [pc, #112]	; (2254 <Reset_Handler+0xa4>)
    21e2:	481d      	ldr	r0, [pc, #116]	; (2258 <Reset_Handler+0xa8>)
    21e4:	625a      	str	r2, [r3, #36]	; 0x24
    21e6:	78c3      	ldrb	r3, [r0, #3]
    21e8:	39fc      	subs	r1, #252	; 0xfc
    21ea:	438b      	bics	r3, r1
    21ec:	4313      	orrs	r3, r2
    21ee:	70c3      	strb	r3, [r0, #3]
    21f0:	78c3      	ldrb	r3, [r0, #3]
    21f2:	43ab      	bics	r3, r5
    21f4:	4323      	orrs	r3, r4
    21f6:	70c3      	strb	r3, [r0, #3]
    21f8:	4b18      	ldr	r3, [pc, #96]	; (225c <Reset_Handler+0xac>)
    21fa:	7b98      	ldrb	r0, [r3, #14]
    21fc:	43b0      	bics	r0, r6
    21fe:	0006      	movs	r6, r0
    2200:	2020      	movs	r0, #32
    2202:	4330      	orrs	r0, r6
    2204:	7398      	strb	r0, [r3, #14]
    2206:	7b98      	ldrb	r0, [r3, #14]
    2208:	43a8      	bics	r0, r5
    220a:	4304      	orrs	r4, r0
    220c:	739c      	strb	r4, [r3, #14]
    220e:	7b98      	ldrb	r0, [r3, #14]
    2210:	4388      	bics	r0, r1
    2212:	4302      	orrs	r2, r0
    2214:	739a      	strb	r2, [r3, #14]
    2216:	2380      	movs	r3, #128	; 0x80
    2218:	4a11      	ldr	r2, [pc, #68]	; (2260 <Reset_Handler+0xb0>)
    221a:	6851      	ldr	r1, [r2, #4]
    221c:	430b      	orrs	r3, r1
    221e:	6053      	str	r3, [r2, #4]
    2220:	f000 fac2 	bl	27a8 <__libc_init_array>
    2224:	f000 fa22 	bl	266c <main>
    2228:	e7fe      	b.n	2228 <Reset_Handler+0x78>
    222a:	58c5      	ldr	r5, [r0, r3]
    222c:	3304      	adds	r3, #4
    222e:	6015      	str	r5, [r2, #0]
    2230:	e7c5      	b.n	21be <Reset_Handler+0xe>
    2232:	c302      	stmia	r3!, {r1}
    2234:	e7c9      	b.n	21ca <Reset_Handler+0x1a>
    2236:	46c0      	nop			; (mov r8, r8)
    2238:	000028dc 	.word	0x000028dc
    223c:	20000000 	.word	0x20000000
    2240:	20000018 	.word	0x20000018
    2244:	20000018 	.word	0x20000018
    2248:	20000238 	.word	0x20000238
    224c:	00000000 	.word	0x00000000
    2250:	e000ed00 	.word	0xe000ed00
    2254:	410070fc 	.word	0x410070fc
    2258:	41005000 	.word	0x41005000
    225c:	41004800 	.word	0x41004800
    2260:	41004000 	.word	0x41004000

00002264 <set_color_green_indication>:
#define BUFFER_SET_COLOR_BLUE_PWM						{0x04, 0x20}
#define BUFFER_SET_COLOR_BLUE_PWM_TIMER					{0x02, 0x19}
#define BUFFER_SET_COLOR_BLUE_PWM_FLASH					{0x01, 0x82}


void set_color_green_indication(void) {
    2264:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t buffer_set_color_green[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_GREEN;
    2266:	2502      	movs	r5, #2
    2268:	ae01      	add	r6, sp, #4
    226a:	002a      	movs	r2, r5
    226c:	4907      	ldr	r1, [pc, #28]	; (228c <set_color_green_indication+0x28>)
    226e:	0030      	movs	r0, r6
    2270:	f000 fabe 	bl	27f0 <memcpy>
  packet.data = buffer_set_color_green;
  packet.address = KTD2026_DEVICE_ADDRESS;
    2274:	2331      	movs	r3, #49	; 0x31
  packet.data = buffer_set_color_green;
    2276:	4c06      	ldr	r4, [pc, #24]	; (2290 <set_color_green_indication+0x2c>)
    2278:	6066      	str	r6, [r4, #4]
  packet.address = KTD2026_DEVICE_ADDRESS;
    227a:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;
    227c:	8065      	strh	r5, [r4, #2]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    227e:	0021      	movs	r1, r4
    2280:	4804      	ldr	r0, [pc, #16]	; (2294 <set_color_green_indication+0x30>)
    2282:	f7fe ff6f 	bl	1164 <i2c_master_write_packet_wait>
    2286:	2800      	cmp	r0, #0
    2288:	d1f9      	bne.n	227e <set_color_green_indication+0x1a>
         STATUS_OK) {
  }
}
    228a:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    228c:	00002894 	.word	0x00002894
    2290:	2000000c 	.word	0x2000000c
    2294:	20000210 	.word	0x20000210

00002298 <set_color_red_indication>:

void set_color_red_indication(void) {
    2298:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t buffer_set_color_red[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_RED;
    229a:	2502      	movs	r5, #2
    229c:	4909      	ldr	r1, [pc, #36]	; (22c4 <set_color_red_indication+0x2c>)
    229e:	ae01      	add	r6, sp, #4
    22a0:	002a      	movs	r2, r5
    22a2:	1949      	adds	r1, r1, r5
    22a4:	0030      	movs	r0, r6
    22a6:	f000 faa3 	bl	27f0 <memcpy>
  packet.data = buffer_set_color_red;
  packet.address = KTD2026_DEVICE_ADDRESS;
    22aa:	2331      	movs	r3, #49	; 0x31
  packet.data = buffer_set_color_red;
    22ac:	4c06      	ldr	r4, [pc, #24]	; (22c8 <set_color_red_indication+0x30>)
    22ae:	6066      	str	r6, [r4, #4]
  packet.address = KTD2026_DEVICE_ADDRESS;
    22b0:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;
    22b2:	8065      	strh	r5, [r4, #2]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    22b4:	0021      	movs	r1, r4
    22b6:	4805      	ldr	r0, [pc, #20]	; (22cc <set_color_red_indication+0x34>)
    22b8:	f7fe ff54 	bl	1164 <i2c_master_write_packet_wait>
    22bc:	2800      	cmp	r0, #0
    22be:	d1f9      	bne.n	22b4 <set_color_red_indication+0x1c>
         STATUS_OK) {
  }
}
    22c0:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    22c2:	46c0      	nop			; (mov r8, r8)
    22c4:	00002894 	.word	0x00002894
    22c8:	2000000c 	.word	0x2000000c
    22cc:	20000210 	.word	0x20000210

000022d0 <set_color_yellow_indication>:
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
         STATUS_OK) {
  }
}

void set_color_yellow_indication(void) {
    22d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
	uint8_t buffer_set_color_yellow[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_YELLOW;
    22d2:	2502      	movs	r5, #2
    22d4:	4909      	ldr	r1, [pc, #36]	; (22fc <set_color_yellow_indication+0x2c>)
    22d6:	ae01      	add	r6, sp, #4
    22d8:	002a      	movs	r2, r5
    22da:	3106      	adds	r1, #6
    22dc:	0030      	movs	r0, r6
    22de:	f000 fa87 	bl	27f0 <memcpy>
	packet.data = buffer_set_color_yellow;
	packet.address = KTD2026_DEVICE_ADDRESS;
    22e2:	2331      	movs	r3, #49	; 0x31
	packet.data = buffer_set_color_yellow;
    22e4:	4c06      	ldr	r4, [pc, #24]	; (2300 <set_color_yellow_indication+0x30>)
    22e6:	6066      	str	r6, [r4, #4]
	packet.address = KTD2026_DEVICE_ADDRESS;
    22e8:	8023      	strh	r3, [r4, #0]
	packet.data_length = DATA_LENGTH_PRIMARY;
    22ea:	8065      	strh	r5, [r4, #2]

	while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    22ec:	0021      	movs	r1, r4
    22ee:	4805      	ldr	r0, [pc, #20]	; (2304 <set_color_yellow_indication+0x34>)
    22f0:	f7fe ff38 	bl	1164 <i2c_master_write_packet_wait>
    22f4:	2800      	cmp	r0, #0
    22f6:	d1f9      	bne.n	22ec <set_color_yellow_indication+0x1c>
	STATUS_OK) {
	}
}
    22f8:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    22fa:	46c0      	nop			; (mov r8, r8)
    22fc:	00002894 	.word	0x00002894
    2300:	2000000c 	.word	0x2000000c
    2304:	20000210 	.word	0x20000210

00002308 <set_battery_charge_routine>:
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
                                       &packet)) != STATUS_OK) {
  }
}

void set_battery_charge_routine(void) {
    2308:	b5f0      	push	{r4, r5, r6, r7, lr}

  uint8_t buffer_set_color_green_PWM[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_GREEN_PWM;
    230a:	4c21      	ldr	r4, [pc, #132]	; (2390 <set_battery_charge_routine+0x88>)
    230c:	2502      	movs	r5, #2
    230e:	0021      	movs	r1, r4
void set_battery_charge_routine(void) {
    2310:	b085      	sub	sp, #20
  uint8_t buffer_set_color_green_PWM[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_GREEN_PWM;
    2312:	310c      	adds	r1, #12
    2314:	002a      	movs	r2, r5
    2316:	4668      	mov	r0, sp
    2318:	f000 fa6a 	bl	27f0 <memcpy>
  uint8_t buffer_set_charge_routine_flash_period[DATA_LENGTH_PRIMARY] = BUFFER_SET_CHARGE_ROUTINE_FLASH_PERIOD;
    231c:	0021      	movs	r1, r4
    231e:	af01      	add	r7, sp, #4
    2320:	310e      	adds	r1, #14
    2322:	002a      	movs	r2, r5
    2324:	0038      	movs	r0, r7
    2326:	f000 fa63 	bl	27f0 <memcpy>
  uint8_t buffer_set_charge_routine_trise_tfall[DATA_LENGTH_PRIMARY] = BUFFER_SET_CHARGE_ROUTINE_TRISE_TFALL;
    232a:	0021      	movs	r1, r4
    232c:	ae02      	add	r6, sp, #8
    232e:	3110      	adds	r1, #16
    2330:	002a      	movs	r2, r5
    2332:	0030      	movs	r0, r6
    2334:	f000 fa5c 	bl	27f0 <memcpy>
  uint8_t buffer_set_charge_routine_PWM1_timer[DATA_LENGTH_PRIMARY] = BUFFER_SET_CHARGE_ROUTINE_PWM1_TIMER;
    2338:	0021      	movs	r1, r4
    233a:	002a      	movs	r2, r5
    233c:	3112      	adds	r1, #18
    233e:	a803      	add	r0, sp, #12
    2340:	f000 fa56 	bl	27f0 <memcpy>

  packet.address = KTD2026_DEVICE_ADDRESS;
    2344:	2331      	movs	r3, #49	; 0x31
    2346:	4c13      	ldr	r4, [pc, #76]	; (2394 <set_battery_charge_routine+0x8c>)
    2348:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;

  packet.data = buffer_set_color_green_PWM;
    234a:	466b      	mov	r3, sp
  packet.data_length = DATA_LENGTH_PRIMARY;
    234c:	8065      	strh	r5, [r4, #2]
  packet.data = buffer_set_color_green_PWM;
    234e:	6063      	str	r3, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    2350:	4d11      	ldr	r5, [pc, #68]	; (2398 <set_battery_charge_routine+0x90>)
    2352:	0021      	movs	r1, r4
    2354:	0028      	movs	r0, r5
    2356:	f7fe ff05 	bl	1164 <i2c_master_write_packet_wait>
    235a:	2800      	cmp	r0, #0
    235c:	d1f8      	bne.n	2350 <set_battery_charge_routine+0x48>
         STATUS_OK) {
  }
  packet.data = buffer_set_charge_routine_flash_period;
    235e:	6067      	str	r7, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    2360:	0021      	movs	r1, r4
    2362:	0028      	movs	r0, r5
    2364:	f7fe fefe 	bl	1164 <i2c_master_write_packet_wait>
    2368:	2800      	cmp	r0, #0
    236a:	d1f9      	bne.n	2360 <set_battery_charge_routine+0x58>
         STATUS_OK) {
  }
  packet.data = buffer_set_charge_routine_trise_tfall;
    236c:	6066      	str	r6, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    236e:	0021      	movs	r1, r4
    2370:	0028      	movs	r0, r5
    2372:	f7fe fef7 	bl	1164 <i2c_master_write_packet_wait>
    2376:	2800      	cmp	r0, #0
    2378:	d1f9      	bne.n	236e <set_battery_charge_routine+0x66>
                                       &packet)) != STATUS_OK) {
  }
  packet.data = buffer_set_charge_routine_PWM1_timer;
    237a:	ab03      	add	r3, sp, #12
    237c:	6063      	str	r3, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    237e:	0021      	movs	r1, r4
    2380:	0028      	movs	r0, r5
    2382:	f7fe feef 	bl	1164 <i2c_master_write_packet_wait>
    2386:	2800      	cmp	r0, #0
    2388:	d1f9      	bne.n	237e <set_battery_charge_routine+0x76>
                                       &packet)) != STATUS_OK) {
  }
}
    238a:	b005      	add	sp, #20
    238c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    238e:	46c0      	nop			; (mov r8, r8)
    2390:	00002894 	.word	0x00002894
    2394:	2000000c 	.word	0x2000000c
    2398:	20000210 	.word	0x20000210

0000239c <set_battery_low_routine>:

void set_battery_low_routine(void) {
    239c:	b5f0      	push	{r4, r5, r6, r7, lr}

  uint8_t buffer_set_color_red_PWM[DATA_LENGTH_PRIMARY]				= BUFFER_SET_COLOR_RED_PWM;
    239e:	4c21      	ldr	r4, [pc, #132]	; (2424 <set_battery_low_routine+0x88>)
    23a0:	2502      	movs	r5, #2
    23a2:	0021      	movs	r1, r4
void set_battery_low_routine(void) {
    23a4:	b085      	sub	sp, #20
  uint8_t buffer_set_color_red_PWM[DATA_LENGTH_PRIMARY]				= BUFFER_SET_COLOR_RED_PWM;
    23a6:	3114      	adds	r1, #20
    23a8:	002a      	movs	r2, r5
    23aa:	4668      	mov	r0, sp
    23ac:	f000 fa20 	bl	27f0 <memcpy>
  uint8_t buffer_set_low_routine_flash_period[DATA_LENGTH_PRIMARY]	= BUFFER_SET_LOW_ROUTINE_FLASH_PERIOD;
    23b0:	0021      	movs	r1, r4
    23b2:	af01      	add	r7, sp, #4
    23b4:	3116      	adds	r1, #22
    23b6:	002a      	movs	r2, r5
    23b8:	0038      	movs	r0, r7
    23ba:	f000 fa19 	bl	27f0 <memcpy>
  uint8_t buffer_set_low_routine_trise_tfall[DATA_LENGTH_PRIMARY]	= BUFFER_SET_LOW_ROUTINE_TRISE_TFALL;
    23be:	0021      	movs	r1, r4
    23c0:	002a      	movs	r2, r5
    23c2:	3118      	adds	r1, #24
    23c4:	a802      	add	r0, sp, #8
    23c6:	f000 fa13 	bl	27f0 <memcpy>
  uint8_t buffer_set_low_routine_brightness[DATA_LENGTH_PRIMARY]	= BUFFER_SET_COLOR_RED_BRIGHTNESS;
    23ca:	0021      	movs	r1, r4
    23cc:	ae03      	add	r6, sp, #12
    23ce:	311a      	adds	r1, #26
    23d0:	002a      	movs	r2, r5
    23d2:	0030      	movs	r0, r6
    23d4:	f000 fa0c 	bl	27f0 <memcpy>

  packet.address = KTD2026_DEVICE_ADDRESS;
    23d8:	2331      	movs	r3, #49	; 0x31
    23da:	4c13      	ldr	r4, [pc, #76]	; (2428 <set_battery_low_routine+0x8c>)
    23dc:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;

  packet.data = buffer_set_color_red_PWM;
    23de:	466b      	mov	r3, sp
  packet.data_length = DATA_LENGTH_PRIMARY;
    23e0:	8065      	strh	r5, [r4, #2]
  packet.data = buffer_set_color_red_PWM;
    23e2:	6063      	str	r3, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    23e4:	4d11      	ldr	r5, [pc, #68]	; (242c <set_battery_low_routine+0x90>)
    23e6:	0021      	movs	r1, r4
    23e8:	0028      	movs	r0, r5
    23ea:	f7fe febb 	bl	1164 <i2c_master_write_packet_wait>
    23ee:	2800      	cmp	r0, #0
    23f0:	d1f8      	bne.n	23e4 <set_battery_low_routine+0x48>
         STATUS_OK) {
  }
  packet.data = buffer_set_low_routine_flash_period;
    23f2:	6067      	str	r7, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    23f4:	0021      	movs	r1, r4
    23f6:	0028      	movs	r0, r5
    23f8:	f7fe feb4 	bl	1164 <i2c_master_write_packet_wait>
    23fc:	2800      	cmp	r0, #0
    23fe:	d1f9      	bne.n	23f4 <set_battery_low_routine+0x58>
         STATUS_OK) {
  }
  packet.data = buffer_set_low_routine_brightness;
    2400:	6066      	str	r6, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2402:	0021      	movs	r1, r4
    2404:	0028      	movs	r0, r5
    2406:	f7fe fead 	bl	1164 <i2c_master_write_packet_wait>
    240a:	2800      	cmp	r0, #0
    240c:	d1f9      	bne.n	2402 <set_battery_low_routine+0x66>
                                       &packet)) != STATUS_OK) {
  }

	packet.data = buffer_set_low_routine_trise_tfall;
    240e:	ab02      	add	r3, sp, #8
    2410:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2412:	0021      	movs	r1, r4
    2414:	0028      	movs	r0, r5
    2416:	f7fe fea5 	bl	1164 <i2c_master_write_packet_wait>
    241a:	2800      	cmp	r0, #0
    241c:	d1f9      	bne.n	2412 <set_battery_low_routine+0x76>
	&packet)) != STATUS_OK) {
	}
}
    241e:	b005      	add	sp, #20
    2420:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2422:	46c0      	nop			; (mov r8, r8)
    2424:	00002894 	.word	0x00002894
    2428:	2000000c 	.word	0x2000000c
    242c:	20000210 	.word	0x20000210

00002430 <set_motor_speed_1_indication>:





void set_motor_speed_1_indication(void){
    2430:	b573      	push	{r0, r1, r4, r5, r6, lr}

  uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    2432:	4c12      	ldr	r4, [pc, #72]	; (247c <set_motor_speed_1_indication+0x4c>)
    2434:	2502      	movs	r5, #2
    2436:	0021      	movs	r1, r4
    2438:	002a      	movs	r2, r5
    243a:	311c      	adds	r1, #28
    243c:	4668      	mov	r0, sp
    243e:	f000 f9d7 	bl	27f0 <memcpy>
  uint8_t buffer_set_blue_lowest_brightness[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_LOWEST_BRIGTHNESS;
    2442:	0021      	movs	r1, r4
    2444:	ae01      	add	r6, sp, #4
    2446:	311e      	adds	r1, #30
    2448:	002a      	movs	r2, r5
    244a:	0030      	movs	r0, r6
    244c:	f000 f9d0 	bl	27f0 <memcpy>

  packet.address = KTD2026_DEVICE_ADDRESS;
    2450:	2331      	movs	r3, #49	; 0x31
    2452:	4c0b      	ldr	r4, [pc, #44]	; (2480 <set_motor_speed_1_indication+0x50>)
    2454:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;
  
  packet.data = buffer_set_blue;
    2456:	466b      	mov	r3, sp
  packet.data_length = DATA_LENGTH_PRIMARY;
    2458:	8065      	strh	r5, [r4, #2]
  packet.data = buffer_set_blue;
    245a:	6063      	str	r3, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    245c:	4d09      	ldr	r5, [pc, #36]	; (2484 <set_motor_speed_1_indication+0x54>)
    245e:	0021      	movs	r1, r4
    2460:	0028      	movs	r0, r5
    2462:	f7fe fe7f 	bl	1164 <i2c_master_write_packet_wait>
    2466:	2800      	cmp	r0, #0
    2468:	d1f8      	bne.n	245c <set_motor_speed_1_indication+0x2c>
  &packet)) != STATUS_OK) {
  }

  packet.data = buffer_set_blue_lowest_brightness;
    246a:	6066      	str	r6, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    246c:	0021      	movs	r1, r4
    246e:	0028      	movs	r0, r5
    2470:	f7fe fe78 	bl	1164 <i2c_master_write_packet_wait>
    2474:	2800      	cmp	r0, #0
    2476:	d1f9      	bne.n	246c <set_motor_speed_1_indication+0x3c>
  &packet)) != STATUS_OK) {
  }

}
    2478:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    247a:	46c0      	nop			; (mov r8, r8)
    247c:	00002894 	.word	0x00002894
    2480:	2000000c 	.word	0x2000000c
    2484:	20000210 	.word	0x20000210

00002488 <set_motor_speed_2_indication>:

void set_motor_speed_2_indication(void){
    2488:	b573      	push	{r0, r1, r4, r5, r6, lr}

	uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    248a:	4c12      	ldr	r4, [pc, #72]	; (24d4 <set_motor_speed_2_indication+0x4c>)
    248c:	2502      	movs	r5, #2
    248e:	0021      	movs	r1, r4
    2490:	002a      	movs	r2, r5
    2492:	311c      	adds	r1, #28
    2494:	4668      	mov	r0, sp
    2496:	f000 f9ab 	bl	27f0 <memcpy>
	uint8_t buffer_set_blue_low_brightness[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_LOW_BRIGTHNESS;
    249a:	0021      	movs	r1, r4
    249c:	ae01      	add	r6, sp, #4
    249e:	3120      	adds	r1, #32
    24a0:	002a      	movs	r2, r5
    24a2:	0030      	movs	r0, r6
    24a4:	f000 f9a4 	bl	27f0 <memcpy>

	packet.address = KTD2026_DEVICE_ADDRESS;
    24a8:	2331      	movs	r3, #49	; 0x31
    24aa:	4c0b      	ldr	r4, [pc, #44]	; (24d8 <set_motor_speed_2_indication+0x50>)
    24ac:	8023      	strh	r3, [r4, #0]
	packet.data_length = DATA_LENGTH_PRIMARY;

	packet.data = buffer_set_blue;
    24ae:	466b      	mov	r3, sp
	packet.data_length = DATA_LENGTH_PRIMARY;
    24b0:	8065      	strh	r5, [r4, #2]
	packet.data = buffer_set_blue;
    24b2:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    24b4:	4d09      	ldr	r5, [pc, #36]	; (24dc <set_motor_speed_2_indication+0x54>)
    24b6:	0021      	movs	r1, r4
    24b8:	0028      	movs	r0, r5
    24ba:	f7fe fe53 	bl	1164 <i2c_master_write_packet_wait>
    24be:	2800      	cmp	r0, #0
    24c0:	d1f8      	bne.n	24b4 <set_motor_speed_2_indication+0x2c>
	&packet)) != STATUS_OK) {
	}

	packet.data = buffer_set_blue_low_brightness;
    24c2:	6066      	str	r6, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    24c4:	0021      	movs	r1, r4
    24c6:	0028      	movs	r0, r5
    24c8:	f7fe fe4c 	bl	1164 <i2c_master_write_packet_wait>
    24cc:	2800      	cmp	r0, #0
    24ce:	d1f9      	bne.n	24c4 <set_motor_speed_2_indication+0x3c>
	&packet)) != STATUS_OK) {
	}

}
    24d0:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    24d2:	46c0      	nop			; (mov r8, r8)
    24d4:	00002894 	.word	0x00002894
    24d8:	2000000c 	.word	0x2000000c
    24dc:	20000210 	.word	0x20000210

000024e0 <set_motor_speed_3_indication>:

void set_motor_speed_3_indication(void){
    24e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
	uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    24e2:	4c12      	ldr	r4, [pc, #72]	; (252c <set_motor_speed_3_indication+0x4c>)
    24e4:	2502      	movs	r5, #2
    24e6:	0021      	movs	r1, r4
    24e8:	002a      	movs	r2, r5
    24ea:	311c      	adds	r1, #28
    24ec:	4668      	mov	r0, sp
    24ee:	f000 f97f 	bl	27f0 <memcpy>
	uint8_t buffer_set_blue_high_brightness[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_HIGH_BRIGTHNESS;
    24f2:	0021      	movs	r1, r4
    24f4:	ae01      	add	r6, sp, #4
    24f6:	3122      	adds	r1, #34	; 0x22
    24f8:	002a      	movs	r2, r5
    24fa:	0030      	movs	r0, r6
    24fc:	f000 f978 	bl	27f0 <memcpy>

	packet.address = KTD2026_DEVICE_ADDRESS;
    2500:	2331      	movs	r3, #49	; 0x31
    2502:	4c0b      	ldr	r4, [pc, #44]	; (2530 <set_motor_speed_3_indication+0x50>)
    2504:	8023      	strh	r3, [r4, #0]
	packet.data_length = DATA_LENGTH_PRIMARY;

	packet.data = buffer_set_blue;
    2506:	466b      	mov	r3, sp
	packet.data_length = DATA_LENGTH_PRIMARY;
    2508:	8065      	strh	r5, [r4, #2]
	packet.data = buffer_set_blue;
    250a:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    250c:	4d09      	ldr	r5, [pc, #36]	; (2534 <set_motor_speed_3_indication+0x54>)
    250e:	0021      	movs	r1, r4
    2510:	0028      	movs	r0, r5
    2512:	f7fe fe27 	bl	1164 <i2c_master_write_packet_wait>
    2516:	2800      	cmp	r0, #0
    2518:	d1f8      	bne.n	250c <set_motor_speed_3_indication+0x2c>
	&packet)) != STATUS_OK) {
	}

	packet.data = buffer_set_blue_high_brightness;
    251a:	6066      	str	r6, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    251c:	0021      	movs	r1, r4
    251e:	0028      	movs	r0, r5
    2520:	f7fe fe20 	bl	1164 <i2c_master_write_packet_wait>
    2524:	2800      	cmp	r0, #0
    2526:	d1f9      	bne.n	251c <set_motor_speed_3_indication+0x3c>
	&packet)) != STATUS_OK) {
	}
}
    2528:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    252a:	46c0      	nop			; (mov r8, r8)
    252c:	00002894 	.word	0x00002894
    2530:	2000000c 	.word	0x2000000c
    2534:	20000210 	.word	0x20000210

00002538 <set_motor_pulsating_indication>:

void set_motor_pulsating_indication(void){
    2538:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    253a:	4c21      	ldr	r4, [pc, #132]	; (25c0 <set_motor_pulsating_indication+0x88>)
    253c:	2502      	movs	r5, #2
    253e:	0021      	movs	r1, r4
void set_motor_pulsating_indication(void){
    2540:	b085      	sub	sp, #20
	uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    2542:	311c      	adds	r1, #28
    2544:	002a      	movs	r2, r5
    2546:	4668      	mov	r0, sp
    2548:	f000 f952 	bl	27f0 <memcpy>
	uint8_t buffer_set_blue_high_brightness[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_HIGH_BRIGTHNESS;
    254c:	0021      	movs	r1, r4
    254e:	af01      	add	r7, sp, #4
    2550:	3122      	adds	r1, #34	; 0x22
    2552:	002a      	movs	r2, r5
    2554:	0038      	movs	r0, r7
    2556:	f000 f94b 	bl	27f0 <memcpy>
	uint8_t buffer_set_blue_pwm_timer[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM_TIMER;
    255a:	0021      	movs	r1, r4
    255c:	ae02      	add	r6, sp, #8
    255e:	3124      	adds	r1, #36	; 0x24
    2560:	002a      	movs	r2, r5
    2562:	0030      	movs	r0, r6
    2564:	f000 f944 	bl	27f0 <memcpy>
	uint8_t buffer_set_blue_pwm_flash[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM_FLASH;
    2568:	0021      	movs	r1, r4
    256a:	002a      	movs	r2, r5
    256c:	3116      	adds	r1, #22
    256e:	a803      	add	r0, sp, #12
    2570:	f000 f93e 	bl	27f0 <memcpy>


	packet.address = KTD2026_DEVICE_ADDRESS;
    2574:	2331      	movs	r3, #49	; 0x31
    2576:	4c13      	ldr	r4, [pc, #76]	; (25c4 <set_motor_pulsating_indication+0x8c>)
    2578:	8023      	strh	r3, [r4, #0]
	packet.data_length = DATA_LENGTH_PRIMARY;

	packet.data = buffer_set_blue;
    257a:	466b      	mov	r3, sp
	packet.data_length = DATA_LENGTH_PRIMARY;
    257c:	8065      	strh	r5, [r4, #2]
	packet.data = buffer_set_blue;
    257e:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2580:	4d11      	ldr	r5, [pc, #68]	; (25c8 <set_motor_pulsating_indication+0x90>)
    2582:	0021      	movs	r1, r4
    2584:	0028      	movs	r0, r5
    2586:	f7fe fded 	bl	1164 <i2c_master_write_packet_wait>
    258a:	2800      	cmp	r0, #0
    258c:	d1f8      	bne.n	2580 <set_motor_pulsating_indication+0x48>
	&packet)) != STATUS_OK) {
	}

	packet.data = buffer_set_blue_high_brightness;
    258e:	6067      	str	r7, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2590:	0021      	movs	r1, r4
    2592:	0028      	movs	r0, r5
    2594:	f7fe fde6 	bl	1164 <i2c_master_write_packet_wait>
    2598:	2800      	cmp	r0, #0
    259a:	d1f9      	bne.n	2590 <set_motor_pulsating_indication+0x58>
	&packet)) != STATUS_OK) {
	}

	packet.data = buffer_set_blue_pwm_timer;
    259c:	6066      	str	r6, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    259e:	0021      	movs	r1, r4
    25a0:	0028      	movs	r0, r5
    25a2:	f7fe fddf 	bl	1164 <i2c_master_write_packet_wait>
    25a6:	2800      	cmp	r0, #0
    25a8:	d1f9      	bne.n	259e <set_motor_pulsating_indication+0x66>
	&packet)) != STATUS_OK) {
	}
	
	packet.data = buffer_set_blue_pwm_flash;
    25aa:	ab03      	add	r3, sp, #12
    25ac:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    25ae:	0021      	movs	r1, r4
    25b0:	0028      	movs	r0, r5
    25b2:	f7fe fdd7 	bl	1164 <i2c_master_write_packet_wait>
    25b6:	2800      	cmp	r0, #0
    25b8:	d1f9      	bne.n	25ae <set_motor_pulsating_indication+0x76>
	&packet)) != STATUS_OK) {
	}

}
    25ba:	b005      	add	sp, #20
    25bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    25be:	46c0      	nop			; (mov r8, r8)
    25c0:	00002894 	.word	0x00002894
    25c4:	2000000c 	.word	0x2000000c
    25c8:	20000210 	.word	0x20000210

000025cc <i2c_master_setup>:
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
#endif
	config->generator_source = GCLK_GENERATOR_0;
	config->run_in_standby   = false;
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
    25cc:	2180      	movs	r1, #128	; 0x80
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
    25ce:	2364      	movs	r3, #100	; 0x64


void i2c_master_setup(void) {
    25d0:	b570      	push	{r4, r5, r6, lr}
    25d2:	b08e      	sub	sp, #56	; 0x38
    25d4:	aa01      	add	r2, sp, #4
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
    25d6:	0389      	lsls	r1, r1, #14
    25d8:	6111      	str	r1, [r2, #16]
	config->buffer_timeout   = 65535;
	config->unknown_bus_state_timeout = 65535;
    25da:	2101      	movs	r1, #1
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
    25dc:	9301      	str	r3, [sp, #4]
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
    25de:	4b1e      	ldr	r3, [pc, #120]	; (2658 <i2c_master_setup+0x8c>)
	config->unknown_bus_state_timeout = 65535;
    25e0:	4249      	negs	r1, r1
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
    25e2:	6053      	str	r3, [r2, #4]
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
    25e4:	2300      	movs	r3, #0
	config->unknown_bus_state_timeout = 65535;
    25e6:	8291      	strh	r1, [r2, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->scl_low_timeout  = false;
    25e8:	310a      	adds	r1, #10
    25ea:	4469      	add	r1, sp
    25ec:	77cb      	strb	r3, [r1, #31]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
    25ee:	a90c      	add	r1, sp, #48	; 0x30
    25f0:	700b      	strb	r3, [r1, #0]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
    25f2:	2131      	movs	r1, #49	; 0x31
    25f4:	4469      	add	r1, sp
    25f6:	700b      	strb	r3, [r1, #0]
	config->master_scl_low_extend_timeout  = false;
    25f8:	2132      	movs	r1, #50	; 0x32
    25fa:	4469      	add	r1, sp
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
    25fc:	6093      	str	r3, [r2, #8]
	config->generator_source = GCLK_GENERATOR_0;
    25fe:	7313      	strb	r3, [r2, #12]
	config->run_in_standby   = false;
    2600:	7613      	strb	r3, [r2, #24]
	config->pinmux_pad0      = PINMUX_DEFAULT;
    2602:	61d3      	str	r3, [r2, #28]
	config->pinmux_pad1      = PINMUX_DEFAULT;
    2604:	6213      	str	r3, [r2, #32]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
    2606:	6293      	str	r3, [r2, #40]	; 0x28
	config->master_scl_low_extend_timeout  = false;
    2608:	700b      	strb	r3, [r1, #0]
  struct i2c_master_config config_i2c_master;
  i2c_master_get_config_defaults(&config_i2c_master);
  config_i2c_master.buffer_timeout = 10000;
  i2c_master_init(&i2c_master_instance, MASTER_MODULE, &config_i2c_master);
    260a:	4e14      	ldr	r6, [pc, #80]	; (265c <i2c_master_setup+0x90>)
#endif
	/* The typical value is 215ns */
	config->sda_scl_rise_time_ns = 215;
    260c:	33d7      	adds	r3, #215	; 0xd7
    260e:	8613      	strh	r3, [r2, #48]	; 0x30
  config_i2c_master.buffer_timeout = 10000;
    2610:	4b13      	ldr	r3, [pc, #76]	; (2660 <i2c_master_setup+0x94>)
  i2c_master_init(&i2c_master_instance, MASTER_MODULE, &config_i2c_master);
    2612:	4914      	ldr	r1, [pc, #80]	; (2664 <i2c_master_setup+0x98>)
    2614:	0030      	movs	r0, r6
  config_i2c_master.buffer_timeout = 10000;
    2616:	82d3      	strh	r3, [r2, #22]
  i2c_master_init(&i2c_master_instance, MASTER_MODULE, &config_i2c_master);
    2618:	f7fe fc42 	bl	ea0 <i2c_master_init>
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    261c:	2207      	movs	r2, #7
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    261e:	6835      	ldr	r5, [r6, #0]
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    2620:	69ec      	ldr	r4, [r5, #28]
    2622:	4014      	ands	r4, r2
	while (i2c_master_is_syncing(module)) {
    2624:	d1fc      	bne.n	2620 <i2c_master_setup+0x54>

	/* Wait for module to sync */
	_i2c_master_wait_for_sync(module);

	/* Enable module */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    2626:	2302      	movs	r3, #2
    2628:	682a      	ldr	r2, [r5, #0]
    262a:	4313      	orrs	r3, r2
    262c:	602b      	str	r3, [r5, #0]

#if I2C_MASTER_CALLBACK_MODE == true
	/* Enable module interrupts */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    262e:	6830      	ldr	r0, [r6, #0]
    2630:	f7fe ff70 	bl	1514 <_sercom_get_interrupt_vector>
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    2634:	231f      	movs	r3, #31
    2636:	4018      	ands	r0, r3
    2638:	3b1e      	subs	r3, #30
    263a:	4083      	lsls	r3, r0
    263c:	4a0a      	ldr	r2, [pc, #40]	; (2668 <i2c_master_setup+0x9c>)
    263e:	6013      	str	r3, [r2, #0]
#endif
	/* Start timeout if bus state is unknown */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
    2640:	2210      	movs	r2, #16
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    2642:	88f0      	ldrh	r0, [r6, #6]
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
    2644:	8b69      	ldrh	r1, [r5, #26]
    2646:	4211      	tst	r1, r2
    2648:	d103      	bne.n	2652 <i2c_master_setup+0x86>
		timeout_counter++;
    264a:	3401      	adds	r4, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    264c:	4284      	cmp	r4, r0
    264e:	d3f9      	bcc.n	2644 <i2c_master_setup+0x78>
			/* Timeout, force bus state to idle */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
    2650:	836a      	strh	r2, [r5, #26]
  i2c_master_enable(&i2c_master_instance);
}
    2652:	b00e      	add	sp, #56	; 0x38
    2654:	bd70      	pop	{r4, r5, r6, pc}
    2656:	46c0      	nop			; (mov r8, r8)
    2658:	00000d48 	.word	0x00000d48
    265c:	20000210 	.word	0x20000210
    2660:	00002710 	.word	0x00002710
    2664:	42001000 	.word	0x42001000
    2668:	e000e100 	.word	0xe000e100

0000266c <main>:
#include "system_logic.h"

#include "adc_sample.h"


int main(void) {
    266c:	b510      	push	{r4, lr}
  startup_sys_configs();
    266e:	f7fe fb63 	bl	d38 <startup_sys_configs>
  while (true) {
    system_state();										// Get latest system_state
    2672:	f7fe fbc9 	bl	e08 <system_state>
    system_logic();										// Invoke System Logic
    2676:	f7fe fa37 	bl	ae8 <system_logic>
    267a:	e7fa      	b.n	2672 <main+0x6>

0000267c <__gnu_thumb1_case_uqi>:
    267c:	b402      	push	{r1}
    267e:	4671      	mov	r1, lr
    2680:	0849      	lsrs	r1, r1, #1
    2682:	0049      	lsls	r1, r1, #1
    2684:	5c09      	ldrb	r1, [r1, r0]
    2686:	0049      	lsls	r1, r1, #1
    2688:	448e      	add	lr, r1
    268a:	bc02      	pop	{r1}
    268c:	4770      	bx	lr
    268e:	46c0      	nop			; (mov r8, r8)

00002690 <__udivsi3>:
    2690:	2200      	movs	r2, #0
    2692:	0843      	lsrs	r3, r0, #1
    2694:	428b      	cmp	r3, r1
    2696:	d374      	bcc.n	2782 <__udivsi3+0xf2>
    2698:	0903      	lsrs	r3, r0, #4
    269a:	428b      	cmp	r3, r1
    269c:	d35f      	bcc.n	275e <__udivsi3+0xce>
    269e:	0a03      	lsrs	r3, r0, #8
    26a0:	428b      	cmp	r3, r1
    26a2:	d344      	bcc.n	272e <__udivsi3+0x9e>
    26a4:	0b03      	lsrs	r3, r0, #12
    26a6:	428b      	cmp	r3, r1
    26a8:	d328      	bcc.n	26fc <__udivsi3+0x6c>
    26aa:	0c03      	lsrs	r3, r0, #16
    26ac:	428b      	cmp	r3, r1
    26ae:	d30d      	bcc.n	26cc <__udivsi3+0x3c>
    26b0:	22ff      	movs	r2, #255	; 0xff
    26b2:	0209      	lsls	r1, r1, #8
    26b4:	ba12      	rev	r2, r2
    26b6:	0c03      	lsrs	r3, r0, #16
    26b8:	428b      	cmp	r3, r1
    26ba:	d302      	bcc.n	26c2 <__udivsi3+0x32>
    26bc:	1212      	asrs	r2, r2, #8
    26be:	0209      	lsls	r1, r1, #8
    26c0:	d065      	beq.n	278e <__udivsi3+0xfe>
    26c2:	0b03      	lsrs	r3, r0, #12
    26c4:	428b      	cmp	r3, r1
    26c6:	d319      	bcc.n	26fc <__udivsi3+0x6c>
    26c8:	e000      	b.n	26cc <__udivsi3+0x3c>
    26ca:	0a09      	lsrs	r1, r1, #8
    26cc:	0bc3      	lsrs	r3, r0, #15
    26ce:	428b      	cmp	r3, r1
    26d0:	d301      	bcc.n	26d6 <__udivsi3+0x46>
    26d2:	03cb      	lsls	r3, r1, #15
    26d4:	1ac0      	subs	r0, r0, r3
    26d6:	4152      	adcs	r2, r2
    26d8:	0b83      	lsrs	r3, r0, #14
    26da:	428b      	cmp	r3, r1
    26dc:	d301      	bcc.n	26e2 <__udivsi3+0x52>
    26de:	038b      	lsls	r3, r1, #14
    26e0:	1ac0      	subs	r0, r0, r3
    26e2:	4152      	adcs	r2, r2
    26e4:	0b43      	lsrs	r3, r0, #13
    26e6:	428b      	cmp	r3, r1
    26e8:	d301      	bcc.n	26ee <__udivsi3+0x5e>
    26ea:	034b      	lsls	r3, r1, #13
    26ec:	1ac0      	subs	r0, r0, r3
    26ee:	4152      	adcs	r2, r2
    26f0:	0b03      	lsrs	r3, r0, #12
    26f2:	428b      	cmp	r3, r1
    26f4:	d301      	bcc.n	26fa <__udivsi3+0x6a>
    26f6:	030b      	lsls	r3, r1, #12
    26f8:	1ac0      	subs	r0, r0, r3
    26fa:	4152      	adcs	r2, r2
    26fc:	0ac3      	lsrs	r3, r0, #11
    26fe:	428b      	cmp	r3, r1
    2700:	d301      	bcc.n	2706 <__udivsi3+0x76>
    2702:	02cb      	lsls	r3, r1, #11
    2704:	1ac0      	subs	r0, r0, r3
    2706:	4152      	adcs	r2, r2
    2708:	0a83      	lsrs	r3, r0, #10
    270a:	428b      	cmp	r3, r1
    270c:	d301      	bcc.n	2712 <__udivsi3+0x82>
    270e:	028b      	lsls	r3, r1, #10
    2710:	1ac0      	subs	r0, r0, r3
    2712:	4152      	adcs	r2, r2
    2714:	0a43      	lsrs	r3, r0, #9
    2716:	428b      	cmp	r3, r1
    2718:	d301      	bcc.n	271e <__udivsi3+0x8e>
    271a:	024b      	lsls	r3, r1, #9
    271c:	1ac0      	subs	r0, r0, r3
    271e:	4152      	adcs	r2, r2
    2720:	0a03      	lsrs	r3, r0, #8
    2722:	428b      	cmp	r3, r1
    2724:	d301      	bcc.n	272a <__udivsi3+0x9a>
    2726:	020b      	lsls	r3, r1, #8
    2728:	1ac0      	subs	r0, r0, r3
    272a:	4152      	adcs	r2, r2
    272c:	d2cd      	bcs.n	26ca <__udivsi3+0x3a>
    272e:	09c3      	lsrs	r3, r0, #7
    2730:	428b      	cmp	r3, r1
    2732:	d301      	bcc.n	2738 <__udivsi3+0xa8>
    2734:	01cb      	lsls	r3, r1, #7
    2736:	1ac0      	subs	r0, r0, r3
    2738:	4152      	adcs	r2, r2
    273a:	0983      	lsrs	r3, r0, #6
    273c:	428b      	cmp	r3, r1
    273e:	d301      	bcc.n	2744 <__udivsi3+0xb4>
    2740:	018b      	lsls	r3, r1, #6
    2742:	1ac0      	subs	r0, r0, r3
    2744:	4152      	adcs	r2, r2
    2746:	0943      	lsrs	r3, r0, #5
    2748:	428b      	cmp	r3, r1
    274a:	d301      	bcc.n	2750 <__udivsi3+0xc0>
    274c:	014b      	lsls	r3, r1, #5
    274e:	1ac0      	subs	r0, r0, r3
    2750:	4152      	adcs	r2, r2
    2752:	0903      	lsrs	r3, r0, #4
    2754:	428b      	cmp	r3, r1
    2756:	d301      	bcc.n	275c <__udivsi3+0xcc>
    2758:	010b      	lsls	r3, r1, #4
    275a:	1ac0      	subs	r0, r0, r3
    275c:	4152      	adcs	r2, r2
    275e:	08c3      	lsrs	r3, r0, #3
    2760:	428b      	cmp	r3, r1
    2762:	d301      	bcc.n	2768 <__udivsi3+0xd8>
    2764:	00cb      	lsls	r3, r1, #3
    2766:	1ac0      	subs	r0, r0, r3
    2768:	4152      	adcs	r2, r2
    276a:	0883      	lsrs	r3, r0, #2
    276c:	428b      	cmp	r3, r1
    276e:	d301      	bcc.n	2774 <__udivsi3+0xe4>
    2770:	008b      	lsls	r3, r1, #2
    2772:	1ac0      	subs	r0, r0, r3
    2774:	4152      	adcs	r2, r2
    2776:	0843      	lsrs	r3, r0, #1
    2778:	428b      	cmp	r3, r1
    277a:	d301      	bcc.n	2780 <__udivsi3+0xf0>
    277c:	004b      	lsls	r3, r1, #1
    277e:	1ac0      	subs	r0, r0, r3
    2780:	4152      	adcs	r2, r2
    2782:	1a41      	subs	r1, r0, r1
    2784:	d200      	bcs.n	2788 <__udivsi3+0xf8>
    2786:	4601      	mov	r1, r0
    2788:	4152      	adcs	r2, r2
    278a:	4610      	mov	r0, r2
    278c:	4770      	bx	lr
    278e:	e7ff      	b.n	2790 <__udivsi3+0x100>
    2790:	b501      	push	{r0, lr}
    2792:	2000      	movs	r0, #0
    2794:	f000 f806 	bl	27a4 <__aeabi_idiv0>
    2798:	bd02      	pop	{r1, pc}
    279a:	46c0      	nop			; (mov r8, r8)

0000279c <__aeabi_uidivmod>:
    279c:	2900      	cmp	r1, #0
    279e:	d0f7      	beq.n	2790 <__udivsi3+0x100>
    27a0:	e776      	b.n	2690 <__udivsi3>
    27a2:	4770      	bx	lr

000027a4 <__aeabi_idiv0>:
    27a4:	4770      	bx	lr
    27a6:	46c0      	nop			; (mov r8, r8)

000027a8 <__libc_init_array>:
    27a8:	b570      	push	{r4, r5, r6, lr}
    27aa:	2600      	movs	r6, #0
    27ac:	4d0c      	ldr	r5, [pc, #48]	; (27e0 <__libc_init_array+0x38>)
    27ae:	4c0d      	ldr	r4, [pc, #52]	; (27e4 <__libc_init_array+0x3c>)
    27b0:	1b64      	subs	r4, r4, r5
    27b2:	10a4      	asrs	r4, r4, #2
    27b4:	42a6      	cmp	r6, r4
    27b6:	d109      	bne.n	27cc <__libc_init_array+0x24>
    27b8:	2600      	movs	r6, #0
    27ba:	f000 f87f 	bl	28bc <_init>
    27be:	4d0a      	ldr	r5, [pc, #40]	; (27e8 <__libc_init_array+0x40>)
    27c0:	4c0a      	ldr	r4, [pc, #40]	; (27ec <__libc_init_array+0x44>)
    27c2:	1b64      	subs	r4, r4, r5
    27c4:	10a4      	asrs	r4, r4, #2
    27c6:	42a6      	cmp	r6, r4
    27c8:	d105      	bne.n	27d6 <__libc_init_array+0x2e>
    27ca:	bd70      	pop	{r4, r5, r6, pc}
    27cc:	00b3      	lsls	r3, r6, #2
    27ce:	58eb      	ldr	r3, [r5, r3]
    27d0:	4798      	blx	r3
    27d2:	3601      	adds	r6, #1
    27d4:	e7ee      	b.n	27b4 <__libc_init_array+0xc>
    27d6:	00b3      	lsls	r3, r6, #2
    27d8:	58eb      	ldr	r3, [r5, r3]
    27da:	4798      	blx	r3
    27dc:	3601      	adds	r6, #1
    27de:	e7f2      	b.n	27c6 <__libc_init_array+0x1e>
    27e0:	000028c8 	.word	0x000028c8
    27e4:	000028c8 	.word	0x000028c8
    27e8:	000028c8 	.word	0x000028c8
    27ec:	000028cc 	.word	0x000028cc

000027f0 <memcpy>:
    27f0:	2300      	movs	r3, #0
    27f2:	b510      	push	{r4, lr}
    27f4:	429a      	cmp	r2, r3
    27f6:	d100      	bne.n	27fa <memcpy+0xa>
    27f8:	bd10      	pop	{r4, pc}
    27fa:	5ccc      	ldrb	r4, [r1, r3]
    27fc:	54c4      	strb	r4, [r0, r3]
    27fe:	3301      	adds	r3, #1
    2800:	e7f8      	b.n	27f4 <memcpy+0x4>
    2802:	0000      	movs	r0, r0
    2804:	00000002 	.word	0x00000002
    2808:	00000003 	.word	0x00000003
    280c:	00000004 	.word	0x00000004
    2810:	00000005 	.word	0x00000005
    2814:	00000006 	.word	0x00000006
    2818:	00000007 	.word	0x00000007
    281c:	0000000e 	.word	0x0000000e
    2820:	0000000f 	.word	0x0000000f
    2824:	0000000a 	.word	0x0000000a
    2828:	0000000b 	.word	0x0000000b
    282c:	0000ffff 	.word	0x0000ffff
    2830:	0000ffff 	.word	0x0000ffff
    2834:	0000ffff 	.word	0x0000ffff
    2838:	0000ffff 	.word	0x0000ffff
    283c:	0000ffff 	.word	0x0000ffff
    2840:	0000ffff 	.word	0x0000ffff
    2844:	0000ffff 	.word	0x0000ffff
    2848:	0000ffff 	.word	0x0000ffff
    284c:	0000ffff 	.word	0x0000ffff
    2850:	0000ffff 	.word	0x0000ffff

00002854 <tc_interrupt_vectors.12581>:
    2854:	00000e0d 42000800 42000c00 42001000     .......B...B...B

00002864 <_tcc_intflag>:
    2864:	00000001 00000002 00000004 00000008     ................
    2874:	00001000 00002000 00004000 00008000     ..... ...@......
    2884:	00010000 00020000 00040000 00080000     ................
    2894:	01040404 05041004 15041404 25010804     ...............%
    28a4:	1c02ef05 82010204 05063202 03082004     .........2... ..
    28b4:	15080908 00001902                       ........

000028bc <_init>:
    28bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    28be:	46c0      	nop			; (mov r8, r8)
    28c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
    28c2:	bc08      	pop	{r3}
    28c4:	469e      	mov	lr, r3
    28c6:	4770      	bx	lr

000028c8 <__init_array_start>:
    28c8:	000000b5 	.word	0x000000b5

000028cc <_fini>:
    28cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    28ce:	46c0      	nop			; (mov r8, r8)
    28d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
    28d2:	bc08      	pop	{r3}
    28d4:	469e      	mov	lr, r3
    28d6:	4770      	bx	lr

000028d8 <__fini_array_start>:
    28d8:	0000008d 	.word	0x0000008d
