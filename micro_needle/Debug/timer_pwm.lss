
timer_pwm.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000028d4  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000018  20000000  000028d4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000220  20000018  000028ec  00020018  2**2
                  ALLOC
  3 .stack        00000400  20000238  00002b0c  00020018  2**0
                  ALLOC
  4 .ARM.attributes 0000002a  00000000  00000000  00020018  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020042  2**0
                  CONTENTS, READONLY
  6 .debug_info   00056f1a  00000000  00000000  0002009b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00005fc8  00000000  00000000  00076fb5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00006b72  00000000  00000000  0007cf7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000868  00000000  00000000  00083aef  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000db0  00000000  00000000  00084357  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001b45c  00000000  00000000  00085107  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0001546c  00000000  00000000  000a0563  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0007d216  00000000  00000000  000b59cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001448  00000000  00000000  00132be8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	38 06 00 20 a9 21 00 00 a7 21 00 00 a7 21 00 00     8.. .!...!...!..
	...
      2c:	a7 21 00 00 00 00 00 00 00 00 00 00 a7 21 00 00     .!...........!..
      3c:	a7 21 00 00 a7 21 00 00 a7 21 00 00 a7 21 00 00     .!...!...!...!..
      4c:	a7 21 00 00 39 05 00 00 a7 21 00 00 a7 21 00 00     .!..9....!...!..
      5c:	a7 21 00 00 a7 21 00 00 25 15 00 00 35 15 00 00     .!...!..%...5...
      6c:	45 15 00 00 71 1e 00 00 fd 1e 00 00 07 1f 00 00     E...q...........
      7c:	a7 21 00 00 a7 21 00 00 a7 21 00 00 a7 21 00 00     .!...!...!...!..

0000008c <__do_global_dtors_aux>:
      8c:	b510      	push	{r4, lr}
      8e:	4c06      	ldr	r4, [pc, #24]	; (a8 <__do_global_dtors_aux+0x1c>)
      90:	7823      	ldrb	r3, [r4, #0]
      92:	2b00      	cmp	r3, #0
      94:	d107      	bne.n	a6 <__do_global_dtors_aux+0x1a>
      96:	4b05      	ldr	r3, [pc, #20]	; (ac <__do_global_dtors_aux+0x20>)
      98:	2b00      	cmp	r3, #0
      9a:	d002      	beq.n	a2 <__do_global_dtors_aux+0x16>
      9c:	4804      	ldr	r0, [pc, #16]	; (b0 <__do_global_dtors_aux+0x24>)
      9e:	e000      	b.n	a2 <__do_global_dtors_aux+0x16>
      a0:	bf00      	nop
      a2:	2301      	movs	r3, #1
      a4:	7023      	strb	r3, [r4, #0]
      a6:	bd10      	pop	{r4, pc}
      a8:	20000018 	.word	0x20000018
      ac:	00000000 	.word	0x00000000
      b0:	000028d4 	.word	0x000028d4

000000b4 <frame_dummy>:
      b4:	4b08      	ldr	r3, [pc, #32]	; (d8 <frame_dummy+0x24>)
      b6:	b510      	push	{r4, lr}
      b8:	2b00      	cmp	r3, #0
      ba:	d003      	beq.n	c4 <frame_dummy+0x10>
      bc:	4907      	ldr	r1, [pc, #28]	; (dc <frame_dummy+0x28>)
      be:	4808      	ldr	r0, [pc, #32]	; (e0 <frame_dummy+0x2c>)
      c0:	e000      	b.n	c4 <frame_dummy+0x10>
      c2:	bf00      	nop
      c4:	4807      	ldr	r0, [pc, #28]	; (e4 <frame_dummy+0x30>)
      c6:	6803      	ldr	r3, [r0, #0]
      c8:	2b00      	cmp	r3, #0
      ca:	d100      	bne.n	ce <frame_dummy+0x1a>
      cc:	bd10      	pop	{r4, pc}
      ce:	4b06      	ldr	r3, [pc, #24]	; (e8 <frame_dummy+0x34>)
      d0:	2b00      	cmp	r3, #0
      d2:	d0fb      	beq.n	cc <frame_dummy+0x18>
      d4:	4798      	blx	r3
      d6:	e7f9      	b.n	cc <frame_dummy+0x18>
      d8:	00000000 	.word	0x00000000
      dc:	2000001c 	.word	0x2000001c
      e0:	000028d4 	.word	0x000028d4
      e4:	000028d4 	.word	0x000028d4
      e8:	00000000 	.word	0x00000000

000000ec <adc_get_status.isra.1>:
      ec:	7e03      	ldrb	r3, [r0, #24]
      ee:	2001      	movs	r0, #1
      f0:	b2db      	uxtb	r3, r3
      f2:	4018      	ands	r0, r3
      f4:	2202      	movs	r2, #2
      f6:	0759      	lsls	r1, r3, #29
      f8:	d500      	bpl.n	fc <adc_get_status.isra.1+0x10>
      fa:	4310      	orrs	r0, r2
      fc:	4213      	tst	r3, r2
      fe:	d001      	beq.n	104 <adc_get_status.isra.1+0x18>
     100:	2304      	movs	r3, #4
     102:	4318      	orrs	r0, r3
     104:	4770      	bx	lr
	...

00000108 <configure_adc>:
     108:	b510      	push	{r4, lr}
     10a:	b08c      	sub	sp, #48	; 0x30
     10c:	4668      	mov	r0, sp
     10e:	f000 f865 	bl	1dc <adc_get_config_defaults>
     112:	4c0c      	ldr	r4, [pc, #48]	; (144 <configure_adc+0x3c>)
     114:	466a      	mov	r2, sp
     116:	490c      	ldr	r1, [pc, #48]	; (148 <configure_adc+0x40>)
     118:	0020      	movs	r0, r4
     11a:	f000 f881 	bl	220 <adc_init>
     11e:	6823      	ldr	r3, [r4, #0]
     120:	7e5a      	ldrb	r2, [r3, #25]
     122:	b252      	sxtb	r2, r2
     124:	2a00      	cmp	r2, #0
     126:	dbfb      	blt.n	120 <configure_adc+0x18>
     128:	220f      	movs	r2, #15
     12a:	759a      	strb	r2, [r3, #22]
     12c:	761a      	strb	r2, [r3, #24]
     12e:	7819      	ldrb	r1, [r3, #0]
     130:	3a0d      	subs	r2, #13
     132:	430a      	orrs	r2, r1
     134:	701a      	strb	r2, [r3, #0]
     136:	6822      	ldr	r2, [r4, #0]
     138:	7e53      	ldrb	r3, [r2, #25]
     13a:	b25b      	sxtb	r3, r3
     13c:	2b00      	cmp	r3, #0
     13e:	dbfb      	blt.n	138 <configure_adc+0x30>
     140:	b00c      	add	sp, #48	; 0x30
     142:	bd10      	pop	{r4, pc}
     144:	2000008c 	.word	0x2000008c
     148:	42002000 	.word	0x42002000

0000014c <sample_adc>:
     14c:	b570      	push	{r4, r5, r6, lr}
     14e:	4c13      	ldr	r4, [pc, #76]	; (19c <sample_adc+0x50>)
     150:	6823      	ldr	r3, [r4, #0]
     152:	7e5a      	ldrb	r2, [r3, #25]
     154:	b252      	sxtb	r2, r2
     156:	2a00      	cmp	r2, #0
     158:	dbfb      	blt.n	152 <sample_adc+0x6>
     15a:	2202      	movs	r2, #2
     15c:	7b19      	ldrb	r1, [r3, #12]
     15e:	430a      	orrs	r2, r1
     160:	731a      	strb	r2, [r3, #12]
     162:	7e5a      	ldrb	r2, [r3, #25]
     164:	b252      	sxtb	r2, r2
     166:	2a00      	cmp	r2, #0
     168:	dbfb      	blt.n	162 <sample_adc+0x16>
     16a:	2501      	movs	r5, #1
     16c:	6820      	ldr	r0, [r4, #0]
     16e:	f7ff ffbd 	bl	ec <adc_get_status.isra.1>
     172:	4228      	tst	r0, r5
     174:	d0fa      	beq.n	16c <sample_adc+0x20>
     176:	6820      	ldr	r0, [r4, #0]
     178:	7e43      	ldrb	r3, [r0, #25]
     17a:	b25b      	sxtb	r3, r3
     17c:	2b00      	cmp	r3, #0
     17e:	dbfb      	blt.n	178 <sample_adc+0x2c>
     180:	8b42      	ldrh	r2, [r0, #26]
     182:	4b07      	ldr	r3, [pc, #28]	; (1a0 <sample_adc+0x54>)
     184:	801a      	strh	r2, [r3, #0]
     186:	2301      	movs	r3, #1
     188:	7603      	strb	r3, [r0, #24]
     18a:	f7ff ffaf 	bl	ec <adc_get_status.isra.1>
     18e:	0743      	lsls	r3, r0, #29
     190:	d502      	bpl.n	198 <sample_adc+0x4c>
     192:	2202      	movs	r2, #2
     194:	6823      	ldr	r3, [r4, #0]
     196:	761a      	strb	r2, [r3, #24]
     198:	bd70      	pop	{r4, r5, r6, pc}
     19a:	46c0      	nop			; (mov r8, r8)
     19c:	2000008c 	.word	0x2000008c
     1a0:	20000088 	.word	0x20000088

000001a4 <_adc_configure_ain_pin>:
     1a4:	b530      	push	{r4, r5, lr}
     1a6:	b097      	sub	sp, #92	; 0x5c
     1a8:	ad02      	add	r5, sp, #8
     1aa:	0004      	movs	r4, r0
     1ac:	2250      	movs	r2, #80	; 0x50
     1ae:	490a      	ldr	r1, [pc, #40]	; (1d8 <_adc_configure_ain_pin+0x34>)
     1b0:	0028      	movs	r0, r5
     1b2:	f002 fb19 	bl	27e8 <memcpy>
     1b6:	2c09      	cmp	r4, #9
     1b8:	d80b      	bhi.n	1d2 <_adc_configure_ain_pin+0x2e>
     1ba:	2300      	movs	r3, #0
     1bc:	00a4      	lsls	r4, r4, #2
     1be:	5960      	ldr	r0, [r4, r5]
     1c0:	a901      	add	r1, sp, #4
     1c2:	704b      	strb	r3, [r1, #1]
     1c4:	70cb      	strb	r3, [r1, #3]
     1c6:	708b      	strb	r3, [r1, #2]
     1c8:	b2c0      	uxtb	r0, r0
     1ca:	3301      	adds	r3, #1
     1cc:	700b      	strb	r3, [r1, #0]
     1ce:	f001 fc11 	bl	19f4 <system_pinmux_pin_set_config>
     1d2:	b017      	add	sp, #92	; 0x5c
     1d4:	bd30      	pop	{r4, r5, pc}
     1d6:	46c0      	nop			; (mov r8, r8)
     1d8:	000027fc 	.word	0x000027fc

000001dc <adc_get_config_defaults>:
     1dc:	22c0      	movs	r2, #192	; 0xc0
     1de:	0152      	lsls	r2, r2, #5
     1e0:	81c2      	strh	r2, [r0, #14]
     1e2:	0002      	movs	r2, r0
     1e4:	2300      	movs	r3, #0
     1e6:	322a      	adds	r2, #42	; 0x2a
     1e8:	7003      	strb	r3, [r0, #0]
     1ea:	7043      	strb	r3, [r0, #1]
     1ec:	8043      	strh	r3, [r0, #2]
     1ee:	7103      	strb	r3, [r0, #4]
     1f0:	7603      	strb	r3, [r0, #24]
     1f2:	6203      	str	r3, [r0, #32]
     1f4:	61c3      	str	r3, [r0, #28]
     1f6:	6083      	str	r3, [r0, #8]
     1f8:	7303      	strb	r3, [r0, #12]
     1fa:	7403      	strb	r3, [r0, #16]
     1fc:	7443      	strb	r3, [r0, #17]
     1fe:	7483      	strb	r3, [r0, #18]
     200:	74c3      	strb	r3, [r0, #19]
     202:	7503      	strb	r3, [r0, #20]
     204:	7013      	strb	r3, [r2, #0]
     206:	1d42      	adds	r2, r0, #5
     208:	7543      	strb	r3, [r0, #21]
     20a:	7583      	strb	r3, [r0, #22]
     20c:	77d3      	strb	r3, [r2, #31]
     20e:	84c3      	strh	r3, [r0, #38]	; 0x26
     210:	8503      	strh	r3, [r0, #40]	; 0x28
     212:	75c3      	strb	r3, [r0, #23]
     214:	3226      	adds	r2, #38	; 0x26
     216:	302c      	adds	r0, #44	; 0x2c
     218:	7013      	strb	r3, [r2, #0]
     21a:	7003      	strb	r3, [r0, #0]
     21c:	4770      	bx	lr
	...

00000220 <adc_init>:
     220:	2380      	movs	r3, #128	; 0x80
     222:	b5f0      	push	{r4, r5, r6, r7, lr}
     224:	0014      	movs	r4, r2
     226:	4aab      	ldr	r2, [pc, #684]	; (4d4 <STACK_SIZE+0xd4>)
     228:	6001      	str	r1, [r0, #0]
     22a:	0007      	movs	r7, r0
     22c:	6a10      	ldr	r0, [r2, #32]
     22e:	005b      	lsls	r3, r3, #1
     230:	4303      	orrs	r3, r0
     232:	6213      	str	r3, [r2, #32]
     234:	780b      	ldrb	r3, [r1, #0]
     236:	b087      	sub	sp, #28
     238:	2005      	movs	r0, #5
     23a:	07db      	lsls	r3, r3, #31
     23c:	d500      	bpl.n	240 <adc_init+0x20>
     23e:	e0e5      	b.n	40c <STACK_SIZE+0xc>
     240:	780b      	ldrb	r3, [r1, #0]
     242:	3017      	adds	r0, #23
     244:	079b      	lsls	r3, r3, #30
     246:	d500      	bpl.n	24a <adc_init+0x2a>
     248:	e0e0      	b.n	40c <STACK_SIZE+0xc>
     24a:	7863      	ldrb	r3, [r4, #1]
     24c:	713b      	strb	r3, [r7, #4]
     24e:	2b00      	cmp	r3, #0
     250:	d104      	bne.n	25c <adc_init+0x3c>
     252:	4aa1      	ldr	r2, [pc, #644]	; (4d8 <STACK_SIZE+0xd8>)
     254:	3304      	adds	r3, #4
     256:	6c11      	ldr	r1, [r2, #64]	; 0x40
     258:	430b      	orrs	r3, r1
     25a:	6413      	str	r3, [r2, #64]	; 0x40
     25c:	7823      	ldrb	r3, [r4, #0]
     25e:	a905      	add	r1, sp, #20
     260:	2013      	movs	r0, #19
     262:	700b      	strb	r3, [r1, #0]
     264:	683d      	ldr	r5, [r7, #0]
     266:	f001 fb63 	bl	1930 <system_gclk_chan_set_config>
     26a:	2013      	movs	r0, #19
     26c:	f001 fb24 	bl	18b8 <system_gclk_chan_enable>
     270:	0023      	movs	r3, r4
     272:	332c      	adds	r3, #44	; 0x2c
     274:	9302      	str	r3, [sp, #8]
     276:	781b      	ldrb	r3, [r3, #0]
     278:	7b22      	ldrb	r2, [r4, #12]
     27a:	9201      	str	r2, [sp, #4]
     27c:	2b00      	cmp	r3, #0
     27e:	d033      	beq.n	2e8 <adc_init+0xc8>
     280:	0022      	movs	r2, r4
     282:	322b      	adds	r2, #43	; 0x2b
     284:	7816      	ldrb	r6, [r2, #0]
     286:	9a01      	ldr	r2, [sp, #4]
     288:	1996      	adds	r6, r2, r6
     28a:	b2f6      	uxtb	r6, r6
     28c:	199b      	adds	r3, r3, r6
     28e:	b2db      	uxtb	r3, r3
     290:	9303      	str	r3, [sp, #12]
     292:	9b01      	ldr	r3, [sp, #4]
     294:	1af0      	subs	r0, r6, r3
     296:	9b03      	ldr	r3, [sp, #12]
     298:	b2c0      	uxtb	r0, r0
     29a:	42b3      	cmp	r3, r6
     29c:	d81b      	bhi.n	2d6 <adc_init+0xb6>
     29e:	89e0      	ldrh	r0, [r4, #14]
     2a0:	f7ff ff80 	bl	1a4 <_adc_configure_ain_pin>
     2a4:	7d63      	ldrb	r3, [r4, #21]
     2a6:	009b      	lsls	r3, r3, #2
     2a8:	b2db      	uxtb	r3, r3
     2aa:	702b      	strb	r3, [r5, #0]
     2ac:	7da3      	ldrb	r3, [r4, #22]
     2ae:	7862      	ldrb	r2, [r4, #1]
     2b0:	01db      	lsls	r3, r3, #7
     2b2:	4313      	orrs	r3, r2
     2b4:	b2db      	uxtb	r3, r3
     2b6:	706b      	strb	r3, [r5, #1]
     2b8:	7923      	ldrb	r3, [r4, #4]
     2ba:	2b30      	cmp	r3, #48	; 0x30
     2bc:	d100      	bne.n	2c0 <adc_init+0xa0>
     2be:	e0b2      	b.n	426 <STACK_SIZE+0x26>
     2c0:	d816      	bhi.n	2f0 <adc_init+0xd0>
     2c2:	2b10      	cmp	r3, #16
     2c4:	d100      	bne.n	2c8 <adc_init+0xa8>
     2c6:	e0ab      	b.n	420 <STACK_SIZE+0x20>
     2c8:	2b20      	cmp	r3, #32
     2ca:	d100      	bne.n	2ce <adc_init+0xae>
     2cc:	e0ab      	b.n	426 <STACK_SIZE+0x26>
     2ce:	2b00      	cmp	r3, #0
     2d0:	d118      	bne.n	304 <adc_init+0xe4>
     2d2:	001a      	movs	r2, r3
     2d4:	e0a5      	b.n	422 <STACK_SIZE+0x22>
     2d6:	230f      	movs	r3, #15
     2d8:	4018      	ands	r0, r3
     2da:	7b23      	ldrb	r3, [r4, #12]
     2dc:	3601      	adds	r6, #1
     2de:	18c0      	adds	r0, r0, r3
     2e0:	f7ff ff60 	bl	1a4 <_adc_configure_ain_pin>
     2e4:	b2f6      	uxtb	r6, r6
     2e6:	e7d4      	b.n	292 <adc_init+0x72>
     2e8:	9801      	ldr	r0, [sp, #4]
     2ea:	f7ff ff5b 	bl	1a4 <_adc_configure_ain_pin>
     2ee:	e7d6      	b.n	29e <adc_init+0x7e>
     2f0:	2b32      	cmp	r3, #50	; 0x32
     2f2:	d009      	beq.n	308 <adc_init+0xe8>
     2f4:	d200      	bcs.n	2f8 <adc_init+0xd8>
     2f6:	e098      	b.n	42a <STACK_SIZE+0x2a>
     2f8:	2b33      	cmp	r3, #51	; 0x33
     2fa:	d100      	bne.n	2fe <adc_init+0xde>
     2fc:	e08c      	b.n	418 <STACK_SIZE+0x18>
     2fe:	2b34      	cmp	r3, #52	; 0x34
     300:	d100      	bne.n	304 <adc_init+0xe4>
     302:	e085      	b.n	410 <STACK_SIZE+0x10>
     304:	2017      	movs	r0, #23
     306:	e081      	b.n	40c <STACK_SIZE+0xc>
     308:	2204      	movs	r2, #4
     30a:	2310      	movs	r3, #16
     30c:	2102      	movs	r1, #2
     30e:	2070      	movs	r0, #112	; 0x70
     310:	0109      	lsls	r1, r1, #4
     312:	4001      	ands	r1, r0
     314:	430a      	orrs	r2, r1
     316:	70aa      	strb	r2, [r5, #2]
     318:	7de2      	ldrb	r2, [r4, #23]
     31a:	2a3f      	cmp	r2, #63	; 0x3f
     31c:	d8f2      	bhi.n	304 <adc_init+0xe4>
     31e:	70ea      	strb	r2, [r5, #3]
     320:	6839      	ldr	r1, [r7, #0]
     322:	7e4a      	ldrb	r2, [r1, #25]
     324:	b252      	sxtb	r2, r2
     326:	2a00      	cmp	r2, #0
     328:	dbfb      	blt.n	322 <adc_init+0x102>
     32a:	8861      	ldrh	r1, [r4, #2]
     32c:	7ce2      	ldrb	r2, [r4, #19]
     32e:	430a      	orrs	r2, r1
     330:	1d61      	adds	r1, r4, #5
     332:	7fc8      	ldrb	r0, [r1, #31]
     334:	00c0      	lsls	r0, r0, #3
     336:	4302      	orrs	r2, r0
     338:	7d20      	ldrb	r0, [r4, #20]
     33a:	0080      	lsls	r0, r0, #2
     33c:	4302      	orrs	r2, r0
     33e:	7ca0      	ldrb	r0, [r4, #18]
     340:	0040      	lsls	r0, r0, #1
     342:	4302      	orrs	r2, r0
     344:	431a      	orrs	r2, r3
     346:	80aa      	strh	r2, [r5, #4]
     348:	7e22      	ldrb	r2, [r4, #24]
     34a:	4694      	mov	ip, r2
     34c:	2a00      	cmp	r2, #0
     34e:	d007      	beq.n	360 <adc_init+0x140>
     350:	2b10      	cmp	r3, #16
     352:	d100      	bne.n	356 <adc_init+0x136>
     354:	e0af      	b.n	4b6 <STACK_SIZE+0xb6>
     356:	d900      	bls.n	35a <adc_init+0x13a>
     358:	e069      	b.n	42e <STACK_SIZE+0x2e>
     35a:	2b00      	cmp	r3, #0
     35c:	d100      	bne.n	360 <adc_init+0x140>
     35e:	e09b      	b.n	498 <STACK_SIZE+0x98>
     360:	6838      	ldr	r0, [r7, #0]
     362:	7e43      	ldrb	r3, [r0, #25]
     364:	b25b      	sxtb	r3, r3
     366:	2b00      	cmp	r3, #0
     368:	dbfb      	blt.n	362 <adc_init+0x142>
     36a:	4663      	mov	r3, ip
     36c:	722b      	strb	r3, [r5, #8]
     36e:	683a      	ldr	r2, [r7, #0]
     370:	7e53      	ldrb	r3, [r2, #25]
     372:	b25b      	sxtb	r3, r3
     374:	2b00      	cmp	r3, #0
     376:	dbfb      	blt.n	370 <adc_init+0x150>
     378:	8ba3      	ldrh	r3, [r4, #28]
     37a:	83ab      	strh	r3, [r5, #28]
     37c:	683a      	ldr	r2, [r7, #0]
     37e:	7e53      	ldrb	r3, [r2, #25]
     380:	b25b      	sxtb	r3, r3
     382:	2b00      	cmp	r3, #0
     384:	dbfb      	blt.n	37e <adc_init+0x15e>
     386:	8c23      	ldrh	r3, [r4, #32]
     388:	842b      	strh	r3, [r5, #32]
     38a:	9b02      	ldr	r3, [sp, #8]
     38c:	781a      	ldrb	r2, [r3, #0]
     38e:	2a00      	cmp	r2, #0
     390:	d003      	beq.n	39a <adc_init+0x17a>
     392:	3a01      	subs	r2, #1
     394:	b2d2      	uxtb	r2, r2
     396:	2a0f      	cmp	r2, #15
     398:	d8b4      	bhi.n	304 <adc_init+0xe4>
     39a:	0023      	movs	r3, r4
     39c:	332b      	adds	r3, #43	; 0x2b
     39e:	7818      	ldrb	r0, [r3, #0]
     3a0:	280f      	cmp	r0, #15
     3a2:	d8af      	bhi.n	304 <adc_init+0xe4>
     3a4:	683e      	ldr	r6, [r7, #0]
     3a6:	7e73      	ldrb	r3, [r6, #25]
     3a8:	b25b      	sxtb	r3, r3
     3aa:	2b00      	cmp	r3, #0
     3ac:	dbfb      	blt.n	3a6 <adc_init+0x186>
     3ae:	7b26      	ldrb	r6, [r4, #12]
     3b0:	89e3      	ldrh	r3, [r4, #14]
     3b2:	0500      	lsls	r0, r0, #20
     3b4:	4333      	orrs	r3, r6
     3b6:	68a6      	ldr	r6, [r4, #8]
     3b8:	0412      	lsls	r2, r2, #16
     3ba:	4333      	orrs	r3, r6
     3bc:	4303      	orrs	r3, r0
     3be:	4313      	orrs	r3, r2
     3c0:	612b      	str	r3, [r5, #16]
     3c2:	0023      	movs	r3, r4
     3c4:	332a      	adds	r3, #42	; 0x2a
     3c6:	781b      	ldrb	r3, [r3, #0]
     3c8:	752b      	strb	r3, [r5, #20]
     3ca:	230f      	movs	r3, #15
     3cc:	75ab      	strb	r3, [r5, #22]
     3ce:	7fcb      	ldrb	r3, [r1, #31]
     3d0:	2b00      	cmp	r3, #0
     3d2:	d00c      	beq.n	3ee <adc_init+0x1ce>
     3d4:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
     3d6:	4941      	ldr	r1, [pc, #260]	; (4dc <STACK_SIZE+0xdc>)
     3d8:	428b      	cmp	r3, r1
     3da:	d893      	bhi.n	304 <adc_init+0xe4>
     3dc:	84ab      	strh	r3, [r5, #36]	; 0x24
     3de:	2380      	movs	r3, #128	; 0x80
     3e0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
     3e2:	011b      	lsls	r3, r3, #4
     3e4:	18d3      	adds	r3, r2, r3
     3e6:	b29b      	uxth	r3, r3
     3e8:	428b      	cmp	r3, r1
     3ea:	d88b      	bhi.n	304 <adc_init+0xe4>
     3ec:	84ea      	strh	r2, [r5, #38]	; 0x26
     3ee:	22e0      	movs	r2, #224	; 0xe0
     3f0:	4b3b      	ldr	r3, [pc, #236]	; (4e0 <STACK_SIZE+0xe0>)
     3f2:	2000      	movs	r0, #0
     3f4:	6819      	ldr	r1, [r3, #0]
     3f6:	00d2      	lsls	r2, r2, #3
     3f8:	014b      	lsls	r3, r1, #5
     3fa:	0019      	movs	r1, r3
     3fc:	401a      	ands	r2, r3
     3fe:	4b39      	ldr	r3, [pc, #228]	; (4e4 <STACK_SIZE+0xe4>)
     400:	681b      	ldr	r3, [r3, #0]
     402:	0edb      	lsrs	r3, r3, #27
     404:	430b      	orrs	r3, r1
     406:	b2db      	uxtb	r3, r3
     408:	4313      	orrs	r3, r2
     40a:	852b      	strh	r3, [r5, #40]	; 0x28
     40c:	b007      	add	sp, #28
     40e:	bdf0      	pop	{r4, r5, r6, r7, pc}
     410:	7c61      	ldrb	r1, [r4, #17]
     412:	7c22      	ldrb	r2, [r4, #16]
     414:	2310      	movs	r3, #16
     416:	e77a      	b.n	30e <adc_init+0xee>
     418:	2206      	movs	r2, #6
     41a:	2310      	movs	r3, #16
     41c:	2101      	movs	r1, #1
     41e:	e776      	b.n	30e <adc_init+0xee>
     420:	2208      	movs	r2, #8
     422:	2100      	movs	r1, #0
     424:	e773      	b.n	30e <adc_init+0xee>
     426:	2200      	movs	r2, #0
     428:	e7fb      	b.n	422 <STACK_SIZE+0x22>
     42a:	2202      	movs	r2, #2
     42c:	e7f5      	b.n	41a <STACK_SIZE+0x1a>
     42e:	2b20      	cmp	r3, #32
     430:	d018      	beq.n	464 <STACK_SIZE+0x64>
     432:	2b30      	cmp	r3, #48	; 0x30
     434:	d000      	beq.n	438 <STACK_SIZE+0x38>
     436:	e793      	b.n	360 <adc_init+0x140>
     438:	7ce3      	ldrb	r3, [r4, #19]
     43a:	69e0      	ldr	r0, [r4, #28]
     43c:	2b00      	cmp	r3, #0
     43e:	d009      	beq.n	454 <STACK_SIZE+0x54>
     440:	0003      	movs	r3, r0
     442:	3380      	adds	r3, #128	; 0x80
     444:	2bff      	cmp	r3, #255	; 0xff
     446:	d900      	bls.n	44a <STACK_SIZE+0x4a>
     448:	e75c      	b.n	304 <adc_init+0xe4>
     44a:	6a23      	ldr	r3, [r4, #32]
     44c:	3380      	adds	r3, #128	; 0x80
     44e:	2bff      	cmp	r3, #255	; 0xff
     450:	d900      	bls.n	454 <STACK_SIZE+0x54>
     452:	e757      	b.n	304 <adc_init+0xe4>
     454:	28ff      	cmp	r0, #255	; 0xff
     456:	dd00      	ble.n	45a <STACK_SIZE+0x5a>
     458:	e754      	b.n	304 <adc_init+0xe4>
     45a:	6a23      	ldr	r3, [r4, #32]
     45c:	2bff      	cmp	r3, #255	; 0xff
     45e:	dd00      	ble.n	462 <STACK_SIZE+0x62>
     460:	e750      	b.n	304 <adc_init+0xe4>
     462:	e77d      	b.n	360 <adc_init+0x140>
     464:	7ce0      	ldrb	r0, [r4, #19]
     466:	69e6      	ldr	r6, [r4, #28]
     468:	4b1f      	ldr	r3, [pc, #124]	; (4e8 <STACK_SIZE+0xe8>)
     46a:	2800      	cmp	r0, #0
     46c:	d00c      	beq.n	488 <STACK_SIZE+0x88>
     46e:	2080      	movs	r0, #128	; 0x80
     470:	0080      	lsls	r0, r0, #2
     472:	1830      	adds	r0, r6, r0
     474:	4298      	cmp	r0, r3
     476:	d900      	bls.n	47a <STACK_SIZE+0x7a>
     478:	e744      	b.n	304 <adc_init+0xe4>
     47a:	2280      	movs	r2, #128	; 0x80
     47c:	6a20      	ldr	r0, [r4, #32]
     47e:	0092      	lsls	r2, r2, #2
     480:	1810      	adds	r0, r2, r0
     482:	4298      	cmp	r0, r3
     484:	d900      	bls.n	488 <STACK_SIZE+0x88>
     486:	e73d      	b.n	304 <adc_init+0xe4>
     488:	429e      	cmp	r6, r3
     48a:	dd00      	ble.n	48e <STACK_SIZE+0x8e>
     48c:	e73a      	b.n	304 <adc_init+0xe4>
     48e:	6a22      	ldr	r2, [r4, #32]
     490:	429a      	cmp	r2, r3
     492:	dd00      	ble.n	496 <STACK_SIZE+0x96>
     494:	e736      	b.n	304 <adc_init+0xe4>
     496:	e763      	b.n	360 <adc_init+0x140>
     498:	7ce0      	ldrb	r0, [r4, #19]
     49a:	69e6      	ldr	r6, [r4, #28]
     49c:	4b0f      	ldr	r3, [pc, #60]	; (4dc <STACK_SIZE+0xdc>)
     49e:	2800      	cmp	r0, #0
     4a0:	d0f2      	beq.n	488 <STACK_SIZE+0x88>
     4a2:	2280      	movs	r2, #128	; 0x80
     4a4:	0112      	lsls	r2, r2, #4
     4a6:	18b0      	adds	r0, r6, r2
     4a8:	4298      	cmp	r0, r3
     4aa:	d900      	bls.n	4ae <STACK_SIZE+0xae>
     4ac:	e72a      	b.n	304 <adc_init+0xe4>
     4ae:	2080      	movs	r0, #128	; 0x80
     4b0:	6a22      	ldr	r2, [r4, #32]
     4b2:	0100      	lsls	r0, r0, #4
     4b4:	e7e4      	b.n	480 <STACK_SIZE+0x80>
     4b6:	7ce0      	ldrb	r0, [r4, #19]
     4b8:	69e6      	ldr	r6, [r4, #28]
     4ba:	4b0c      	ldr	r3, [pc, #48]	; (4ec <STACK_SIZE+0xec>)
     4bc:	2800      	cmp	r0, #0
     4be:	d0e3      	beq.n	488 <STACK_SIZE+0x88>
     4c0:	2280      	movs	r2, #128	; 0x80
     4c2:	0212      	lsls	r2, r2, #8
     4c4:	18b0      	adds	r0, r6, r2
     4c6:	4298      	cmp	r0, r3
     4c8:	d900      	bls.n	4cc <STACK_SIZE+0xcc>
     4ca:	e71b      	b.n	304 <adc_init+0xe4>
     4cc:	2080      	movs	r0, #128	; 0x80
     4ce:	6a22      	ldr	r2, [r4, #32]
     4d0:	0200      	lsls	r0, r0, #8
     4d2:	e7d5      	b.n	480 <STACK_SIZE+0x80>
     4d4:	40000400 	.word	0x40000400
     4d8:	40000800 	.word	0x40000800
     4dc:	00000fff 	.word	0x00000fff
     4e0:	00806024 	.word	0x00806024
     4e4:	00806020 	.word	0x00806020
     4e8:	000003ff 	.word	0x000003ff
     4ec:	0000ffff 	.word	0x0000ffff

000004f0 <extint_register_callback>:
     4f0:	b510      	push	{r4, lr}
     4f2:	2317      	movs	r3, #23
     4f4:	2a00      	cmp	r2, #0
     4f6:	d106      	bne.n	506 <extint_register_callback+0x16>
     4f8:	4b06      	ldr	r3, [pc, #24]	; (514 <extint_register_callback+0x24>)
     4fa:	0089      	lsls	r1, r1, #2
     4fc:	58cc      	ldr	r4, [r1, r3]
     4fe:	2c00      	cmp	r4, #0
     500:	d103      	bne.n	50a <extint_register_callback+0x1a>
     502:	50c8      	str	r0, [r1, r3]
     504:	0023      	movs	r3, r4
     506:	0018      	movs	r0, r3
     508:	bd10      	pop	{r4, pc}
     50a:	0013      	movs	r3, r2
     50c:	4284      	cmp	r4, r0
     50e:	d0fa      	beq.n	506 <extint_register_callback+0x16>
     510:	231d      	movs	r3, #29
     512:	e7f8      	b.n	506 <extint_register_callback+0x16>
     514:	20000098 	.word	0x20000098

00000518 <extint_chan_enable_callback>:
     518:	2317      	movs	r3, #23
     51a:	2900      	cmp	r1, #0
     51c:	d106      	bne.n	52c <extint_chan_enable_callback+0x14>
     51e:	281f      	cmp	r0, #31
     520:	d806      	bhi.n	530 <extint_chan_enable_callback+0x18>
     522:	3b16      	subs	r3, #22
     524:	4083      	lsls	r3, r0
     526:	4a03      	ldr	r2, [pc, #12]	; (534 <extint_chan_enable_callback+0x1c>)
     528:	60d3      	str	r3, [r2, #12]
     52a:	000b      	movs	r3, r1
     52c:	0018      	movs	r0, r3
     52e:	4770      	bx	lr
     530:	60c9      	str	r1, [r1, #12]
     532:	deff      	udf	#255	; 0xff
     534:	40001800 	.word	0x40001800

00000538 <EIC_Handler>:
     538:	2300      	movs	r3, #0
     53a:	b570      	push	{r4, r5, r6, lr}
     53c:	2501      	movs	r5, #1
     53e:	4c0b      	ldr	r4, [pc, #44]	; (56c <EIC_Handler+0x34>)
     540:	7023      	strb	r3, [r4, #0]
     542:	7823      	ldrb	r3, [r4, #0]
     544:	2b0f      	cmp	r3, #15
     546:	d900      	bls.n	54a <EIC_Handler+0x12>
     548:	bd70      	pop	{r4, r5, r6, pc}
     54a:	0029      	movs	r1, r5
     54c:	4099      	lsls	r1, r3
     54e:	4a08      	ldr	r2, [pc, #32]	; (570 <EIC_Handler+0x38>)
     550:	6910      	ldr	r0, [r2, #16]
     552:	4208      	tst	r0, r1
     554:	d006      	beq.n	564 <EIC_Handler+0x2c>
     556:	6111      	str	r1, [r2, #16]
     558:	4a06      	ldr	r2, [pc, #24]	; (574 <EIC_Handler+0x3c>)
     55a:	009b      	lsls	r3, r3, #2
     55c:	589b      	ldr	r3, [r3, r2]
     55e:	2b00      	cmp	r3, #0
     560:	d000      	beq.n	564 <EIC_Handler+0x2c>
     562:	4798      	blx	r3
     564:	7823      	ldrb	r3, [r4, #0]
     566:	3301      	adds	r3, #1
     568:	7023      	strb	r3, [r4, #0]
     56a:	e7ea      	b.n	542 <EIC_Handler+0xa>
     56c:	20000094 	.word	0x20000094
     570:	40001800 	.word	0x40001800
     574:	20000098 	.word	0x20000098

00000578 <extint_is_syncing>:
     578:	4b01      	ldr	r3, [pc, #4]	; (580 <extint_is_syncing+0x8>)
     57a:	7858      	ldrb	r0, [r3, #1]
     57c:	09c0      	lsrs	r0, r0, #7
     57e:	4770      	bx	lr
     580:	40001800 	.word	0x40001800

00000584 <_extint_enable>:
     584:	2302      	movs	r3, #2
     586:	b510      	push	{r4, lr}
     588:	4a04      	ldr	r2, [pc, #16]	; (59c <_extint_enable+0x18>)
     58a:	7811      	ldrb	r1, [r2, #0]
     58c:	430b      	orrs	r3, r1
     58e:	7013      	strb	r3, [r2, #0]
     590:	f7ff fff2 	bl	578 <extint_is_syncing>
     594:	2800      	cmp	r0, #0
     596:	d1fb      	bne.n	590 <_extint_enable+0xc>
     598:	bd10      	pop	{r4, pc}
     59a:	46c0      	nop			; (mov r8, r8)
     59c:	40001800 	.word	0x40001800

000005a0 <_system_extint_init>:
     5a0:	2340      	movs	r3, #64	; 0x40
     5a2:	b507      	push	{r0, r1, r2, lr}
     5a4:	4a10      	ldr	r2, [pc, #64]	; (5e8 <_system_extint_init+0x48>)
     5a6:	2005      	movs	r0, #5
     5a8:	6991      	ldr	r1, [r2, #24]
     5aa:	430b      	orrs	r3, r1
     5ac:	6193      	str	r3, [r2, #24]
     5ae:	2300      	movs	r3, #0
     5b0:	a901      	add	r1, sp, #4
     5b2:	700b      	strb	r3, [r1, #0]
     5b4:	f001 f9bc 	bl	1930 <system_gclk_chan_set_config>
     5b8:	2005      	movs	r0, #5
     5ba:	f001 f97d 	bl	18b8 <system_gclk_chan_enable>
     5be:	2301      	movs	r3, #1
     5c0:	4a0a      	ldr	r2, [pc, #40]	; (5ec <_system_extint_init+0x4c>)
     5c2:	7811      	ldrb	r1, [r2, #0]
     5c4:	430b      	orrs	r3, r1
     5c6:	7013      	strb	r3, [r2, #0]
     5c8:	f7ff ffd6 	bl	578 <extint_is_syncing>
     5cc:	2800      	cmp	r0, #0
     5ce:	d1fb      	bne.n	5c8 <_system_extint_init+0x28>
     5d0:	0002      	movs	r2, r0
     5d2:	4b07      	ldr	r3, [pc, #28]	; (5f0 <_system_extint_init+0x50>)
     5d4:	501a      	str	r2, [r3, r0]
     5d6:	3004      	adds	r0, #4
     5d8:	2840      	cmp	r0, #64	; 0x40
     5da:	d1fb      	bne.n	5d4 <_system_extint_init+0x34>
     5dc:	2210      	movs	r2, #16
     5de:	4b05      	ldr	r3, [pc, #20]	; (5f4 <_system_extint_init+0x54>)
     5e0:	601a      	str	r2, [r3, #0]
     5e2:	f7ff ffcf 	bl	584 <_extint_enable>
     5e6:	bd07      	pop	{r0, r1, r2, pc}
     5e8:	40000400 	.word	0x40000400
     5ec:	40001800 	.word	0x40001800
     5f0:	20000098 	.word	0x20000098
     5f4:	e000e100 	.word	0xe000e100

000005f8 <extint_chan_get_config_defaults>:
     5f8:	2300      	movs	r3, #0
     5fa:	2201      	movs	r2, #1
     5fc:	6003      	str	r3, [r0, #0]
     5fe:	6043      	str	r3, [r0, #4]
     600:	7283      	strb	r3, [r0, #10]
     602:	3302      	adds	r3, #2
     604:	7202      	strb	r2, [r0, #8]
     606:	7242      	strb	r2, [r0, #9]
     608:	72c3      	strb	r3, [r0, #11]
     60a:	4770      	bx	lr

0000060c <extint_chan_set_config>:
     60c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     60e:	000c      	movs	r4, r1
     610:	2600      	movs	r6, #0
     612:	7923      	ldrb	r3, [r4, #4]
     614:	a901      	add	r1, sp, #4
     616:	704e      	strb	r6, [r1, #1]
     618:	70ce      	strb	r6, [r1, #3]
     61a:	700b      	strb	r3, [r1, #0]
     61c:	7a23      	ldrb	r3, [r4, #8]
     61e:	0005      	movs	r5, r0
     620:	7820      	ldrb	r0, [r4, #0]
     622:	708b      	strb	r3, [r1, #2]
     624:	f001 f9e6 	bl	19f4 <system_pinmux_pin_set_config>
     628:	0033      	movs	r3, r6
     62a:	2d1f      	cmp	r5, #31
     62c:	d800      	bhi.n	630 <extint_chan_set_config+0x24>
     62e:	4b11      	ldr	r3, [pc, #68]	; (674 <extint_chan_set_config+0x68>)
     630:	2107      	movs	r1, #7
     632:	7aa2      	ldrb	r2, [r4, #10]
     634:	4029      	ands	r1, r5
     636:	0089      	lsls	r1, r1, #2
     638:	7ae6      	ldrb	r6, [r4, #11]
     63a:	2a00      	cmp	r2, #0
     63c:	d001      	beq.n	642 <extint_chan_set_config+0x36>
     63e:	2208      	movs	r2, #8
     640:	4316      	orrs	r6, r2
     642:	270f      	movs	r7, #15
     644:	408e      	lsls	r6, r1
     646:	408f      	lsls	r7, r1
     648:	0031      	movs	r1, r6
     64a:	08ea      	lsrs	r2, r5, #3
     64c:	0092      	lsls	r2, r2, #2
     64e:	189a      	adds	r2, r3, r2
     650:	6990      	ldr	r0, [r2, #24]
     652:	43b8      	bics	r0, r7
     654:	4301      	orrs	r1, r0
     656:	6191      	str	r1, [r2, #24]
     658:	7a61      	ldrb	r1, [r4, #9]
     65a:	2201      	movs	r2, #1
     65c:	2900      	cmp	r1, #0
     65e:	d004      	beq.n	66a <extint_chan_set_config+0x5e>
     660:	40aa      	lsls	r2, r5
     662:	6959      	ldr	r1, [r3, #20]
     664:	430a      	orrs	r2, r1
     666:	615a      	str	r2, [r3, #20]
     668:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
     66a:	40aa      	lsls	r2, r5
     66c:	6959      	ldr	r1, [r3, #20]
     66e:	4391      	bics	r1, r2
     670:	6159      	str	r1, [r3, #20]
     672:	e7f9      	b.n	668 <extint_chan_set_config+0x5c>
     674:	40001800 	.word	0x40001800

00000678 <is_button_one_pressed>:
		const uint8_t gpio_pin)
{
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	return (port_base->IN.reg & pin_mask);
     678:	4b14      	ldr	r3, [pc, #80]	; (6cc <is_button_one_pressed+0x54>)
     67a:	4915      	ldr	r1, [pc, #84]	; (6d0 <is_button_one_pressed+0x58>)
     67c:	6a18      	ldr	r0, [r3, #32]
     67e:	4a15      	ldr	r2, [pc, #84]	; (6d4 <is_button_one_pressed+0x5c>)
     680:	4b15      	ldr	r3, [pc, #84]	; (6d8 <is_button_one_pressed+0x60>)
/************************************************************************/
/* Button 1 function													*/
/************************************************************************/
bool is_button_one_pressed(void) {

  if (!port_pin_get_input_level(BUTTON_1)) {
     682:	0440      	lsls	r0, r0, #17
     684:	d418      	bmi.n	6b8 <is_button_one_pressed+0x40>
    BUTTON_ONE_PRESS_STATUS = true;
     686:	2001      	movs	r0, #1
     688:	7008      	strb	r0, [r1, #0]
    press_B1_delay_count--;
     68a:	6819      	ldr	r1, [r3, #0]
     68c:	3901      	subs	r1, #1
     68e:	6019      	str	r1, [r3, #0]
    long_press_B1_delay_count--;
     690:	6811      	ldr	r1, [r2, #0]
     692:	3901      	subs	r1, #1

  } else {
    BUTTON_ONE_PRESS_STATUS = false;
    press_B1_delay_count = DELAY_DEBOUNCE_CN;
    long_press_B1_delay_count = DELAY_PRESS_CN;
     694:	6011      	str	r1, [r2, #0]

  }

  // long press delay logic
  if (long_press_B1_delay_count <= 0) {
     696:	6811      	ldr	r1, [r2, #0]
     698:	2900      	cmp	r1, #0
     69a:	dc04      	bgt.n	6a6 <is_button_one_pressed+0x2e>
    LongPressB1Flag = true;
     69c:	2001      	movs	r0, #1
     69e:	490f      	ldr	r1, [pc, #60]	; (6dc <is_button_one_pressed+0x64>)
     6a0:	7008      	strb	r0, [r1, #0]
    long_press_B1_delay_count = 0;
     6a2:	2100      	movs	r1, #0
     6a4:	6011      	str	r1, [r2, #0]
     6a6:	2000      	movs	r0, #0
  }

  // debounce logic
  if (press_B1_delay_count <= 0) {
     6a8:	6819      	ldr	r1, [r3, #0]
     6aa:	4a0d      	ldr	r2, [pc, #52]	; (6e0 <is_button_one_pressed+0x68>)
     6ac:	4281      	cmp	r1, r0
     6ae:	dc0a      	bgt.n	6c6 <is_button_one_pressed+0x4e>
    BUTTON_ONE_RELEASE_STATUS = false;
     6b0:	7010      	strb	r0, [r2, #0]
    press_B1_delay_count = 0;
     6b2:	6018      	str	r0, [r3, #0]
    return true;
     6b4:	3001      	adds	r0, #1

  } else {
    BUTTON_ONE_RELEASE_STATUS = true;
    return false;
  }
}
     6b6:	4770      	bx	lr
    BUTTON_ONE_PRESS_STATUS = false;
     6b8:	2000      	movs	r0, #0
     6ba:	7008      	strb	r0, [r1, #0]
    press_B1_delay_count = DELAY_DEBOUNCE_CN;
     6bc:	210a      	movs	r1, #10
     6be:	6019      	str	r1, [r3, #0]
    long_press_B1_delay_count = DELAY_PRESS_CN;
     6c0:	3123      	adds	r1, #35	; 0x23
     6c2:	31ff      	adds	r1, #255	; 0xff
     6c4:	e7e6      	b.n	694 <is_button_one_pressed+0x1c>
    BUTTON_ONE_RELEASE_STATUS = true;
     6c6:	2301      	movs	r3, #1
     6c8:	7013      	strb	r3, [r2, #0]
    return false;
     6ca:	e7f4      	b.n	6b6 <is_button_one_pressed+0x3e>
     6cc:	41004400 	.word	0x41004400
     6d0:	20000034 	.word	0x20000034
     6d4:	20000000 	.word	0x20000000
     6d8:	20000004 	.word	0x20000004
     6dc:	20000036 	.word	0x20000036
     6e0:	20000035 	.word	0x20000035

000006e4 <set_pwm_color_channel>:
#include "pwm_led.h"

uint8_t pwm_led_toggle_count = 0;


void set_pwm_color_channel(uint8_t channel, bool enable) {
     6e4:	b510      	push	{r4, lr}
     6e6:	1e0a      	subs	r2, r1, #0
     6e8:	4c0a      	ldr	r4, [pc, #40]	; (714 <set_pwm_color_channel+0x30>)
	if (enable){
     6ea:	d000      	beq.n	6ee <set_pwm_color_channel+0xa>
		tcc_set_compare_value(&tcc_instance,
     6ec:	4a0a      	ldr	r2, [pc, #40]	; (718 <set_pwm_color_channel+0x34>)
		channel,
		INDICATION_LED_DUTY_CYCLE);
	}else{
		tcc_set_compare_value(&tcc_instance,
     6ee:	0001      	movs	r1, r0
     6f0:	0020      	movs	r0, r4
     6f2:	f001 fb97 	bl	1e24 <tcc_set_compare_value>
	Tcc *const tcc_module = module_inst->hw;
	uint32_t last_cmd;

	/* Wait until last command is done */
	do {
		while (tcc_module->SYNCBUSY.reg & TCC_SYNCBUSY_CTRLB) {
     6f6:	2104      	movs	r1, #4
     6f8:	201f      	movs	r0, #31
     6fa:	6822      	ldr	r2, [r4, #0]
     6fc:	6893      	ldr	r3, [r2, #8]
     6fe:	420b      	tst	r3, r1
     700:	d1fc      	bne.n	6fc <set_pwm_color_channel+0x18>
			/* Wait for sync */
		}
		last_cmd = tcc_module->CTRLBSET.reg & TCC_CTRLBSET_CMD_Msk;
     702:	7953      	ldrb	r3, [r2, #5]
     704:	4383      	bics	r3, r0
		if (last_cmd == TCC_CTRLBSET_CMD_NONE) {
     706:	d002      	beq.n	70e <set_pwm_color_channel+0x2a>
			break;
		} else if (last_cmd == TCC_CTRLBSET_CMD_UPDATE) {
     708:	2b60      	cmp	r3, #96	; 0x60
     70a:	d1f7      	bne.n	6fc <set_pwm_color_channel+0x18>
		channel,
		ZERO_DUTY_CYCLE);
	}
	
	tcc_force_double_buffer_update(&tcc_instance);
}
     70c:	bd10      	pop	{r4, pc}
			return;
		}
	} while (1);

	/* Write command to execute */
	tcc_module->CTRLBSET.reg = TCC_CTRLBSET_CMD_UPDATE;
     70e:	2360      	movs	r3, #96	; 0x60
     710:	7153      	strb	r3, [r2, #5]
     712:	e7fb      	b.n	70c <set_pwm_color_channel+0x28>
     714:	200000d8 	.word	0x200000d8
     718:	00000fff 	.word	0x00000fff

0000071c <pwm_led_system_cleanup>:



void pwm_led_system_cleanup(void) {
	set_pwm_color_channel(RED_CHANNEL, false);
     71c:	2100      	movs	r1, #0
void pwm_led_system_cleanup(void) {
     71e:	b510      	push	{r4, lr}
	set_pwm_color_channel(RED_CHANNEL, false);
     720:	0008      	movs	r0, r1
     722:	f7ff ffdf 	bl	6e4 <set_pwm_color_channel>
	set_pwm_color_channel(BLUE_CHANNEL, false);
     726:	2100      	movs	r1, #0
     728:	2002      	movs	r0, #2
     72a:	f7ff ffdb 	bl	6e4 <set_pwm_color_channel>
	set_pwm_color_channel(GREEN_CHANNEL, false);
     72e:	2100      	movs	r1, #0
     730:	2001      	movs	r0, #1
     732:	f7ff ffd7 	bl	6e4 <set_pwm_color_channel>
	set_pwm_color_channel(WHITE_CHANNEL, false);
     736:	2100      	movs	r1, #0
     738:	2003      	movs	r0, #3
     73a:	f7ff ffd3 	bl	6e4 <set_pwm_color_channel>
}
     73e:	bd10      	pop	{r4, pc}

00000740 <set_pwm_color>:



void set_pwm_color(int color) {
     740:	b510      	push	{r4, lr}
	
	
	
	switch (color) {
     742:	2806      	cmp	r0, #6
     744:	d809      	bhi.n	75a <set_pwm_color+0x1a>
		case 5:  // Purple (Red + Blue)
		set_pwm_color_channel(RED_CHANNEL, true);
		set_pwm_color_channel(BLUE_CHANNEL, true);
		break;
		case 6:  // Cyan (Blue + Green)
		set_pwm_color_channel(BLUE_CHANNEL, true);
     746:	2101      	movs	r1, #1
	switch (color) {
     748:	f001 ff94 	bl	2674 <__gnu_thumb1_case_uqi>
     74c:	08140e04 	.word	0x08140e04
     750:	100a      	.short	0x100a
     752:	16          	.byte	0x16
     753:	00          	.byte	0x00
		set_pwm_color_channel(RED_CHANNEL, true);
     754:	2000      	movs	r0, #0
		set_pwm_color_channel(GREEN_CHANNEL, true);
     756:	f7ff ffc5 	bl	6e4 <set_pwm_color_channel>
		break;
		default:
		break;
	}
}
     75a:	bd10      	pop	{r4, pc}
		set_pwm_color_channel(WHITE_CHANNEL, true);
     75c:	2003      	movs	r0, #3
     75e:	e7fa      	b.n	756 <set_pwm_color+0x16>
		set_pwm_color_channel(RED_CHANNEL, true);
     760:	2000      	movs	r0, #0
		set_pwm_color_channel(BLUE_CHANNEL, true);
     762:	f7ff ffbf 	bl	6e4 <set_pwm_color_channel>
		set_pwm_color_channel(GREEN_CHANNEL, true);
     766:	2101      	movs	r1, #1
     768:	0008      	movs	r0, r1
     76a:	e7f4      	b.n	756 <set_pwm_color+0x16>
		set_pwm_color_channel(RED_CHANNEL, true);
     76c:	2000      	movs	r0, #0
     76e:	f7ff ffb9 	bl	6e4 <set_pwm_color_channel>
		set_pwm_color_channel(BLUE_CHANNEL, true);
     772:	2101      	movs	r1, #1
     774:	2002      	movs	r0, #2
     776:	e7ee      	b.n	756 <set_pwm_color+0x16>
		set_pwm_color_channel(BLUE_CHANNEL, true);
     778:	2002      	movs	r0, #2
     77a:	e7f2      	b.n	762 <set_pwm_color+0x22>

0000077c <configure_pwm_tcc>:


void configure_pwm_tcc(void)
{
     77c:	b570      	push	{r4, r5, r6, lr}
	tcc_get_config_defaults(&config_tcc, CONF_PWM_MODULE);
     77e:	4c1c      	ldr	r4, [pc, #112]	; (7f0 <configure_pwm_tcc+0x74>)
     780:	491c      	ldr	r1, [pc, #112]	; (7f4 <configure_pwm_tcc+0x78>)
     782:	0020      	movs	r0, r4
     784:	f001 f980 	bl	1a88 <tcc_get_config_defaults>
	config_tcc.compare.match[BLUE_CHANNEL]								= ZERO_DUTY_CYCLE;
	config_tcc.compare.match[GREEN_CHANNEL]								= ZERO_DUTY_CYCLE;
	config_tcc.compare.match[WHITE_CHANNEL]								= ZERO_DUTY_CYCLE;

	config_tcc.pins.wave_out_pin[RED_CHANNEL]							= PIN_PA04F_TCC0_WO0;		// RED
	config_tcc.pins.wave_out_pin_mux[RED_CHANNEL]						= MUX_PA04F_TCC0_WO0;
     788:	2105      	movs	r1, #5
	config_tcc.counter.period											= CONF_DEFAULT_PERIOD;
     78a:	4b1b      	ldr	r3, [pc, #108]	; (7f8 <configure_pwm_tcc+0x7c>)
	config_tcc.pins.wave_out_pin_mux[RED_CHANNEL]						= MUX_PA04F_TCC0_WO0;
     78c:	67a1      	str	r1, [r4, #120]	; 0x78
	config_tcc.counter.period											= CONF_DEFAULT_PERIOD;
     78e:	6063      	str	r3, [r4, #4]
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
	
	config_tcc.pins.wave_out_pin[GREEN_CHANNEL]							= PIN_PA05F_TCC0_WO1;		// GREEN
     790:	65e1      	str	r1, [r4, #92]	; 0x5c
	config_tcc.compare.match[RED_CHANNEL]								= ZERO_DUTY_CYCLE;
     792:	2300      	movs	r3, #0
	config_tcc.pins.wave_out_pin_mux[GREEN_CHANNEL]						= MUX_PA05F_TCC0_WO1;
     794:	67e1      	str	r1, [r4, #124]	; 0x7c
	config_tcc.pins.enable_wave_out_pin[GREEN_CHANNEL]					= true;
     796:	0021      	movs	r1, r4
	config_tcc.compare.match[RED_CHANNEL]								= ZERO_DUTY_CYCLE;
     798:	61e3      	str	r3, [r4, #28]
	config_tcc.compare.match[BLUE_CHANNEL]								= ZERO_DUTY_CYCLE;
     79a:	6263      	str	r3, [r4, #36]	; 0x24
	config_tcc.compare.match[GREEN_CHANNEL]								= ZERO_DUTY_CYCLE;
     79c:	6223      	str	r3, [r4, #32]
	config_tcc.compare.match[WHITE_CHANNEL]								= ZERO_DUTY_CYCLE;
     79e:	62a3      	str	r3, [r4, #40]	; 0x28
	config_tcc.pins.enable_wave_out_pin[GREEN_CHANNEL]					= true;
     7a0:	3199      	adds	r1, #153	; 0x99
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
     7a2:	3301      	adds	r3, #1
	config_tcc.pins.wave_out_pin[RED_CHANNEL]							= PIN_PA04F_TCC0_WO0;		// RED
     7a4:	2204      	movs	r2, #4
	config_tcc.pins.enable_wave_out_pin[GREEN_CHANNEL]					= true;
     7a6:	700b      	strb	r3, [r1, #0]

	config_tcc.pins.wave_out_pin[BLUE_CHANNEL]							= PIN_PA08E_TCC0_WO2;		// BLUE
     7a8:	2108      	movs	r1, #8
     7aa:	6621      	str	r1, [r4, #96]	; 0x60
	config_tcc.pins.wave_out_pin_mux[BLUE_CHANNEL]						= MUX_PA08E_TCC0_WO2;
     7ac:	18a1      	adds	r1, r4, r2
     7ae:	67ca      	str	r2, [r1, #124]	; 0x7c
	config_tcc.pins.enable_wave_out_pin[BLUE_CHANNEL]					= true;
     7b0:	0021      	movs	r1, r4
     7b2:	319a      	adds	r1, #154	; 0x9a
     7b4:	700b      	strb	r3, [r1, #0]

	config_tcc.pins.wave_out_pin[WHITE_CHANNEL]							= PIN_PA09E_TCC0_WO3;		// WHITE
     7b6:	2109      	movs	r1, #9
     7b8:	6661      	str	r1, [r4, #100]	; 0x64
	config_tcc.pins.wave_out_pin_mux[WHITE_CHANNEL]						= MUX_PA09E_TCC0_WO3;
     7ba:	0021      	movs	r1, r4
     7bc:	3108      	adds	r1, #8
     7be:	67ca      	str	r2, [r1, #124]	; 0x7c
	config_tcc.pins.wave_out_pin[RED_CHANNEL]							= PIN_PA04F_TCC0_WO0;		// RED
     7c0:	65a2      	str	r2, [r4, #88]	; 0x58
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
     7c2:	0020      	movs	r0, r4
	config_tcc.pins.enable_wave_out_pin[WHITE_CHANNEL]				    = true;
     7c4:	0022      	movs	r2, r4
	config_tcc.compare.wave_generation = TCC_WAVE_GENERATION_SINGLE_SLOPE_PWM;
     7c6:	2502      	movs	r5, #2
	
	tcc_init(&tcc_instance, CONF_PWM_MODULE, &config_tcc);
     7c8:	4e0c      	ldr	r6, [pc, #48]	; (7fc <configure_pwm_tcc+0x80>)
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
     7ca:	3098      	adds	r0, #152	; 0x98
	config_tcc.pins.enable_wave_out_pin[WHITE_CHANNEL]				    = true;
     7cc:	329b      	adds	r2, #155	; 0x9b
	config_tcc.pins.enable_wave_out_pin[RED_CHANNEL]					= true;
     7ce:	7003      	strb	r3, [r0, #0]
	config_tcc.pins.enable_wave_out_pin[WHITE_CHANNEL]				    = true;
     7d0:	7013      	strb	r3, [r2, #0]
	tcc_init(&tcc_instance, CONF_PWM_MODULE, &config_tcc);
     7d2:	4908      	ldr	r1, [pc, #32]	; (7f4 <configure_pwm_tcc+0x78>)
     7d4:	0022      	movs	r2, r4
     7d6:	0030      	movs	r0, r6
	config_tcc.compare.wave_generation = TCC_WAVE_GENERATION_SINGLE_SLOPE_PWM;
     7d8:	7625      	strb	r5, [r4, #24]
	tcc_init(&tcc_instance, CONF_PWM_MODULE, &config_tcc);
     7da:	f001 f9c7 	bl	1b6c <tcc_init>
     7de:	6833      	ldr	r3, [r6, #0]
	while (tcc_module->SYNCBUSY.reg & TCC_SYNCBUSY_ENABLE) {
     7e0:	689a      	ldr	r2, [r3, #8]
     7e2:	422a      	tst	r2, r5
     7e4:	d1fc      	bne.n	7e0 <configure_pwm_tcc+0x64>
	tcc_module->CTRLA.reg |= TCC_CTRLA_ENABLE;
     7e6:	681a      	ldr	r2, [r3, #0]
     7e8:	4315      	orrs	r5, r2
     7ea:	601d      	str	r5, [r3, #0]
	tcc_enable(&tcc_instance);
	
}
     7ec:	bd70      	pop	{r4, r5, r6, pc}
     7ee:	46c0      	nop			; (mov r8, r8)
     7f0:	20000134 	.word	0x20000134
     7f4:	42001400 	.word	0x42001400
     7f8:	00000fff 	.word	0x00000fff
     7fc:	200000d8 	.word	0x200000d8

00000800 <cycle_pwm_led>:
	//}
//}

// New update; only red color

void cycle_pwm_led(void) {
     800:	b510      	push	{r4, lr}
	switch (pwm_led_toggle_count) {
     802:	4b08      	ldr	r3, [pc, #32]	; (824 <cycle_pwm_led+0x24>)
     804:	781a      	ldrb	r2, [r3, #0]
     806:	2a01      	cmp	r2, #1
     808:	d002      	beq.n	810 <cycle_pwm_led+0x10>
     80a:	2a06      	cmp	r2, #6
     80c:	d004      	beq.n	818 <cycle_pwm_led+0x18>
		case 6:
		pwm_led_toggle_count = 0;
		pwm_led_system_cleanup();							// Reset to 1 for red
		break;
	}
     80e:	bd10      	pop	{r4, pc}
		SET_RED;
     810:	2000      	movs	r0, #0
     812:	f7ff ff95 	bl	740 <set_pwm_color>
		break;
     816:	e7fa      	b.n	80e <cycle_pwm_led+0xe>
		pwm_led_toggle_count = 0;
     818:	2200      	movs	r2, #0
     81a:	701a      	strb	r2, [r3, #0]
		pwm_led_system_cleanup();							// Reset to 1 for red
     81c:	f7ff ff7e 	bl	71c <pwm_led_system_cleanup>
     820:	e7f5      	b.n	80e <cycle_pwm_led+0xe>
     822:	46c0      	nop			; (mov r8, r8)
     824:	20000037 	.word	0x20000037

00000828 <configure_pwm_generator>:
	struct tc_config config_tc;
	tc_get_config_defaults (&config_tc);

	config_tc.clock_source = TC_CLOCK_SOURCE;
	config_tc.counter_size = TC_COUNTER_SIZE;
	config_tc.clock_prescaler = TC_CLOCK_PRESCALER;
     828:	21a0      	movs	r1, #160	; 0xa0
{
     82a:	b500      	push	{lr}
     82c:	b08f      	sub	sp, #60	; 0x3c
{
	/* Sanity check arguments */
	Assert(config);

	/* Write default config to config struct */
	config->clock_source               = GCLK_GENERATOR_0;
     82e:	aa01      	add	r2, sp, #4
	config_tc.clock_prescaler = TC_CLOCK_PRESCALER;
     830:	00c9      	lsls	r1, r1, #3
     832:	8091      	strh	r1, [r2, #4]

	config_tc.counter_8_bit.value = 0;
	config_tc.counter_8_bit.period = PWM_PERIOD_VALUE;
     834:	212d      	movs	r1, #45	; 0x2d
     836:	2300      	movs	r3, #0
     838:	2055      	movs	r0, #85	; 0x55
     83a:	4469      	add	r1, sp

	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;

	config->counter_16_bit.value                   = 0x0000;
     83c:	8513      	strh	r3, [r2, #40]	; 0x28
     83e:	7008      	strb	r0, [r1, #0]

	config_tc.counter_8_bit.compare_capture_channel[0] = INITIAL_DUTY_CYCLE;
     840:	212e      	movs	r1, #46	; 0x2e
     842:	3840      	subs	r0, #64	; 0x40
     844:	4469      	add	r1, sp
	config->counter_16_bit.compare_capture_channel\
		[TC_COMPARE_CAPTURE_CHANNEL_0]                        = 0x0000;
     846:	8553      	strh	r3, [r2, #42]	; 0x2a
     848:	7008      	strb	r0, [r1, #0]

	config_tc.wave_generation = TC_WAVE_GENERATION_NORMAL_PWM;
     84a:	2140      	movs	r1, #64	; 0x40
	config->clock_source               = GCLK_GENERATOR_0;
     84c:	7013      	strb	r3, [r2, #0]
	config->reload_action              = TC_RELOAD_ACTION_GCLK;
     84e:	8113      	strh	r3, [r2, #8]
	config->run_in_standby             = false;
     850:	7053      	strb	r3, [r2, #1]
	config->waveform_invert_output     = TC_WAVEFORM_INVERT_OUTPUT_NONE;
     852:	7293      	strb	r3, [r2, #10]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
     854:	72d3      	strb	r3, [r2, #11]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
     856:	7313      	strb	r3, [r2, #12]
	config->count_direction            = TC_COUNT_DIRECTION_UP;
     858:	7393      	strb	r3, [r2, #14]
	config->oneshot                    = false;
     85a:	7353      	strb	r3, [r2, #13]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
     85c:	7713      	strb	r3, [r2, #28]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
     85e:	6213      	str	r3, [r2, #32]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;
     860:	6253      	str	r3, [r2, #36]	; 0x24
	config->counter_16_bit.compare_capture_channel\
		[TC_COMPARE_CAPTURE_CHANNEL_1]                        = 0x0000;
     862:	8593      	strh	r3, [r2, #44]	; 0x2c
	config_tc.counter_size = TC_COUNTER_SIZE;
     864:	3304      	adds	r3, #4
     866:	7093      	strb	r3, [r2, #2]
	config_tc.wave_generation = TC_WAVE_GENERATION_NORMAL_PWM;
     868:	7191      	strb	r1, [r2, #6]
	config_tc.pwm_channel[0].pin_out = PWM_PIN_OUT;
	config_tc.pwm_channel[0].pin_mux = PWM_MUX_OUT;
     86a:	6193      	str	r3, [r2, #24]
	config_tc.pwm_channel[0].pin_out = PWM_PIN_OUT;
     86c:	3936      	subs	r1, #54	; 0x36

	config_tc.pwm_channel[0].enabled = true;
     86e:	3b03      	subs	r3, #3
	config_tc.pwm_channel[0].pin_out = PWM_PIN_OUT;
     870:	6151      	str	r1, [r2, #20]
	config_tc.pwm_channel[0].enabled = true;
     872:	7413      	strb	r3, [r2, #16]
	
	tc_init (&pwm_generator_instance, PWM_GENERATOR, &config_tc);
     874:	4902      	ldr	r1, [pc, #8]	; (880 <configure_pwm_generator+0x58>)
     876:	4803      	ldr	r0, [pc, #12]	; (884 <configure_pwm_generator+0x5c>)
     878:	f001 fb5c 	bl	1f34 <tc_init>
}
     87c:	b00f      	add	sp, #60	; 0x3c
     87e:	bd00      	pop	{pc}
     880:	42001c00 	.word	0x42001c00
     884:	200001d8 	.word	0x200001d8

00000888 <motor_enable>:



void motor_enable(void){
     888:	b510      	push	{r4, lr}
     88a:	4b09      	ldr	r3, [pc, #36]	; (8b0 <motor_enable+0x28>)
     88c:	681b      	ldr	r3, [r3, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     88e:	7bda      	ldrb	r2, [r3, #15]
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);

	while (tc_is_syncing(module_inst)) {
     890:	b252      	sxtb	r2, r2
     892:	2a00      	cmp	r2, #0
     894:	dbfb      	blt.n	88e <motor_enable+0x6>
		/* Wait for sync */
	}

	/* Enable TC module */
	tc_module->CTRLA.reg |= TC_CTRLA_ENABLE;
     896:	2202      	movs	r2, #2
     898:	8819      	ldrh	r1, [r3, #0]
     89a:	430a      	orrs	r2, r1
     89c:	801a      	strh	r2, [r3, #0]
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
     89e:	2240      	movs	r2, #64	; 0x40
     8a0:	4b04      	ldr	r3, [pc, #16]	; (8b4 <motor_enable+0x2c>)
     8a2:	619a      	str	r2, [r3, #24]
	tc_enable(&pwm_generator_instance);
	port_pin_set_output_level(MOTOR_NSLEEP_PIN, HIGH);
	motor_running = true;
     8a4:	4b04      	ldr	r3, [pc, #16]	; (8b8 <motor_enable+0x30>)
     8a6:	3a3f      	subs	r2, #63	; 0x3f
     8a8:	701a      	strb	r2, [r3, #0]
	set_motor_speed_1_indication();
     8aa:	f001 fdbd 	bl	2428 <set_motor_speed_1_indication>
}
     8ae:	bd10      	pop	{r4, pc}
     8b0:	200001d8 	.word	0x200001d8
     8b4:	41004400 	.word	0x41004400
     8b8:	20000039 	.word	0x20000039

000008bc <motor_disable>:


void motor_disable(void){
	pulsating_motor_routine = false;
     8bc:	2100      	movs	r1, #0
	motor_toggle_count = -1;
     8be:	22ff      	movs	r2, #255	; 0xff
	pulsating_motor_routine = false;
     8c0:	4b0d      	ldr	r3, [pc, #52]	; (8f8 <motor_disable+0x3c>)
void motor_disable(void){
     8c2:	b510      	push	{r4, lr}
	pulsating_motor_routine = false;
     8c4:	7019      	strb	r1, [r3, #0]
	motor_toggle_count = -1;
     8c6:	4b0d      	ldr	r3, [pc, #52]	; (8fc <motor_disable+0x40>)
	motor_running = false;
	tc_set_compare_value (&pwm_generator_instance,TC_COMPARE_CAPTURE_CHANNEL_0,INITIAL_DUTY_CYCLE);
     8c8:	4c0d      	ldr	r4, [pc, #52]	; (900 <motor_disable+0x44>)
	motor_toggle_count = -1;
     8ca:	701a      	strb	r2, [r3, #0]
	motor_running = false;
     8cc:	4b0d      	ldr	r3, [pc, #52]	; (904 <motor_disable+0x48>)
	tc_set_compare_value (&pwm_generator_instance,TC_COMPARE_CAPTURE_CHANNEL_0,INITIAL_DUTY_CYCLE);
     8ce:	3aea      	subs	r2, #234	; 0xea
     8d0:	0020      	movs	r0, r4
	motor_running = false;
     8d2:	7019      	strb	r1, [r3, #0]
	tc_set_compare_value (&pwm_generator_instance,TC_COMPARE_CAPTURE_CHANNEL_0,INITIAL_DUTY_CYCLE);
     8d4:	f001 fc42 	bl	215c <tc_set_compare_value>
     8d8:	6823      	ldr	r3, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     8da:	7bda      	ldrb	r2, [r3, #15]
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	TcCount8 *const tc_module = &(module_inst->hw->COUNT8);

	while (tc_is_syncing(module_inst)) {
     8dc:	b252      	sxtb	r2, r2
     8de:	2a00      	cmp	r2, #0
     8e0:	dbfb      	blt.n	8da <motor_disable+0x1e>
		/* Wait for sync */
	}

	/* Disbale interrupt */
	tc_module->INTENCLR.reg = TC_INTENCLR_MASK;
     8e2:	223b      	movs	r2, #59	; 0x3b
	/* Clear interrupt flag */
	tc_module->INTFLAG.reg = TC_INTFLAG_MASK;

	/* Disable TC module */
	tc_module->CTRLA.reg  &= ~TC_CTRLA_ENABLE;
     8e4:	2102      	movs	r1, #2
	tc_module->INTENCLR.reg = TC_INTENCLR_MASK;
     8e6:	731a      	strb	r2, [r3, #12]
	tc_module->INTFLAG.reg = TC_INTFLAG_MASK;
     8e8:	739a      	strb	r2, [r3, #14]
	tc_module->CTRLA.reg  &= ~TC_CTRLA_ENABLE;
     8ea:	881a      	ldrh	r2, [r3, #0]
     8ec:	438a      	bics	r2, r1
     8ee:	801a      	strh	r2, [r3, #0]
	} else {
		port_base->OUTCLR.reg = pin_mask;
     8f0:	2240      	movs	r2, #64	; 0x40
     8f2:	4b05      	ldr	r3, [pc, #20]	; (908 <motor_disable+0x4c>)
     8f4:	615a      	str	r2, [r3, #20]
	tc_disable (&pwm_generator_instance);
	port_pin_set_output_level(MOTOR_NSLEEP_PIN,LOW);
}
     8f6:	bd10      	pop	{r4, pc}
     8f8:	2000003a 	.word	0x2000003a
     8fc:	20000008 	.word	0x20000008
     900:	200001d8 	.word	0x200001d8
     904:	20000039 	.word	0x20000039
     908:	41004400 	.word	0x41004400

0000090c <cycle_pwm_motor>:



void cycle_pwm_motor (void)
{
     90c:	b510      	push	{r4, lr}
	{
		if (motor_running)
     90e:	4b16      	ldr	r3, [pc, #88]	; (968 <cycle_pwm_motor+0x5c>)
     910:	781b      	ldrb	r3, [r3, #0]
     912:	2b00      	cmp	r3, #0
     914:	d00a      	beq.n	92c <cycle_pwm_motor+0x20>
		{
			if (motor_toggle_count == 2)
     916:	4b15      	ldr	r3, [pc, #84]	; (96c <cycle_pwm_motor+0x60>)
     918:	781b      	ldrb	r3, [r3, #0]
     91a:	2b02      	cmp	r3, #2
     91c:	d107      	bne.n	92e <cycle_pwm_motor+0x22>
			{
				tc_set_compare_value (&pwm_generator_instance,
     91e:	2222      	movs	r2, #34	; 0x22
     920:	2100      	movs	r1, #0
     922:	4813      	ldr	r0, [pc, #76]	; (970 <cycle_pwm_motor+0x64>)
     924:	f001 fc1a 	bl	215c <tc_set_compare_value>
				TC_COMPARE_CAPTURE_CHANNEL_0, FIRST_DUTY_CYCLE);
				set_motor_speed_2_indication();
     928:	f001 fdaa 	bl	2480 <set_motor_speed_2_indication>
					motor_disable();
			}
		}
	}

}
     92c:	bd10      	pop	{r4, pc}
			else if (motor_toggle_count == 3)
     92e:	2b03      	cmp	r3, #3
     930:	d107      	bne.n	942 <cycle_pwm_motor+0x36>
				tc_set_compare_value (&pwm_generator_instance,
     932:	224d      	movs	r2, #77	; 0x4d
     934:	2100      	movs	r1, #0
     936:	480e      	ldr	r0, [pc, #56]	; (970 <cycle_pwm_motor+0x64>)
     938:	f001 fc10 	bl	215c <tc_set_compare_value>
				set_motor_speed_3_indication();
     93c:	f001 fdcc 	bl	24d8 <set_motor_speed_3_indication>
     940:	e7f4      	b.n	92c <cycle_pwm_motor+0x20>
			else if (motor_toggle_count == 4)
     942:	2b04      	cmp	r3, #4
     944:	d10a      	bne.n	95c <cycle_pwm_motor+0x50>
				pulsating_motor_routine = true;
     946:	2201      	movs	r2, #1
     948:	4b0a      	ldr	r3, [pc, #40]	; (974 <cycle_pwm_motor+0x68>)
				tc_set_compare_value (&pwm_generator_instance,
     94a:	2100      	movs	r1, #0
				pulsating_motor_routine = true;
     94c:	701a      	strb	r2, [r3, #0]
				tc_set_compare_value (&pwm_generator_instance,
     94e:	4808      	ldr	r0, [pc, #32]	; (970 <cycle_pwm_motor+0x64>)
     950:	324c      	adds	r2, #76	; 0x4c
     952:	f001 fc03 	bl	215c <tc_set_compare_value>
				set_motor_pulsating_indication();
     956:	f001 fdeb 	bl	2530 <set_motor_pulsating_indication>
     95a:	e7e7      	b.n	92c <cycle_pwm_motor+0x20>
			else if (motor_toggle_count > 4)
     95c:	2b04      	cmp	r3, #4
     95e:	d9e5      	bls.n	92c <cycle_pwm_motor+0x20>
					motor_disable();
     960:	f7ff ffac 	bl	8bc <motor_disable>
}
     964:	e7e2      	b.n	92c <cycle_pwm_motor+0x20>
     966:	46c0      	nop			; (mov r8, r8)
     968:	20000039 	.word	0x20000039
     96c:	20000008 	.word	0x20000008
     970:	200001d8 	.word	0x200001d8
     974:	2000003a 	.word	0x2000003a

00000978 <toggle_nsleep>:



 void toggle_nsleep(void){
	 static bool PULSATING_MOTOR = false;
	 if (pulsating_motor_routine){
     978:	4b08      	ldr	r3, [pc, #32]	; (99c <toggle_nsleep+0x24>)
     97a:	781b      	ldrb	r3, [r3, #0]
     97c:	2b00      	cmp	r3, #0
     97e:	d008      	beq.n	992 <toggle_nsleep+0x1a>
		 if (PULSATING_MOTOR){
     980:	4b07      	ldr	r3, [pc, #28]	; (9a0 <toggle_nsleep+0x28>)
     982:	4a08      	ldr	r2, [pc, #32]	; (9a4 <toggle_nsleep+0x2c>)
     984:	7818      	ldrb	r0, [r3, #0]
     986:	2140      	movs	r1, #64	; 0x40
     988:	2800      	cmp	r0, #0
     98a:	d003      	beq.n	994 <toggle_nsleep+0x1c>
     98c:	6151      	str	r1, [r2, #20]
			 port_pin_set_output_level(MOTOR_NSLEEP_PIN,LOW);
			 PULSATING_MOTOR = false;
     98e:	2200      	movs	r2, #0
     990:	701a      	strb	r2, [r3, #0]
			 }else{
			 PULSATING_MOTOR = true;
			 port_pin_set_output_level(MOTOR_NSLEEP_PIN,HIGH);
		 }
	 }
 }
     992:	4770      	bx	lr
			 PULSATING_MOTOR = true;
     994:	2001      	movs	r0, #1
     996:	7018      	strb	r0, [r3, #0]
		port_base->OUTSET.reg = pin_mask;
     998:	6191      	str	r1, [r2, #24]
 }
     99a:	e7fa      	b.n	992 <toggle_nsleep+0x1a>
     99c:	2000003a 	.word	0x2000003a
     9a0:	20000038 	.word	0x20000038
     9a4:	41004400 	.word	0x41004400

000009a8 <system_inactive>:
bool Vbus_State;
bool Chargn_On_State;
bool Chargn_Off_State;


 void system_inactive(void) {
     9a8:	b510      	push	{r4, lr}
	 motor_disable();							// shutdown PWM motor
     9aa:	f7ff ff87 	bl	8bc <motor_disable>
	 pwm_led_system_cleanup();					// shutdown illumination led
     9ae:	f7ff feb5 	bl	71c <pwm_led_system_cleanup>
	 pwm_led_toggle_count = 0;					// reset counter to start the routine from begginging
     9b2:	2200      	movs	r2, #0
     9b4:	4b01      	ldr	r3, [pc, #4]	; (9bc <system_inactive+0x14>)
     9b6:	701a      	strb	r2, [r3, #0]
 }
     9b8:	bd10      	pop	{r4, pc}
     9ba:	46c0      	nop			; (mov r8, r8)
     9bc:	20000037 	.word	0x20000037

000009c0 <regular_routine>:


void regular_routine(void) {
     9c0:	b510      	push	{r4, lr}
	static bool motor_status_changed = false;
	static bool led_button_status_changed = false;

	//-------------------------------------------------------------

	if (is_button_one_pressed()) {
     9c2:	f7ff fe59 	bl	678 <is_button_one_pressed>
     9c6:	2800      	cmp	r0, #0
     9c8:	d007      	beq.n	9da <regular_routine+0x1a>
		if (LongPressB1Flag) {
     9ca:	4c23      	ldr	r4, [pc, #140]	; (a58 <regular_routine+0x98>)
     9cc:	7823      	ldrb	r3, [r4, #0]
     9ce:	2b00      	cmp	r3, #0
     9d0:	d01e      	beq.n	a10 <regular_routine+0x50>
			system_inactive();
     9d2:	f7ff ffe9 	bl	9a8 <system_inactive>
			LongPressB1Flag = false;															// ALLOW IT TO CYCLE AGAIN
     9d6:	2300      	movs	r3, #0
     9d8:	7023      	strb	r3, [r4, #0]
				}
			}
		}
	}

	if (BUTTON_ONE_RELEASE_STATUS) {
     9da:	4b20      	ldr	r3, [pc, #128]	; (a5c <regular_routine+0x9c>)
     9dc:	781b      	ldrb	r3, [r3, #0]
     9de:	2b00      	cmp	r3, #0
     9e0:	d004      	beq.n	9ec <regular_routine+0x2c>
		motor_status_changed = false;
     9e2:	2300      	movs	r3, #0
     9e4:	4a1e      	ldr	r2, [pc, #120]	; (a60 <regular_routine+0xa0>)
     9e6:	7013      	strb	r3, [r2, #0]
		led_button_status_changed = false;
     9e8:	4a1e      	ldr	r2, [pc, #120]	; (a64 <regular_routine+0xa4>)
     9ea:	7013      	strb	r3, [r2, #0]
	//}
	//if (BUTTON_TWO_RELEASE_STATUS) {
		//led_button_status_changed = false;
	//}

	if (Vbus_State == false) {
     9ec:	4b1e      	ldr	r3, [pc, #120]	; (a68 <regular_routine+0xa8>)
     9ee:	781b      	ldrb	r3, [r3, #0]
     9f0:	2b00      	cmp	r3, #0
     9f2:	d00c      	beq.n	a0e <regular_routine+0x4e>
		;																						// Enable Motor PWM
		} else {
		
		if (motor_running){
     9f4:	4b1d      	ldr	r3, [pc, #116]	; (a6c <regular_routine+0xac>)
     9f6:	781b      	ldrb	r3, [r3, #0]
     9f8:	2b00      	cmp	r3, #0
     9fa:	d001      	beq.n	a00 <regular_routine+0x40>
			system_inactive();
     9fc:	f7ff ffd4 	bl	9a8 <system_inactive>
		}
		// ITS PLUGGED IN
		if (Chargn_On_State == false) {															// battery charging (plugged in)
     a00:	4b1b      	ldr	r3, [pc, #108]	; (a70 <regular_routine+0xb0>)
     a02:	781a      	ldrb	r2, [r3, #0]
     a04:	4b1b      	ldr	r3, [pc, #108]	; (a74 <regular_routine+0xb4>)
     a06:	2a00      	cmp	r2, #0
     a08:	d124      	bne.n	a54 <regular_routine+0x94>
			BATTERY_CHARGING = true;															// show battery charge routine
     a0a:	3201      	adds	r2, #1
			} else {
			BATTERY_CHARGING = false;
     a0c:	701a      	strb	r2, [r3, #0]
		}
		
	}
}
     a0e:	bd10      	pop	{r4, pc}
			if (!motor_status_changed && !led_button_status_changed) {
     a10:	4b13      	ldr	r3, [pc, #76]	; (a60 <regular_routine+0xa0>)
     a12:	781a      	ldrb	r2, [r3, #0]
     a14:	2a00      	cmp	r2, #0
     a16:	d1e0      	bne.n	9da <regular_routine+0x1a>
     a18:	4912      	ldr	r1, [pc, #72]	; (a64 <regular_routine+0xa4>)
     a1a:	780a      	ldrb	r2, [r1, #0]
     a1c:	2a00      	cmp	r2, #0
     a1e:	d1dc      	bne.n	9da <regular_routine+0x1a>
				led_button_status_changed = true;
     a20:	3201      	adds	r2, #1
				motor_status_changed = true;
     a22:	701a      	strb	r2, [r3, #0]
				led_button_status_changed = true;
     a24:	700a      	strb	r2, [r1, #0]
				pwm_led_toggle_count++;
     a26:	4a14      	ldr	r2, [pc, #80]	; (a78 <regular_routine+0xb8>)
				motor_toggle_count++;
     a28:	4c14      	ldr	r4, [pc, #80]	; (a7c <regular_routine+0xbc>)
				pwm_led_toggle_count++;
     a2a:	7813      	ldrb	r3, [r2, #0]
     a2c:	3301      	adds	r3, #1
     a2e:	7013      	strb	r3, [r2, #0]
				motor_toggle_count++;
     a30:	7823      	ldrb	r3, [r4, #0]
     a32:	3301      	adds	r3, #1
     a34:	7023      	strb	r3, [r4, #0]
				cycle_pwm_led();
     a36:	f7ff fee3 	bl	800 <cycle_pwm_led>
				if (!motor_running && motor_toggle_count == 1) {
     a3a:	4b0c      	ldr	r3, [pc, #48]	; (a6c <regular_routine+0xac>)
     a3c:	781b      	ldrb	r3, [r3, #0]
     a3e:	2b00      	cmp	r3, #0
     a40:	d105      	bne.n	a4e <regular_routine+0x8e>
     a42:	7823      	ldrb	r3, [r4, #0]
     a44:	2b01      	cmp	r3, #1
     a46:	d102      	bne.n	a4e <regular_routine+0x8e>
					motor_enable();
     a48:	f7ff ff1e 	bl	888 <motor_enable>
     a4c:	e7c5      	b.n	9da <regular_routine+0x1a>
					cycle_pwm_motor();
     a4e:	f7ff ff5d 	bl	90c <cycle_pwm_motor>
     a52:	e7c2      	b.n	9da <regular_routine+0x1a>
			BATTERY_CHARGING = false;
     a54:	2200      	movs	r2, #0
     a56:	e7d9      	b.n	a0c <regular_routine+0x4c>
     a58:	20000036 	.word	0x20000036
     a5c:	20000035 	.word	0x20000035
     a60:	20000040 	.word	0x20000040
     a64:	2000003f 	.word	0x2000003f
     a68:	200001f5 	.word	0x200001f5
     a6c:	20000039 	.word	0x20000039
     a70:	200001f6 	.word	0x200001f6
     a74:	2000003c 	.word	0x2000003c
     a78:	20000037 	.word	0x20000037
     a7c:	20000008 	.word	0x20000008

00000a80 <get_battery_level>:
		//
	//}
 //}


void get_battery_level(void) {
     a80:	b530      	push	{r4, r5, lr}

	if (!motor_running) {
     a82:	4b0f      	ldr	r3, [pc, #60]	; (ac0 <get_battery_level+0x40>)
     a84:	781b      	ldrb	r3, [r3, #0]
     a86:	2b00      	cmp	r3, #0
     a88:	d10b      	bne.n	aa2 <get_battery_level+0x22>
		if (adc_result <= VOLTAGE_THRESH_LOWEST) {
     a8a:	4a0e      	ldr	r2, [pc, #56]	; (ac4 <get_battery_level+0x44>)
     a8c:	4d0e      	ldr	r5, [pc, #56]	; (ac8 <get_battery_level+0x48>)
     a8e:	8814      	ldrh	r4, [r2, #0]
     a90:	480e      	ldr	r0, [pc, #56]	; (acc <get_battery_level+0x4c>)
     a92:	490f      	ldr	r1, [pc, #60]	; (ad0 <get_battery_level+0x50>)
     a94:	4a0f      	ldr	r2, [pc, #60]	; (ad4 <get_battery_level+0x54>)
     a96:	42ac      	cmp	r4, r5
     a98:	d804      	bhi.n	aa4 <get_battery_level+0x24>
			// LOWEST SITUATION
			BATTERY_LOWEST = true;
     a9a:	2401      	movs	r4, #1
			BATTERY_LOW = false;
     a9c:	700b      	strb	r3, [r1, #0]
			BATTERY_LOWEST = true;
     a9e:	7004      	strb	r4, [r0, #0]
		}
		else { // adc_result > VOLTAGE_THRESH_MAX
			// FULLY CHARGED SITUATION
			BATTERY_LOWEST = false;
			BATTERY_LOW = false;
			BATTERY_CHARGED = true;
     aa0:	7013      	strb	r3, [r2, #0]
		}
	}
}
     aa2:	bd30      	pop	{r4, r5, pc}
		else if (adc_result <= VOLTAGE_THRESH_LOW) { // Ensure adc_result > VOLTAGE_THRESH_LOWEST
     aa4:	4d0c      	ldr	r5, [pc, #48]	; (ad8 <get_battery_level+0x58>)
     aa6:	42ac      	cmp	r4, r5
     aa8:	d803      	bhi.n	ab2 <get_battery_level+0x32>
			BATTERY_LOWEST = false;
     aaa:	7003      	strb	r3, [r0, #0]
			BATTERY_LOW = true;
     aac:	2001      	movs	r0, #1
     aae:	7008      	strb	r0, [r1, #0]
     ab0:	e7f6      	b.n	aa0 <get_battery_level+0x20>
		else if (adc_result < VOLTAGE_THRESH_MAX) { // Ensure adc_result > VOLTAGE_THRESH_LOW
     ab2:	4d0a      	ldr	r5, [pc, #40]	; (adc <get_battery_level+0x5c>)
			BATTERY_LOWEST = false;
     ab4:	7003      	strb	r3, [r0, #0]
			BATTERY_LOW = false;
     ab6:	700b      	strb	r3, [r1, #0]
		else if (adc_result < VOLTAGE_THRESH_MAX) { // Ensure adc_result > VOLTAGE_THRESH_LOW
     ab8:	42ac      	cmp	r4, r5
     aba:	d9f1      	bls.n	aa0 <get_battery_level+0x20>
			BATTERY_CHARGED = true;
     abc:	2301      	movs	r3, #1
     abe:	e7ef      	b.n	aa0 <get_battery_level+0x20>
     ac0:	20000039 	.word	0x20000039
     ac4:	20000088 	.word	0x20000088
     ac8:	00000c7a 	.word	0x00000c7a
     acc:	2000003e 	.word	0x2000003e
     ad0:	2000003d 	.word	0x2000003d
     ad4:	2000003b 	.word	0x2000003b
     ad8:	00000d2c 	.word	0x00000d2c
     adc:	00000e8e 	.word	0x00000e8e

00000ae0 <system_logic>:
 /************************************************************************/
 /* LOGIC MACHINE		                                                */
 /************************************************************************/


 void system_logic(void) {
     ae0:	b510      	push	{r4, lr}
	 if (SYS_TICK_10MS) {
     ae2:	4b0b      	ldr	r3, [pc, #44]	; (b10 <system_logic+0x30>)
     ae4:	781a      	ldrb	r2, [r3, #0]
     ae6:	2a00      	cmp	r2, #0
     ae8:	d005      	beq.n	af6 <system_logic+0x16>
		 SYS_TICK_10MS = false;
     aea:	2200      	movs	r2, #0
     aec:	701a      	strb	r2, [r3, #0]
		 system_state();						// Get latest system_state
     aee:	f000 f987 	bl	e00 <system_state>
		 regular_routine();
     af2:	f7ff ff65 	bl	9c0 <regular_routine>
	 }
	 if (SYS_TICK_200MS) {
     af6:	4b07      	ldr	r3, [pc, #28]	; (b14 <system_logic+0x34>)
     af8:	781a      	ldrb	r2, [r3, #0]
     afa:	2a00      	cmp	r2, #0
     afc:	d007      	beq.n	b0e <system_logic+0x2e>
		 SYS_TICK_200MS = false;
     afe:	2200      	movs	r2, #0
     b00:	701a      	strb	r2, [r3, #0]
		 toggle_nsleep();
     b02:	f7ff ff39 	bl	978 <toggle_nsleep>
		 sample_adc();
     b06:	f7ff fb21 	bl	14c <sample_adc>
		 get_battery_level();
     b0a:	f7ff ffb9 	bl	a80 <get_battery_level>
	 }
     b0e:	bd10      	pop	{r4, pc}
     b10:	20000042 	.word	0x20000042
     b14:	20000043 	.word	0x20000043

00000b18 <sys_tc_callback>:
	static int tick_count_100ms;
	static int tick_count_200ms;
	//static int tick_count_500ms;
	//static int tick_count_1000ms;

	tick_count_1ms++;
     b18:	4919      	ldr	r1, [pc, #100]	; (b80 <sys_tc_callback+0x68>)
     b1a:	680b      	ldr	r3, [r1, #0]
     b1c:	1c5a      	adds	r2, r3, #1
     b1e:	600a      	str	r2, [r1, #0]
     b20:	4b18      	ldr	r3, [pc, #96]	; (b84 <sys_tc_callback+0x6c>)
	
	
	//port_pin_toggle_output_level (LED0_PIN);					// visually check sys clock on PA16
	
	// Check for 10ms interval
	if (tick_count_1ms >= 10)
     b22:	2a09      	cmp	r2, #9
     b24:	dd07      	ble.n	b36 <sys_tc_callback+0x1e>
	{
		tick_count_10ms++;
     b26:	681a      	ldr	r2, [r3, #0]
     b28:	3201      	adds	r2, #1
     b2a:	601a      	str	r2, [r3, #0]
		tick_count_1ms = 0;
     b2c:	2200      	movs	r2, #0
     b2e:	600a      	str	r2, [r1, #0]
		SYS_TICK_10MS = true;									// Flag for 10ms interval
     b30:	2101      	movs	r1, #1
     b32:	4a15      	ldr	r2, [pc, #84]	; (b88 <sys_tc_callback+0x70>)
     b34:	7011      	strb	r1, [r2, #0]
		//port_pin_toggle_output_level (LED0_PIN);				// visually check sys clock on PA16
	}
	
	// Check for 50ms interval
	if (tick_count_10ms >= 5)
     b36:	6819      	ldr	r1, [r3, #0]
     b38:	4a14      	ldr	r2, [pc, #80]	; (b8c <sys_tc_callback+0x74>)
     b3a:	2904      	cmp	r1, #4
     b3c:	dd07      	ble.n	b4e <sys_tc_callback+0x36>
	{
		tick_count_50ms++;
     b3e:	6811      	ldr	r1, [r2, #0]
     b40:	3101      	adds	r1, #1
     b42:	6011      	str	r1, [r2, #0]
		tick_count_10ms = 0;
     b44:	2100      	movs	r1, #0
     b46:	6019      	str	r1, [r3, #0]
		SYS_TICK_50MS = true;									// Flag for 50ms interval
     b48:	4b11      	ldr	r3, [pc, #68]	; (b90 <sys_tc_callback+0x78>)
     b4a:	3101      	adds	r1, #1
     b4c:	7019      	strb	r1, [r3, #0]
		//port_pin_toggle_output_level (LED0_PIN);				// visually check sys clock on PA16
	}
	
	// Check for 100ms interval
	if (tick_count_50ms >= 2)
     b4e:	6811      	ldr	r1, [r2, #0]
     b50:	4b10      	ldr	r3, [pc, #64]	; (b94 <sys_tc_callback+0x7c>)
     b52:	2901      	cmp	r1, #1
     b54:	dd07      	ble.n	b66 <sys_tc_callback+0x4e>
	{
		tick_count_100ms++;
     b56:	6819      	ldr	r1, [r3, #0]
     b58:	3101      	adds	r1, #1
     b5a:	6019      	str	r1, [r3, #0]
		tick_count_50ms = 0;
     b5c:	2100      	movs	r1, #0
     b5e:	6011      	str	r1, [r2, #0]
		SYS_TICK_100MS = true;									// Flag for 100ms interval
     b60:	4a0d      	ldr	r2, [pc, #52]	; (b98 <sys_tc_callback+0x80>)
     b62:	3101      	adds	r1, #1
     b64:	7011      	strb	r1, [r2, #0]
		//port_pin_toggle_output_level (LED0_PIN);				// visually check sys clock on PA16
	}
	
	
	// Check for 200ms interval
	if (tick_count_100ms >= 2)
     b66:	681a      	ldr	r2, [r3, #0]
     b68:	2a01      	cmp	r2, #1
     b6a:	dd08      	ble.n	b7e <sys_tc_callback+0x66>
	{
		tick_count_200ms++;
     b6c:	490b      	ldr	r1, [pc, #44]	; (b9c <sys_tc_callback+0x84>)
     b6e:	680a      	ldr	r2, [r1, #0]
     b70:	3201      	adds	r2, #1
     b72:	600a      	str	r2, [r1, #0]
		tick_count_100ms = 0;
     b74:	2200      	movs	r2, #0
     b76:	601a      	str	r2, [r3, #0]
		SYS_TICK_200MS = true;									// Flag for 200ms interval
     b78:	4b09      	ldr	r3, [pc, #36]	; (ba0 <sys_tc_callback+0x88>)
     b7a:	3201      	adds	r2, #1
     b7c:	701a      	strb	r2, [r3, #0]
		//tick_count_500ms = 0;
		//SYS_TICK_1000MS = true;                                 // Flag for 1000ms interval
		////port_pin_toggle_output_level (LED0_PIN);               // visually check sys clock on PA16
	//}
	
}
     b7e:	4770      	bx	lr
     b80:	20000050 	.word	0x20000050
     b84:	2000004c 	.word	0x2000004c
     b88:	20000042 	.word	0x20000042
     b8c:	20000058 	.word	0x20000058
     b90:	20000044 	.word	0x20000044
     b94:	20000048 	.word	0x20000048
     b98:	20000041 	.word	0x20000041
     b9c:	20000054 	.word	0x20000054
     ba0:	20000043 	.word	0x20000043

00000ba4 <extint_detection_callback>:
void extint_detection_callback(void)
{
	//motor_enable();
	//LED_Off(LED0_PIN);

}
     ba4:	4770      	bx	lr

00000ba6 <configure_port_pins>:
{
     ba6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	config->direction  = PORT_PIN_DIR_INPUT;
     ba8:	2600      	movs	r6, #0
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;
     baa:	2702      	movs	r7, #2
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     bac:	2501      	movs	r5, #1
     bae:	ac01      	add	r4, sp, #4
	port_pin_set_config(VBUS_PIN, &config_port_pin);
     bb0:	0021      	movs	r1, r4
     bb2:	201b      	movs	r0, #27
     bb4:	7026      	strb	r6, [r4, #0]
	config->powersave  = false;
     bb6:	70a6      	strb	r6, [r4, #2]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;
     bb8:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(VBUS_PIN, &config_port_pin);
     bba:	f000 f959 	bl	e70 <port_pin_set_config>
	port_pin_set_config(MOTOR_NSLEEP_PIN, &config_port_pin);
     bbe:	0021      	movs	r1, r4
     bc0:	2006      	movs	r0, #6
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     bc2:	7025      	strb	r5, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;							// START AT PULL DOWN.
     bc4:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(MOTOR_NSLEEP_PIN, &config_port_pin);
     bc6:	f000 f953 	bl	e70 <port_pin_set_config>
	port_pin_set_config(SWITCH_OFF_PIN, &config_port_pin);
     bca:	0021      	movs	r1, r4
     bcc:	2007      	movs	r0, #7
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     bce:	7025      	strb	r5, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_UP;								// START AT PULL UP.
     bd0:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(SWITCH_OFF_PIN, &config_port_pin);
     bd2:	f000 f94d 	bl	e70 <port_pin_set_config>
	port_pin_set_config(BUTTON_2, &config_port_pin);
     bd6:	0021      	movs	r1, r4
     bd8:	200f      	movs	r0, #15
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
     bda:	7026      	strb	r6, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_UP;							// START AT PULL DOWN.
     bdc:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_2, &config_port_pin);
     bde:	f000 f947 	bl	e70 <port_pin_set_config>
	port_pin_set_config(BAT_CHARGED_PIN, &config_port_pin);
     be2:	0021      	movs	r1, r4
     be4:	200b      	movs	r0, #11
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
     be6:	7026      	strb	r6, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;							// START AT PULL DOWN.
     be8:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(BAT_CHARGED_PIN, &config_port_pin);
     bea:	f000 f941 	bl	e70 <port_pin_set_config>
	port_pin_set_config(CHARGN_OFF_PIN, &config_port_pin);
     bee:	0021      	movs	r1, r4
     bf0:	2003      	movs	r0, #3
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     bf2:	7025      	strb	r5, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;							// START AT PULL DOWN.
     bf4:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(CHARGN_OFF_PIN, &config_port_pin);
     bf6:	f000 f93b 	bl	e70 <port_pin_set_config>
	port_pin_set_config(SAMPLE_ADC_PIN, &config_port_pin);
     bfa:	0038      	movs	r0, r7
     bfc:	0021      	movs	r1, r4
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
     bfe:	7026      	strb	r6, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_DOWN;							// START AT PULL DOWN.
     c00:	7067      	strb	r7, [r4, #1]
	port_pin_set_config(SAMPLE_ADC_PIN, &config_port_pin);
     c02:	f000 f935 	bl	e70 <port_pin_set_config>
	port_pin_set_config(XPLAINED_LED, &config_port_pin);
     c06:	0021      	movs	r1, r4
     c08:	2010      	movs	r0, #16
	config_port_pin.direction  = PORT_PIN_DIR_OUTPUT;
     c0a:	7025      	strb	r5, [r4, #0]
	port_pin_set_config(XPLAINED_LED, &config_port_pin);
     c0c:	f000 f930 	bl	e70 <port_pin_set_config>
	port_pin_set_config(BUTTON_1, &config_port_pin);
     c10:	0021      	movs	r1, r4
     c12:	200e      	movs	r0, #14
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
     c14:	7026      	strb	r6, [r4, #0]
	config_port_pin.input_pull = PORT_PIN_PULL_UP;
     c16:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_1, &config_port_pin);
     c18:	f000 f92a 	bl	e70 <port_pin_set_config>
}
     c1c:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
	...

00000c20 <configure_system_tc>:
	config->clock_source               = GCLK_GENERATOR_0;
     c20:	2300      	movs	r3, #0
 {
     c22:	b510      	push	{r4, lr}
     c24:	b08e      	sub	sp, #56	; 0x38
     c26:	aa01      	add	r2, sp, #4
	config->counter_16_bit.value                   = 0x0000;
     c28:	8513      	strh	r3, [r2, #40]	; 0x28
	config->clock_source               = GCLK_GENERATOR_0;
     c2a:	7013      	strb	r3, [r2, #0]
	config->wave_generation            = TC_WAVE_GENERATION_NORMAL_FREQ;
     c2c:	7193      	strb	r3, [r2, #6]
	config->reload_action              = TC_RELOAD_ACTION_GCLK;
     c2e:	8113      	strh	r3, [r2, #8]
	config->run_in_standby             = false;
     c30:	7053      	strb	r3, [r2, #1]
	config->waveform_invert_output     = TC_WAVEFORM_INVERT_OUTPUT_NONE;
     c32:	7293      	strb	r3, [r2, #10]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_0] = false;
     c34:	72d3      	strb	r3, [r2, #11]
	config->enable_capture_on_channel[TC_COMPARE_CAPTURE_CHANNEL_1] = false;
     c36:	7313      	strb	r3, [r2, #12]
	config->count_direction            = TC_COUNT_DIRECTION_UP;
     c38:	7393      	strb	r3, [r2, #14]
	config->oneshot                    = false;
     c3a:	7353      	strb	r3, [r2, #13]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_out = 0;
     c3c:	6153      	str	r3, [r2, #20]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].pin_mux = 0;
     c3e:	6193      	str	r3, [r2, #24]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].enabled = false;
     c40:	7713      	strb	r3, [r2, #28]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_out = 0;
     c42:	6213      	str	r3, [r2, #32]
	config->pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_1].pin_mux = 0;
     c44:	6253      	str	r3, [r2, #36]	; 0x24
		[TC_COMPARE_CAPTURE_CHANNEL_0]                        = 0x0000;
     c46:	8553      	strh	r3, [r2, #42]	; 0x2a
		[TC_COMPARE_CAPTURE_CHANNEL_1]                        = 0x0000;
     c48:	8593      	strh	r3, [r2, #44]	; 0x2c
	 config_tc.counter_size = TC_COUNTER_SIZE;
     c4a:	3304      	adds	r3, #4
     c4c:	7093      	strb	r3, [r2, #2]
	 config_tc.clock_prescaler = TC_CLOCK_PRESCALER;
     c4e:	23a0      	movs	r3, #160	; 0xa0
     c50:	00db      	lsls	r3, r3, #3
     c52:	8093      	strh	r3, [r2, #4]
	 config_tc.counter_8_bit.period = SYSTEM_TC_PERIOD_VALUE;
     c54:	232d      	movs	r3, #45	; 0x2d
     c56:	216f      	movs	r1, #111	; 0x6f
     c58:	446b      	add	r3, sp
     c5a:	7019      	strb	r1, [r3, #0]
	 config_tc.pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].enabled = true;
     c5c:	2301      	movs	r3, #1
	 tc_init (&system_timer_instance, SYSTEM_TC, &config_tc);
     c5e:	4c08      	ldr	r4, [pc, #32]	; (c80 <configure_system_tc+0x60>)
	 config_tc.pwm_channel[TC_COMPARE_CAPTURE_CHANNEL_0].enabled = true;
     c60:	7413      	strb	r3, [r2, #16]
	 tc_init (&system_timer_instance, SYSTEM_TC, &config_tc);
     c62:	4908      	ldr	r1, [pc, #32]	; (c84 <configure_system_tc+0x64>)
     c64:	0020      	movs	r0, r4
     c66:	f001 f965 	bl	1f34 <tc_init>
     c6a:	6823      	ldr	r3, [r4, #0]
	return (tc_module->STATUS.reg & TC_STATUS_SYNCBUSY);
     c6c:	7bda      	ldrb	r2, [r3, #15]
	while (tc_is_syncing(module_inst)) {
     c6e:	b252      	sxtb	r2, r2
     c70:	2a00      	cmp	r2, #0
     c72:	dbfb      	blt.n	c6c <configure_system_tc+0x4c>
	tc_module->CTRLA.reg |= TC_CTRLA_ENABLE;
     c74:	2202      	movs	r2, #2
     c76:	8819      	ldrh	r1, [r3, #0]
     c78:	430a      	orrs	r2, r1
     c7a:	801a      	strh	r2, [r3, #0]
 }
     c7c:	b00e      	add	sp, #56	; 0x38
     c7e:	bd10      	pop	{r4, pc}
     c80:	20000118 	.word	0x20000118
     c84:	42001800 	.word	0x42001800

00000c88 <system_tc_callbacks>:
{
     c88:	b510      	push	{r4, lr}
	tc_register_callback (&system_timer_instance, sys_tc_callback,
     c8a:	4c0c      	ldr	r4, [pc, #48]	; (cbc <system_tc_callbacks+0x34>)
     c8c:	2200      	movs	r2, #0
     c8e:	490c      	ldr	r1, [pc, #48]	; (cc0 <system_tc_callbacks+0x38>)
     c90:	0020      	movs	r0, r4
     c92:	f001 f8f2 	bl	1e7a <tc_register_callback>
	/* Sanity check arguments */
	Assert(module);


	/* Enable interrupts for this TC module */
	system_interrupt_enable(_tc_interrupt_get_interrupt_vector(_tc_get_inst_index(module->hw)));
     c96:	6820      	ldr	r0, [r4, #0]
     c98:	f001 f93a 	bl	1f10 <_tc_get_inst_index>
	return (enum system_interrupt_vector)tc_interrupt_vectors[inst_num];
     c9c:	4b09      	ldr	r3, [pc, #36]	; (cc4 <system_tc_callbacks+0x3c>)
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
     c9e:	5c1a      	ldrb	r2, [r3, r0]
     ca0:	231f      	movs	r3, #31
     ca2:	401a      	ands	r2, r3
     ca4:	3b1e      	subs	r3, #30
     ca6:	0019      	movs	r1, r3
     ca8:	4091      	lsls	r1, r2
     caa:	4a07      	ldr	r2, [pc, #28]	; (cc8 <system_tc_callbacks+0x40>)
     cac:	6011      	str	r1, [r2, #0]
	else if (callback_type == TC_CALLBACK_CC_CHANNEL1) {
		module->enable_callback_mask |= TC_INTFLAG_MC(2);
		module->hw->COUNT8.INTENSET.reg = TC_INTFLAG_MC(2);
	}
	else {
		module->enable_callback_mask |= (1 << callback_type);
     cae:	7e62      	ldrb	r2, [r4, #25]
     cb0:	431a      	orrs	r2, r3
     cb2:	7662      	strb	r2, [r4, #25]
		module->hw->COUNT8.INTENSET.reg = (1 << callback_type);
     cb4:	6822      	ldr	r2, [r4, #0]
     cb6:	7353      	strb	r3, [r2, #13]
}
     cb8:	bd10      	pop	{r4, pc}
     cba:	46c0      	nop			; (mov r8, r8)
     cbc:	20000118 	.word	0x20000118
     cc0:	00000b19 	.word	0x00000b19
     cc4:	0000284c 	.word	0x0000284c
     cc8:	e000e100 	.word	0xe000e100

00000ccc <configure_extint_channel>:
{
     ccc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	extint_chan_get_config_defaults(&config_extint_chan);
     cce:	ac01      	add	r4, sp, #4
     cd0:	0020      	movs	r0, r4
     cd2:	f7ff fc91 	bl	5f8 <extint_chan_get_config_defaults>
	config_extint_chan.gpio_pin           = PIN_PA15A_EIC_EXTINT1;
     cd6:	230f      	movs	r3, #15
     cd8:	9301      	str	r3, [sp, #4]
	config_extint_chan.gpio_pin_mux       = MUX_PA15A_EIC_EXTINT1;
     cda:	2300      	movs	r3, #0
	config_extint_chan.wake_if_sleeping   = true;
     cdc:	2001      	movs	r0, #1
	config_extint_chan.gpio_pin_mux       = MUX_PA15A_EIC_EXTINT1;
     cde:	6063      	str	r3, [r4, #4]
	extint_chan_set_config(BUTTON_0_EIC_LINE_custom, &config_extint_chan);
     ce0:	0021      	movs	r1, r4
	config_extint_chan.detection_criteria = EXTINT_DETECT_BOTH;
     ce2:	3303      	adds	r3, #3
	config_extint_chan.wake_if_sleeping   = true;
     ce4:	7260      	strb	r0, [r4, #9]
	config_extint_chan.gpio_pin_pull      = EXTINT_PULL_UP;
     ce6:	7220      	strb	r0, [r4, #8]
	config_extint_chan.detection_criteria = EXTINT_DETECT_BOTH;
     ce8:	72e3      	strb	r3, [r4, #11]
	extint_chan_set_config(BUTTON_0_EIC_LINE_custom, &config_extint_chan);
     cea:	f7ff fc8f 	bl	60c <extint_chan_set_config>
}
     cee:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00000cf0 <configure_extint_callbacks>:
{
     cf0:	b510      	push	{r4, lr}
	extint_register_callback(extint_detection_callback,
     cf2:	2200      	movs	r2, #0
     cf4:	2101      	movs	r1, #1
     cf6:	4804      	ldr	r0, [pc, #16]	; (d08 <configure_extint_callbacks+0x18>)
     cf8:	f7ff fbfa 	bl	4f0 <extint_register_callback>
	extint_chan_enable_callback(BUTTON_0_EIC_LINE_custom,
     cfc:	2100      	movs	r1, #0
     cfe:	2001      	movs	r0, #1
     d00:	f7ff fc0a 	bl	518 <extint_chan_enable_callback>
}
     d04:	bd10      	pop	{r4, pc}
     d06:	46c0      	nop			; (mov r8, r8)
     d08:	00000ba5 	.word	0x00000ba5

00000d0c <startup_default_pin_state>:
		port_base->OUTCLR.reg = pin_mask;
     d0c:	2240      	movs	r2, #64	; 0x40
     d0e:	4b07      	ldr	r3, [pc, #28]	; (d2c <startup_default_pin_state+0x20>)
     d10:	615a      	str	r2, [r3, #20]
		port_base->OUTSET.reg = pin_mask;
     d12:	1892      	adds	r2, r2, r2
     d14:	619a      	str	r2, [r3, #24]
		port_base->OUTCLR.reg = pin_mask;
     d16:	2280      	movs	r2, #128	; 0x80
     d18:	0212      	lsls	r2, r2, #8
     d1a:	615a      	str	r2, [r3, #20]
     d1c:	2280      	movs	r2, #128	; 0x80
     d1e:	0112      	lsls	r2, r2, #4
     d20:	615a      	str	r2, [r3, #20]
		port_base->OUTSET.reg = pin_mask;
     d22:	2208      	movs	r2, #8
     d24:	619a      	str	r2, [r3, #24]
		port_base->OUTCLR.reg = pin_mask;
     d26:	3a04      	subs	r2, #4
     d28:	615a      	str	r2, [r3, #20]
	 port_pin_set_output_level(SWITCH_OFF_PIN,HIGH); // at high rev 2
	 port_pin_set_output_level(BUTTON_2,LOW);
	 port_pin_set_output_level(BAT_CHARGED_PIN,LOW);
	 port_pin_set_output_level(CHARGN_OFF_PIN,HIGH);
	 port_pin_set_output_level(SAMPLE_ADC_PIN,LOW);
 }
     d2a:	4770      	bx	lr
     d2c:	41004400 	.word	0x41004400

00000d30 <startup_sys_configs>:


/************************************************************************/
/* SYSTEM startup function call (config functions)						*/
/************************************************************************/
void startup_sys_configs(void){
     d30:	b510      	push	{r4, lr}
	system_init();									// System Initialize
     d32:	f000 fe74 	bl	1a1e <system_init>
	cpu_irq_enable();
     d36:	2201      	movs	r2, #1
     d38:	4b0c      	ldr	r3, [pc, #48]	; (d6c <startup_sys_configs+0x3c>)
     d3a:	701a      	strb	r2, [r3, #0]
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     d3c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     d40:	b662      	cpsie	i
	system_interrupt_enable_global();				// System Interrupts
	configure_port_pins();							// System PORTs
     d42:	f7ff ff30 	bl	ba6 <configure_port_pins>
	startup_default_pin_state();
     d46:	f7ff ffe1 	bl	d0c <startup_default_pin_state>
	i2c_master_setup();								// Startup I2C
     d4a:	f001 fc3b 	bl	25c4 <i2c_master_setup>


	configure_system_tc();							// System Clock
     d4e:	f7ff ff67 	bl	c20 <configure_system_tc>
	system_tc_callbacks();							// System Clock Callback
     d52:	f7ff ff99 	bl	c88 <system_tc_callbacks>
	configure_pwm_tcc();							// Startup PWM
     d56:	f7ff fd11 	bl	77c <configure_pwm_tcc>
	configure_adc();
     d5a:	f7ff f9d5 	bl	108 <configure_adc>
	configure_pwm_generator();
     d5e:	f7ff fd63 	bl	828 <configure_pwm_generator>


	configure_extint_channel();
     d62:	f7ff ffb3 	bl	ccc <configure_extint_channel>
	configure_extint_callbacks();
     d66:	f7ff ffc3 	bl	cf0 <configure_extint_callbacks>
	extint_detection_callback();


     d6a:	bd10      	pop	{r4, pc}
     d6c:	20000009 	.word	0x20000009

00000d70 <update_battery_states>:
	return (port_base->IN.reg & pin_mask);
     d70:	2101      	movs	r1, #1
     d72:	4b06      	ldr	r3, [pc, #24]	; (d8c <update_battery_states+0x1c>)
#define CHARGED_STATE port_pin_get_input_level(BAT_CHARGED_PIN)
//#define CHARGN_OFF_STATE port_pin_get_input_level(CHARGN_OFF_PIN)


void update_battery_states(void) {
  Vbus_State = VBUS_STATE;
     d74:	4806      	ldr	r0, [pc, #24]	; (d90 <update_battery_states+0x20>)
     d76:	6a1a      	ldr	r2, [r3, #32]
     d78:	0ed2      	lsrs	r2, r2, #27
     d7a:	400a      	ands	r2, r1
     d7c:	7002      	strb	r2, [r0, #0]
     d7e:	6a1b      	ldr	r3, [r3, #32]
  Charged_State = CHARGED_STATE;
     d80:	4a04      	ldr	r2, [pc, #16]	; (d94 <update_battery_states+0x24>)
     d82:	0adb      	lsrs	r3, r3, #11
     d84:	400b      	ands	r3, r1
     d86:	7013      	strb	r3, [r2, #0]
}
     d88:	4770      	bx	lr
     d8a:	46c0      	nop			; (mov r8, r8)
     d8c:	41004400 	.word	0x41004400
     d90:	200001f5 	.word	0x200001f5
     d94:	200001f7 	.word	0x200001f7

00000d98 <display_battery_state>:

/************************************************************************/
/* Indication LED Control                                               */
/************************************************************************/

void display_battery_state(void) {
     d98:	b510      	push	{r4, lr}
  2. Steady red light when device has a low battery
  3. Blinking green light when device is charging
  4. Steady green light when the device is at least 100% charged.
  */

	if (Vbus_State) {
     d9a:	4b13      	ldr	r3, [pc, #76]	; (de8 <display_battery_state+0x50>)
     d9c:	781b      	ldrb	r3, [r3, #0]
     d9e:	2b00      	cmp	r3, #0
     da0:	d009      	beq.n	db6 <display_battery_state+0x1e>
	
		if (!Charged_State) {
     da2:	4b12      	ldr	r3, [pc, #72]	; (dec <display_battery_state+0x54>)
     da4:	781b      	ldrb	r3, [r3, #0]
     da6:	2b00      	cmp	r3, #0
     da8:	d102      	bne.n	db0 <display_battery_state+0x18>
			set_battery_charge_routine();						//  blink
     daa:	f001 faa9 	bl	2300 <set_battery_charge_routine>
					set_color_yellow_indication();			// ideal situation
					}	
		}else{
		}
	}
}
     dae:	bd10      	pop	{r4, pc}
			set_color_green_indication();
     db0:	f001 fa54 	bl	225c <set_color_green_indication>
     db4:	e7fb      	b.n	dae <display_battery_state+0x16>
		if (!motor_running){
     db6:	4b0e      	ldr	r3, [pc, #56]	; (df0 <display_battery_state+0x58>)
     db8:	781b      	ldrb	r3, [r3, #0]
     dba:	2b00      	cmp	r3, #0
     dbc:	d1f7      	bne.n	dae <display_battery_state+0x16>
				if (BATTERY_LOWEST) {
     dbe:	4b0d      	ldr	r3, [pc, #52]	; (df4 <display_battery_state+0x5c>)
     dc0:	781b      	ldrb	r3, [r3, #0]
     dc2:	2b00      	cmp	r3, #0
     dc4:	d002      	beq.n	dcc <display_battery_state+0x34>
					set_battery_low_routine();				//  blink
     dc6:	f001 fae5 	bl	2394 <set_battery_low_routine>
     dca:	e7f0      	b.n	dae <display_battery_state+0x16>
					} else if (BATTERY_LOW) {
     dcc:	4b0a      	ldr	r3, [pc, #40]	; (df8 <display_battery_state+0x60>)
     dce:	781b      	ldrb	r3, [r3, #0]
     dd0:	2b00      	cmp	r3, #0
     dd2:	d002      	beq.n	dda <display_battery_state+0x42>
					set_color_red_indication();
     dd4:	f001 fa5c 	bl	2290 <set_color_red_indication>
     dd8:	e7e9      	b.n	dae <display_battery_state+0x16>
					} else if (BATTERY_CHARGED) {
     dda:	4b08      	ldr	r3, [pc, #32]	; (dfc <display_battery_state+0x64>)
     ddc:	781b      	ldrb	r3, [r3, #0]
     dde:	2b00      	cmp	r3, #0
     de0:	d1e6      	bne.n	db0 <display_battery_state+0x18>
					set_color_yellow_indication();			// ideal situation
     de2:	f001 fa71 	bl	22c8 <set_color_yellow_indication>
}
     de6:	e7e2      	b.n	dae <display_battery_state+0x16>
     de8:	200001f5 	.word	0x200001f5
     dec:	200001f7 	.word	0x200001f7
     df0:	20000039 	.word	0x20000039
     df4:	2000003e 	.word	0x2000003e
     df8:	2000003d 	.word	0x2000003d
     dfc:	2000003b 	.word	0x2000003b

00000e00 <system_state>:

/************************************************************************/
/* STATE MACHINE		                                                */
/************************************************************************/

void system_state(void) {
     e00:	b510      	push	{r4, lr}
  update_battery_states();
     e02:	f7ff ffb5 	bl	d70 <update_battery_states>
  display_battery_state();
     e06:	f7ff ffc7 	bl	d98 <display_battery_state>
     e0a:	bd10      	pop	{r4, pc}

00000e0c <cpu_irq_enter_critical>:
     e0c:	4b09      	ldr	r3, [pc, #36]	; (e34 <cpu_irq_enter_critical+0x28>)
     e0e:	6819      	ldr	r1, [r3, #0]
     e10:	2900      	cmp	r1, #0
     e12:	d10b      	bne.n	e2c <cpu_irq_enter_critical+0x20>
     e14:	f3ef 8010 	mrs	r0, PRIMASK
     e18:	4a07      	ldr	r2, [pc, #28]	; (e38 <cpu_irq_enter_critical+0x2c>)
     e1a:	2800      	cmp	r0, #0
     e1c:	d105      	bne.n	e2a <cpu_irq_enter_critical+0x1e>
     e1e:	b672      	cpsid	i
     e20:	f3bf 8f5f 	dmb	sy
     e24:	4905      	ldr	r1, [pc, #20]	; (e3c <cpu_irq_enter_critical+0x30>)
     e26:	7008      	strb	r0, [r1, #0]
     e28:	2101      	movs	r1, #1
     e2a:	7011      	strb	r1, [r2, #0]
     e2c:	681a      	ldr	r2, [r3, #0]
     e2e:	3201      	adds	r2, #1
     e30:	601a      	str	r2, [r3, #0]
     e32:	4770      	bx	lr
     e34:	2000005c 	.word	0x2000005c
     e38:	20000060 	.word	0x20000060
     e3c:	20000009 	.word	0x20000009

00000e40 <cpu_irq_leave_critical>:
     e40:	4b08      	ldr	r3, [pc, #32]	; (e64 <cpu_irq_leave_critical+0x24>)
     e42:	681a      	ldr	r2, [r3, #0]
     e44:	3a01      	subs	r2, #1
     e46:	601a      	str	r2, [r3, #0]
     e48:	681b      	ldr	r3, [r3, #0]
     e4a:	2b00      	cmp	r3, #0
     e4c:	d109      	bne.n	e62 <cpu_irq_leave_critical+0x22>
     e4e:	4b06      	ldr	r3, [pc, #24]	; (e68 <cpu_irq_leave_critical+0x28>)
     e50:	781b      	ldrb	r3, [r3, #0]
     e52:	2b00      	cmp	r3, #0
     e54:	d005      	beq.n	e62 <cpu_irq_leave_critical+0x22>
     e56:	2201      	movs	r2, #1
     e58:	4b04      	ldr	r3, [pc, #16]	; (e6c <cpu_irq_leave_critical+0x2c>)
     e5a:	701a      	strb	r2, [r3, #0]
     e5c:	f3bf 8f5f 	dmb	sy
     e60:	b662      	cpsie	i
     e62:	4770      	bx	lr
     e64:	2000005c 	.word	0x2000005c
     e68:	20000060 	.word	0x20000060
     e6c:	20000009 	.word	0x20000009

00000e70 <port_pin_set_config>:
     e70:	b507      	push	{r0, r1, r2, lr}
     e72:	2280      	movs	r2, #128	; 0x80
     e74:	ab01      	add	r3, sp, #4
     e76:	701a      	strb	r2, [r3, #0]
     e78:	780a      	ldrb	r2, [r1, #0]
     e7a:	705a      	strb	r2, [r3, #1]
     e7c:	784a      	ldrb	r2, [r1, #1]
     e7e:	709a      	strb	r2, [r3, #2]
     e80:	788a      	ldrb	r2, [r1, #2]
     e82:	0019      	movs	r1, r3
     e84:	70da      	strb	r2, [r3, #3]
     e86:	f000 fdb5 	bl	19f4 <system_pinmux_pin_set_config>
     e8a:	bd07      	pop	{r0, r1, r2, pc}

00000e8c <_i2c_master_wait_for_sync>:
     e8c:	2307      	movs	r3, #7
     e8e:	6801      	ldr	r1, [r0, #0]
     e90:	69ca      	ldr	r2, [r1, #28]
     e92:	421a      	tst	r2, r3
     e94:	d1fc      	bne.n	e90 <_i2c_master_wait_for_sync+0x4>
     e96:	4770      	bx	lr

00000e98 <i2c_master_init>:
     e98:	b5f0      	push	{r4, r5, r6, r7, lr}
     e9a:	0005      	movs	r5, r0
     e9c:	b085      	sub	sp, #20
     e9e:	6029      	str	r1, [r5, #0]
     ea0:	0008      	movs	r0, r1
     ea2:	0014      	movs	r4, r2
     ea4:	000e      	movs	r6, r1
     ea6:	f000 faf7 	bl	1498 <_sercom_get_sercom_inst_index>
     eaa:	2701      	movs	r7, #1
     eac:	1c83      	adds	r3, r0, #2
     eae:	409f      	lsls	r7, r3
     eb0:	003b      	movs	r3, r7
     eb2:	4a5c      	ldr	r2, [pc, #368]	; (1024 <i2c_master_init+0x18c>)
     eb4:	300e      	adds	r0, #14
     eb6:	6a11      	ldr	r1, [r2, #32]
     eb8:	b2c7      	uxtb	r7, r0
     eba:	430b      	orrs	r3, r1
     ebc:	6213      	str	r3, [r2, #32]
     ebe:	7b23      	ldrb	r3, [r4, #12]
     ec0:	aa02      	add	r2, sp, #8
     ec2:	0011      	movs	r1, r2
     ec4:	0038      	movs	r0, r7
     ec6:	7013      	strb	r3, [r2, #0]
     ec8:	f000 fd32 	bl	1930 <system_gclk_chan_set_config>
     ecc:	0038      	movs	r0, r7
     ece:	f000 fcf3 	bl	18b8 <system_gclk_chan_enable>
     ed2:	7b20      	ldrb	r0, [r4, #12]
     ed4:	2100      	movs	r1, #0
     ed6:	f000 fa67 	bl	13a8 <sercom_set_gclk_generator>
     eda:	6833      	ldr	r3, [r6, #0]
     edc:	201c      	movs	r0, #28
     ede:	079b      	lsls	r3, r3, #30
     ee0:	d500      	bpl.n	ee4 <i2c_master_init+0x4c>
     ee2:	e09d      	b.n	1020 <i2c_master_init+0x188>
     ee4:	2201      	movs	r2, #1
     ee6:	6833      	ldr	r3, [r6, #0]
     ee8:	3817      	subs	r0, #23
     eea:	401a      	ands	r2, r3
     eec:	9200      	str	r2, [sp, #0]
     eee:	d000      	beq.n	ef2 <i2c_master_init+0x5a>
     ef0:	e096      	b.n	1020 <i2c_master_init+0x188>
     ef2:	6828      	ldr	r0, [r5, #0]
     ef4:	f000 fad0 	bl	1498 <_sercom_get_sercom_inst_index>
     ef8:	0007      	movs	r7, r0
     efa:	494b      	ldr	r1, [pc, #300]	; (1028 <i2c_master_init+0x190>)
     efc:	f000 faea 	bl	14d4 <_sercom_set_handler>
     f00:	4b4a      	ldr	r3, [pc, #296]	; (102c <i2c_master_init+0x194>)
     f02:	00bf      	lsls	r7, r7, #2
     f04:	50fd      	str	r5, [r7, r3]
     f06:	466b      	mov	r3, sp
     f08:	781b      	ldrb	r3, [r3, #0]
     f0a:	466a      	mov	r2, sp
     f0c:	762b      	strb	r3, [r5, #24]
     f0e:	466b      	mov	r3, sp
     f10:	781b      	ldrb	r3, [r3, #0]
     f12:	7812      	ldrb	r2, [r2, #0]
     f14:	766b      	strb	r3, [r5, #25]
     f16:	466b      	mov	r3, sp
     f18:	881b      	ldrh	r3, [r3, #0]
     f1a:	836b      	strh	r3, [r5, #26]
     f1c:	466b      	mov	r3, sp
     f1e:	881b      	ldrh	r3, [r3, #0]
     f20:	83ab      	strh	r3, [r5, #28]
     f22:	1dab      	adds	r3, r5, #6
     f24:	77da      	strb	r2, [r3, #31]
     f26:	9b00      	ldr	r3, [sp, #0]
     f28:	622b      	str	r3, [r5, #32]
     f2a:	2314      	movs	r3, #20
     f2c:	6033      	str	r3, [r6, #0]
     f2e:	682f      	ldr	r7, [r5, #0]
     f30:	ae03      	add	r6, sp, #12
     f32:	0038      	movs	r0, r7
     f34:	f000 fab0 	bl	1498 <_sercom_get_sercom_inst_index>
     f38:	2380      	movs	r3, #128	; 0x80
     f3a:	7033      	strb	r3, [r6, #0]
     f3c:	466b      	mov	r3, sp
     f3e:	781b      	ldrb	r3, [r3, #0]
     f40:	9001      	str	r0, [sp, #4]
     f42:	7073      	strb	r3, [r6, #1]
     f44:	2301      	movs	r3, #1
     f46:	70b3      	strb	r3, [r6, #2]
     f48:	466b      	mov	r3, sp
     f4a:	781b      	ldrb	r3, [r3, #0]
     f4c:	69e0      	ldr	r0, [r4, #28]
     f4e:	70f3      	strb	r3, [r6, #3]
     f50:	6a23      	ldr	r3, [r4, #32]
     f52:	9300      	str	r3, [sp, #0]
     f54:	2800      	cmp	r0, #0
     f56:	d103      	bne.n	f60 <i2c_master_init+0xc8>
     f58:	0001      	movs	r1, r0
     f5a:	0038      	movs	r0, r7
     f5c:	f000 fa42 	bl	13e4 <_sercom_get_default_pad>
     f60:	2302      	movs	r3, #2
     f62:	7030      	strb	r0, [r6, #0]
     f64:	0c00      	lsrs	r0, r0, #16
     f66:	b2c0      	uxtb	r0, r0
     f68:	0031      	movs	r1, r6
     f6a:	7073      	strb	r3, [r6, #1]
     f6c:	f000 fd42 	bl	19f4 <system_pinmux_pin_set_config>
     f70:	9b00      	ldr	r3, [sp, #0]
     f72:	2b00      	cmp	r3, #0
     f74:	d104      	bne.n	f80 <i2c_master_init+0xe8>
     f76:	2101      	movs	r1, #1
     f78:	0038      	movs	r0, r7
     f7a:	f000 fa33 	bl	13e4 <_sercom_get_default_pad>
     f7e:	9000      	str	r0, [sp, #0]
     f80:	466b      	mov	r3, sp
     f82:	781b      	ldrb	r3, [r3, #0]
     f84:	0031      	movs	r1, r6
     f86:	7033      	strb	r3, [r6, #0]
     f88:	2302      	movs	r3, #2
     f8a:	7073      	strb	r3, [r6, #1]
     f8c:	9b00      	ldr	r3, [sp, #0]
     f8e:	0c18      	lsrs	r0, r3, #16
     f90:	b2c0      	uxtb	r0, r0
     f92:	f000 fd2f 	bl	19f4 <system_pinmux_pin_set_config>
     f96:	8aa3      	ldrh	r3, [r4, #20]
     f98:	80eb      	strh	r3, [r5, #6]
     f9a:	8ae3      	ldrh	r3, [r4, #22]
     f9c:	812b      	strh	r3, [r5, #8]
     f9e:	7e22      	ldrb	r2, [r4, #24]
     fa0:	2380      	movs	r3, #128	; 0x80
     fa2:	2a00      	cmp	r2, #0
     fa4:	d106      	bne.n	fb4 <i2c_master_init+0x11c>
     fa6:	4b22      	ldr	r3, [pc, #136]	; (1030 <i2c_master_init+0x198>)
     fa8:	3202      	adds	r2, #2
     faa:	789b      	ldrb	r3, [r3, #2]
     fac:	4013      	ands	r3, r2
     fae:	1e5a      	subs	r2, r3, #1
     fb0:	4193      	sbcs	r3, r2
     fb2:	01db      	lsls	r3, r3, #7
     fb4:	68a1      	ldr	r1, [r4, #8]
     fb6:	6922      	ldr	r2, [r4, #16]
     fb8:	430a      	orrs	r2, r1
     fba:	4313      	orrs	r3, r2
     fbc:	1d62      	adds	r2, r4, #5
     fbe:	7fd2      	ldrb	r2, [r2, #31]
     fc0:	2a00      	cmp	r2, #0
     fc2:	d002      	beq.n	fca <i2c_master_init+0x132>
     fc4:	2280      	movs	r2, #128	; 0x80
     fc6:	05d2      	lsls	r2, r2, #23
     fc8:	4313      	orrs	r3, r2
     fca:	6aa2      	ldr	r2, [r4, #40]	; 0x28
     fcc:	4313      	orrs	r3, r2
     fce:	0022      	movs	r2, r4
     fd0:	322c      	adds	r2, #44	; 0x2c
     fd2:	7812      	ldrb	r2, [r2, #0]
     fd4:	2a00      	cmp	r2, #0
     fd6:	d103      	bne.n	fe0 <i2c_master_init+0x148>
     fd8:	2280      	movs	r2, #128	; 0x80
     fda:	0492      	lsls	r2, r2, #18
     fdc:	4291      	cmp	r1, r2
     fde:	d102      	bne.n	fe6 <i2c_master_init+0x14e>
     fe0:	2280      	movs	r2, #128	; 0x80
     fe2:	0512      	lsls	r2, r2, #20
     fe4:	4313      	orrs	r3, r2
     fe6:	0022      	movs	r2, r4
     fe8:	322d      	adds	r2, #45	; 0x2d
     fea:	7812      	ldrb	r2, [r2, #0]
     fec:	2a00      	cmp	r2, #0
     fee:	d002      	beq.n	ff6 <i2c_master_init+0x15e>
     ff0:	2280      	movs	r2, #128	; 0x80
     ff2:	0412      	lsls	r2, r2, #16
     ff4:	4313      	orrs	r3, r2
     ff6:	342e      	adds	r4, #46	; 0x2e
     ff8:	7822      	ldrb	r2, [r4, #0]
     ffa:	2a00      	cmp	r2, #0
     ffc:	d002      	beq.n	1004 <i2c_master_init+0x16c>
     ffe:	2280      	movs	r2, #128	; 0x80
    1000:	03d2      	lsls	r2, r2, #15
    1002:	4313      	orrs	r3, r2
    1004:	683a      	ldr	r2, [r7, #0]
    1006:	9801      	ldr	r0, [sp, #4]
    1008:	4313      	orrs	r3, r2
    100a:	603b      	str	r3, [r7, #0]
    100c:	2380      	movs	r3, #128	; 0x80
    100e:	300e      	adds	r0, #14
    1010:	005b      	lsls	r3, r3, #1
    1012:	607b      	str	r3, [r7, #4]
    1014:	b2c0      	uxtb	r0, r0
    1016:	f000 fc97 	bl	1948 <system_gclk_chan_get_hz>
    101a:	2323      	movs	r3, #35	; 0x23
    101c:	2000      	movs	r0, #0
    101e:	60fb      	str	r3, [r7, #12]
    1020:	b005      	add	sp, #20
    1022:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1024:	40000400 	.word	0x40000400
    1028:	00001229 	.word	0x00001229
    102c:	200001f8 	.word	0x200001f8
    1030:	41002000 	.word	0x41002000

00001034 <_i2c_master_address_response>:
    1034:	2202      	movs	r2, #2
    1036:	6803      	ldr	r3, [r0, #0]
    1038:	7e19      	ldrb	r1, [r3, #24]
    103a:	4211      	tst	r1, r2
    103c:	d006      	beq.n	104c <_i2c_master_address_response+0x18>
    103e:	761a      	strb	r2, [r3, #24]
    1040:	8b5b      	ldrh	r3, [r3, #26]
    1042:	2041      	movs	r0, #65	; 0x41
    1044:	4213      	tst	r3, r2
    1046:	d10a      	bne.n	105e <_i2c_master_address_response+0x2a>
    1048:	2000      	movs	r0, #0
    104a:	e008      	b.n	105e <_i2c_master_address_response+0x2a>
    104c:	8b5a      	ldrh	r2, [r3, #26]
    104e:	0752      	lsls	r2, r2, #29
    1050:	d5fa      	bpl.n	1048 <_i2c_master_address_response+0x14>
    1052:	22c0      	movs	r2, #192	; 0xc0
    1054:	2018      	movs	r0, #24
    1056:	6859      	ldr	r1, [r3, #4]
    1058:	0292      	lsls	r2, r2, #10
    105a:	430a      	orrs	r2, r1
    105c:	605a      	str	r2, [r3, #4]
    105e:	4770      	bx	lr

00001060 <_i2c_master_wait_for_bus>:
    1060:	b570      	push	{r4, r5, r6, lr}
    1062:	2200      	movs	r2, #0
    1064:	2601      	movs	r6, #1
    1066:	2402      	movs	r4, #2
    1068:	6801      	ldr	r1, [r0, #0]
    106a:	7e0b      	ldrb	r3, [r1, #24]
    106c:	4033      	ands	r3, r6
    106e:	d102      	bne.n	1076 <_i2c_master_wait_for_bus+0x16>
    1070:	7e0d      	ldrb	r5, [r1, #24]
    1072:	4225      	tst	r5, r4
    1074:	d001      	beq.n	107a <_i2c_master_wait_for_bus+0x1a>
    1076:	2000      	movs	r0, #0
    1078:	e005      	b.n	1086 <_i2c_master_wait_for_bus+0x26>
    107a:	3201      	adds	r2, #1
    107c:	8903      	ldrh	r3, [r0, #8]
    107e:	b292      	uxth	r2, r2
    1080:	4293      	cmp	r3, r2
    1082:	d8f2      	bhi.n	106a <_i2c_master_wait_for_bus+0xa>
    1084:	2012      	movs	r0, #18
    1086:	bd70      	pop	{r4, r5, r6, pc}

00001088 <_i2c_master_send_hs_master_code>:
    1088:	2380      	movs	r3, #128	; 0x80
    108a:	b510      	push	{r4, lr}
    108c:	6804      	ldr	r4, [r0, #0]
    108e:	02db      	lsls	r3, r3, #11
    1090:	6862      	ldr	r2, [r4, #4]
    1092:	4313      	orrs	r3, r2
    1094:	6063      	str	r3, [r4, #4]
    1096:	6261      	str	r1, [r4, #36]	; 0x24
    1098:	f7ff ffe2 	bl	1060 <_i2c_master_wait_for_bus>
    109c:	2301      	movs	r3, #1
    109e:	7623      	strb	r3, [r4, #24]
    10a0:	bd10      	pop	{r4, pc}
	...

000010a4 <_i2c_master_write_packet>:
    10a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    10a6:	000f      	movs	r7, r1
    10a8:	884b      	ldrh	r3, [r1, #2]
    10aa:	0005      	movs	r5, r0
    10ac:	9301      	str	r3, [sp, #4]
    10ae:	6804      	ldr	r4, [r0, #0]
    10b0:	f7ff feec 	bl	e8c <_i2c_master_wait_for_sync>
    10b4:	7a7b      	ldrb	r3, [r7, #9]
    10b6:	2b00      	cmp	r3, #0
    10b8:	d003      	beq.n	10c2 <_i2c_master_write_packet+0x1e>
    10ba:	7ab9      	ldrb	r1, [r7, #10]
    10bc:	0028      	movs	r0, r5
    10be:	f7ff ffe3 	bl	1088 <_i2c_master_send_hs_master_code>
    10c2:	6863      	ldr	r3, [r4, #4]
    10c4:	4a24      	ldr	r2, [pc, #144]	; (1158 <_i2c_master_write_packet+0xb4>)
    10c6:	4013      	ands	r3, r2
    10c8:	6063      	str	r3, [r4, #4]
    10ca:	7a7a      	ldrb	r2, [r7, #9]
    10cc:	883b      	ldrh	r3, [r7, #0]
    10ce:	7a39      	ldrb	r1, [r7, #8]
    10d0:	005b      	lsls	r3, r3, #1
    10d2:	0392      	lsls	r2, r2, #14
    10d4:	4313      	orrs	r3, r2
    10d6:	2900      	cmp	r1, #0
    10d8:	d002      	beq.n	10e0 <_i2c_master_write_packet+0x3c>
    10da:	2280      	movs	r2, #128	; 0x80
    10dc:	0212      	lsls	r2, r2, #8
    10de:	4313      	orrs	r3, r2
    10e0:	6263      	str	r3, [r4, #36]	; 0x24
    10e2:	0028      	movs	r0, r5
    10e4:	f7ff ffbc 	bl	1060 <_i2c_master_wait_for_bus>
    10e8:	1e06      	subs	r6, r0, #0
    10ea:	d115      	bne.n	1118 <_i2c_master_write_packet+0x74>
    10ec:	0028      	movs	r0, r5
    10ee:	f7ff ffa1 	bl	1034 <_i2c_master_address_response>
    10f2:	1e06      	subs	r6, r0, #0
    10f4:	d110      	bne.n	1118 <_i2c_master_write_packet+0x74>
    10f6:	9000      	str	r0, [sp, #0]
    10f8:	9b00      	ldr	r3, [sp, #0]
    10fa:	9a01      	ldr	r2, [sp, #4]
    10fc:	4293      	cmp	r3, r2
    10fe:	d10d      	bne.n	111c <_i2c_master_write_packet+0x78>
    1100:	2600      	movs	r6, #0
    1102:	7aab      	ldrb	r3, [r5, #10]
    1104:	2b00      	cmp	r3, #0
    1106:	d007      	beq.n	1118 <_i2c_master_write_packet+0x74>
    1108:	0028      	movs	r0, r5
    110a:	f7ff febf 	bl	e8c <_i2c_master_wait_for_sync>
    110e:	23c0      	movs	r3, #192	; 0xc0
    1110:	6862      	ldr	r2, [r4, #4]
    1112:	029b      	lsls	r3, r3, #10
    1114:	4313      	orrs	r3, r2
    1116:	6063      	str	r3, [r4, #4]
    1118:	0030      	movs	r0, r6
    111a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    111c:	2220      	movs	r2, #32
    111e:	8b63      	ldrh	r3, [r4, #26]
    1120:	4213      	tst	r3, r2
    1122:	d016      	beq.n	1152 <_i2c_master_write_packet+0xae>
    1124:	0028      	movs	r0, r5
    1126:	f7ff feb1 	bl	e8c <_i2c_master_wait_for_sync>
    112a:	687b      	ldr	r3, [r7, #4]
    112c:	9a00      	ldr	r2, [sp, #0]
    112e:	0028      	movs	r0, r5
    1130:	5c9a      	ldrb	r2, [r3, r2]
    1132:	0023      	movs	r3, r4
    1134:	3328      	adds	r3, #40	; 0x28
    1136:	701a      	strb	r2, [r3, #0]
    1138:	f7ff ff92 	bl	1060 <_i2c_master_wait_for_bus>
    113c:	1e06      	subs	r6, r0, #0
    113e:	d1e0      	bne.n	1102 <_i2c_master_write_packet+0x5e>
    1140:	9a00      	ldr	r2, [sp, #0]
    1142:	8b63      	ldrh	r3, [r4, #26]
    1144:	3201      	adds	r2, #1
    1146:	9200      	str	r2, [sp, #0]
    1148:	2204      	movs	r2, #4
    114a:	4213      	tst	r3, r2
    114c:	d0d4      	beq.n	10f8 <_i2c_master_write_packet+0x54>
    114e:	261e      	movs	r6, #30
    1150:	e7d7      	b.n	1102 <_i2c_master_write_packet+0x5e>
    1152:	2641      	movs	r6, #65	; 0x41
    1154:	e7e0      	b.n	1118 <_i2c_master_write_packet+0x74>
    1156:	46c0      	nop			; (mov r8, r8)
    1158:	fffbffff 	.word	0xfffbffff

0000115c <i2c_master_write_packet_wait>:
    115c:	b510      	push	{r4, lr}
    115e:	8b82      	ldrh	r2, [r0, #28]
    1160:	0003      	movs	r3, r0
    1162:	2005      	movs	r0, #5
    1164:	2a00      	cmp	r2, #0
    1166:	d105      	bne.n	1174 <i2c_master_write_packet_wait+0x18>
    1168:	3201      	adds	r2, #1
    116a:	729a      	strb	r2, [r3, #10]
    116c:	72da      	strb	r2, [r3, #11]
    116e:	0018      	movs	r0, r3
    1170:	f7ff ff98 	bl	10a4 <_i2c_master_write_packet>
    1174:	bd10      	pop	{r4, pc}

00001176 <_i2c_master_wait_for_sync>:
    1176:	2307      	movs	r3, #7
    1178:	6801      	ldr	r1, [r0, #0]
    117a:	69ca      	ldr	r2, [r1, #28]
    117c:	421a      	tst	r2, r3
    117e:	d1fc      	bne.n	117a <_i2c_master_wait_for_sync+0x4>
    1180:	4770      	bx	lr

00001182 <_i2c_master_read>:
    1182:	b570      	push	{r4, r5, r6, lr}
    1184:	6805      	ldr	r5, [r0, #0]
    1186:	0004      	movs	r4, r0
    1188:	682a      	ldr	r2, [r5, #0]
    118a:	8b46      	ldrh	r6, [r0, #26]
    118c:	8b83      	ldrh	r3, [r0, #28]
    118e:	1af6      	subs	r6, r6, r3
    1190:	8b83      	ldrh	r3, [r0, #28]
    1192:	b2b6      	uxth	r6, r6
    1194:	3b01      	subs	r3, #1
    1196:	b29b      	uxth	r3, r3
    1198:	8383      	strh	r3, [r0, #28]
    119a:	7ac3      	ldrb	r3, [r0, #11]
    119c:	0112      	lsls	r2, r2, #4
    119e:	d50a      	bpl.n	11b6 <_i2c_master_read+0x34>
    11a0:	2b00      	cmp	r3, #0
    11a2:	d00d      	beq.n	11c0 <_i2c_master_read+0x3e>
    11a4:	8b83      	ldrh	r3, [r0, #28]
    11a6:	2b01      	cmp	r3, #1
    11a8:	d10a      	bne.n	11c0 <_i2c_master_read+0x3e>
    11aa:	2380      	movs	r3, #128	; 0x80
    11ac:	686a      	ldr	r2, [r5, #4]
    11ae:	02db      	lsls	r3, r3, #11
    11b0:	4313      	orrs	r3, r2
    11b2:	606b      	str	r3, [r5, #4]
    11b4:	e004      	b.n	11c0 <_i2c_master_read+0x3e>
    11b6:	2b00      	cmp	r3, #0
    11b8:	d002      	beq.n	11c0 <_i2c_master_read+0x3e>
    11ba:	8b83      	ldrh	r3, [r0, #28]
    11bc:	2b00      	cmp	r3, #0
    11be:	d0f4      	beq.n	11aa <_i2c_master_read+0x28>
    11c0:	8ba3      	ldrh	r3, [r4, #28]
    11c2:	2b00      	cmp	r3, #0
    11c4:	d10a      	bne.n	11dc <_i2c_master_read+0x5a>
    11c6:	7aa3      	ldrb	r3, [r4, #10]
    11c8:	2b00      	cmp	r3, #0
    11ca:	d007      	beq.n	11dc <_i2c_master_read+0x5a>
    11cc:	0020      	movs	r0, r4
    11ce:	f7ff ffd2 	bl	1176 <_i2c_master_wait_for_sync>
    11d2:	23c0      	movs	r3, #192	; 0xc0
    11d4:	686a      	ldr	r2, [r5, #4]
    11d6:	029b      	lsls	r3, r3, #10
    11d8:	4313      	orrs	r3, r2
    11da:	606b      	str	r3, [r5, #4]
    11dc:	0020      	movs	r0, r4
    11de:	f7ff ffca 	bl	1176 <_i2c_master_wait_for_sync>
    11e2:	6a23      	ldr	r3, [r4, #32]
    11e4:	3528      	adds	r5, #40	; 0x28
    11e6:	199e      	adds	r6, r3, r6
    11e8:	782b      	ldrb	r3, [r5, #0]
    11ea:	b2db      	uxtb	r3, r3
    11ec:	7033      	strb	r3, [r6, #0]
    11ee:	bd70      	pop	{r4, r5, r6, pc}

000011f0 <_i2c_master_write>:
    11f0:	b570      	push	{r4, r5, r6, lr}
    11f2:	6806      	ldr	r6, [r0, #0]
    11f4:	0004      	movs	r4, r0
    11f6:	8b73      	ldrh	r3, [r6, #26]
    11f8:	075b      	lsls	r3, r3, #29
    11fa:	d503      	bpl.n	1204 <_i2c_master_write+0x14>
    11fc:	231e      	movs	r3, #30
    11fe:	3406      	adds	r4, #6
    1200:	77e3      	strb	r3, [r4, #31]
    1202:	bd70      	pop	{r4, r5, r6, pc}
    1204:	8b45      	ldrh	r5, [r0, #26]
    1206:	8b83      	ldrh	r3, [r0, #28]
    1208:	3628      	adds	r6, #40	; 0x28
    120a:	1aed      	subs	r5, r5, r3
    120c:	8b83      	ldrh	r3, [r0, #28]
    120e:	b2ad      	uxth	r5, r5
    1210:	3b01      	subs	r3, #1
    1212:	b29b      	uxth	r3, r3
    1214:	8383      	strh	r3, [r0, #28]
    1216:	f7ff ffae 	bl	1176 <_i2c_master_wait_for_sync>
    121a:	6a23      	ldr	r3, [r4, #32]
    121c:	195d      	adds	r5, r3, r5
    121e:	782b      	ldrb	r3, [r5, #0]
    1220:	b2db      	uxtb	r3, r3
    1222:	7033      	strb	r3, [r6, #0]
    1224:	e7ed      	b.n	1202 <_i2c_master_write+0x12>
	...

00001228 <_i2c_master_interrupt_handler>:
    1228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    122a:	4b5e      	ldr	r3, [pc, #376]	; (13a4 <_i2c_master_interrupt_handler+0x17c>)
    122c:	0080      	lsls	r0, r0, #2
    122e:	58c4      	ldr	r4, [r0, r3]
    1230:	6825      	ldr	r5, [r4, #0]
    1232:	1da6      	adds	r6, r4, #6
    1234:	682b      	ldr	r3, [r5, #0]
    1236:	7e62      	ldrb	r2, [r4, #25]
    1238:	7e27      	ldrb	r7, [r4, #24]
    123a:	011b      	lsls	r3, r3, #4
    123c:	4017      	ands	r7, r2
    123e:	8b62      	ldrh	r2, [r4, #26]
    1240:	0fdb      	lsrs	r3, r3, #31
    1242:	2a00      	cmp	r2, #0
    1244:	d12e      	bne.n	12a4 <_i2c_master_interrupt_handler+0x7c>
    1246:	8ba2      	ldrh	r2, [r4, #28]
    1248:	2a00      	cmp	r2, #0
    124a:	d02b      	beq.n	12a4 <_i2c_master_interrupt_handler+0x7c>
    124c:	2301      	movs	r3, #1
    124e:	7e2a      	ldrb	r2, [r5, #24]
    1250:	421a      	tst	r2, r3
    1252:	d006      	beq.n	1262 <_i2c_master_interrupt_handler+0x3a>
    1254:	2202      	movs	r2, #2
    1256:	762b      	strb	r3, [r5, #24]
    1258:	8b6b      	ldrh	r3, [r5, #26]
    125a:	4013      	ands	r3, r2
    125c:	d010      	beq.n	1280 <_i2c_master_interrupt_handler+0x58>
    125e:	2341      	movs	r3, #65	; 0x41
    1260:	77f3      	strb	r3, [r6, #31]
    1262:	8ba3      	ldrh	r3, [r4, #28]
    1264:	b29b      	uxth	r3, r3
    1266:	8363      	strh	r3, [r4, #26]
    1268:	7ff3      	ldrb	r3, [r6, #31]
    126a:	2b05      	cmp	r3, #5
    126c:	d13c      	bne.n	12e8 <_i2c_master_interrupt_handler+0xc0>
    126e:	1d63      	adds	r3, r4, #5
    1270:	7fdb      	ldrb	r3, [r3, #31]
    1272:	0020      	movs	r0, r4
    1274:	2b00      	cmp	r3, #0
    1276:	d000      	beq.n	127a <_i2c_master_interrupt_handler+0x52>
    1278:	e08a      	b.n	1390 <_i2c_master_interrupt_handler+0x168>
    127a:	f7ff ffb9 	bl	11f0 <_i2c_master_write>
    127e:	e033      	b.n	12e8 <_i2c_master_interrupt_handler+0xc0>
    1280:	8b6a      	ldrh	r2, [r5, #26]
    1282:	0752      	lsls	r2, r2, #29
    1284:	d5ed      	bpl.n	1262 <_i2c_master_interrupt_handler+0x3a>
    1286:	2218      	movs	r2, #24
    1288:	77f2      	strb	r2, [r6, #31]
    128a:	83a3      	strh	r3, [r4, #28]
    128c:	7aa3      	ldrb	r3, [r4, #10]
    128e:	2b00      	cmp	r3, #0
    1290:	d0e7      	beq.n	1262 <_i2c_master_interrupt_handler+0x3a>
    1292:	0020      	movs	r0, r4
    1294:	f7ff ff6f 	bl	1176 <_i2c_master_wait_for_sync>
    1298:	23c0      	movs	r3, #192	; 0xc0
    129a:	686a      	ldr	r2, [r5, #4]
    129c:	029b      	lsls	r3, r3, #10
    129e:	4313      	orrs	r3, r2
    12a0:	606b      	str	r3, [r5, #4]
    12a2:	e7de      	b.n	1262 <_i2c_master_interrupt_handler+0x3a>
    12a4:	8b62      	ldrh	r2, [r4, #26]
    12a6:	2a00      	cmp	r2, #0
    12a8:	d05f      	beq.n	136a <_i2c_master_interrupt_handler+0x142>
    12aa:	8ba2      	ldrh	r2, [r4, #28]
    12ac:	2a00      	cmp	r2, #0
    12ae:	d15c      	bne.n	136a <_i2c_master_interrupt_handler+0x142>
    12b0:	7ff2      	ldrb	r2, [r6, #31]
    12b2:	2a05      	cmp	r2, #5
    12b4:	d159      	bne.n	136a <_i2c_master_interrupt_handler+0x142>
    12b6:	1d62      	adds	r2, r4, #5
    12b8:	7fd2      	ldrb	r2, [r2, #31]
    12ba:	b2d2      	uxtb	r2, r2
    12bc:	2a00      	cmp	r2, #0
    12be:	d154      	bne.n	136a <_i2c_master_interrupt_handler+0x142>
    12c0:	2303      	movs	r3, #3
    12c2:	752b      	strb	r3, [r5, #20]
    12c4:	8362      	strh	r2, [r4, #26]
    12c6:	77f2      	strb	r2, [r6, #31]
    12c8:	7aa3      	ldrb	r3, [r4, #10]
    12ca:	2b00      	cmp	r3, #0
    12cc:	d04a      	beq.n	1364 <_i2c_master_interrupt_handler+0x13c>
    12ce:	0020      	movs	r0, r4
    12d0:	f7ff ff51 	bl	1176 <_i2c_master_wait_for_sync>
    12d4:	23c0      	movs	r3, #192	; 0xc0
    12d6:	686a      	ldr	r2, [r5, #4]
    12d8:	029b      	lsls	r3, r3, #10
    12da:	4313      	orrs	r3, r2
    12dc:	606b      	str	r3, [r5, #4]
    12de:	07fb      	lsls	r3, r7, #31
    12e0:	d502      	bpl.n	12e8 <_i2c_master_interrupt_handler+0xc0>
    12e2:	68e3      	ldr	r3, [r4, #12]
    12e4:	0020      	movs	r0, r4
    12e6:	4798      	blx	r3
    12e8:	8b63      	ldrh	r3, [r4, #26]
    12ea:	2b00      	cmp	r3, #0
    12ec:	d01b      	beq.n	1326 <_i2c_master_interrupt_handler+0xfe>
    12ee:	8ba3      	ldrh	r3, [r4, #28]
    12f0:	2b00      	cmp	r3, #0
    12f2:	d118      	bne.n	1326 <_i2c_master_interrupt_handler+0xfe>
    12f4:	7ff3      	ldrb	r3, [r6, #31]
    12f6:	2b05      	cmp	r3, #5
    12f8:	d115      	bne.n	1326 <_i2c_master_interrupt_handler+0xfe>
    12fa:	1d63      	adds	r3, r4, #5
    12fc:	7fda      	ldrb	r2, [r3, #31]
    12fe:	2a01      	cmp	r2, #1
    1300:	d111      	bne.n	1326 <_i2c_master_interrupt_handler+0xfe>
    1302:	7e29      	ldrb	r1, [r5, #24]
    1304:	3201      	adds	r2, #1
    1306:	4211      	tst	r1, r2
    1308:	d000      	beq.n	130c <_i2c_master_interrupt_handler+0xe4>
    130a:	762a      	strb	r2, [r5, #24]
    130c:	2203      	movs	r2, #3
    130e:	752a      	strb	r2, [r5, #20]
    1310:	2200      	movs	r2, #0
    1312:	8362      	strh	r2, [r4, #26]
    1314:	77f2      	strb	r2, [r6, #31]
    1316:	07ba      	lsls	r2, r7, #30
    1318:	d53d      	bpl.n	1396 <_i2c_master_interrupt_handler+0x16e>
    131a:	7fda      	ldrb	r2, [r3, #31]
    131c:	2a01      	cmp	r2, #1
    131e:	d13a      	bne.n	1396 <_i2c_master_interrupt_handler+0x16e>
    1320:	6923      	ldr	r3, [r4, #16]
    1322:	0020      	movs	r0, r4
    1324:	4798      	blx	r3
    1326:	7ff3      	ldrb	r3, [r6, #31]
    1328:	2b05      	cmp	r3, #5
    132a:	d01a      	beq.n	1362 <_i2c_master_interrupt_handler+0x13a>
    132c:	7ff3      	ldrb	r3, [r6, #31]
    132e:	2b00      	cmp	r3, #0
    1330:	d017      	beq.n	1362 <_i2c_master_interrupt_handler+0x13a>
    1332:	2303      	movs	r3, #3
    1334:	752b      	strb	r3, [r5, #20]
    1336:	2300      	movs	r3, #0
    1338:	8363      	strh	r3, [r4, #26]
    133a:	83a3      	strh	r3, [r4, #28]
    133c:	7ff3      	ldrb	r3, [r6, #31]
    133e:	2b41      	cmp	r3, #65	; 0x41
    1340:	d00a      	beq.n	1358 <_i2c_master_interrupt_handler+0x130>
    1342:	7aa3      	ldrb	r3, [r4, #10]
    1344:	2b00      	cmp	r3, #0
    1346:	d007      	beq.n	1358 <_i2c_master_interrupt_handler+0x130>
    1348:	0020      	movs	r0, r4
    134a:	f7ff ff14 	bl	1176 <_i2c_master_wait_for_sync>
    134e:	23e0      	movs	r3, #224	; 0xe0
    1350:	686a      	ldr	r2, [r5, #4]
    1352:	02db      	lsls	r3, r3, #11
    1354:	4313      	orrs	r3, r2
    1356:	606b      	str	r3, [r5, #4]
    1358:	077b      	lsls	r3, r7, #29
    135a:	d502      	bpl.n	1362 <_i2c_master_interrupt_handler+0x13a>
    135c:	6963      	ldr	r3, [r4, #20]
    135e:	0020      	movs	r0, r4
    1360:	4798      	blx	r3
    1362:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1364:	2301      	movs	r3, #1
    1366:	762b      	strb	r3, [r5, #24]
    1368:	e7b9      	b.n	12de <_i2c_master_interrupt_handler+0xb6>
    136a:	8b62      	ldrh	r2, [r4, #26]
    136c:	2a00      	cmp	r2, #0
    136e:	d0bb      	beq.n	12e8 <_i2c_master_interrupt_handler+0xc0>
    1370:	8ba2      	ldrh	r2, [r4, #28]
    1372:	2a00      	cmp	r2, #0
    1374:	d0b8      	beq.n	12e8 <_i2c_master_interrupt_handler+0xc0>
    1376:	8b6a      	ldrh	r2, [r5, #26]
    1378:	0692      	lsls	r2, r2, #26
    137a:	d500      	bpl.n	137e <_i2c_master_interrupt_handler+0x156>
    137c:	e777      	b.n	126e <_i2c_master_interrupt_handler+0x46>
    137e:	2b00      	cmp	r3, #0
    1380:	d003      	beq.n	138a <_i2c_master_interrupt_handler+0x162>
    1382:	8ba3      	ldrh	r3, [r4, #28]
    1384:	2b01      	cmp	r3, #1
    1386:	d100      	bne.n	138a <_i2c_master_interrupt_handler+0x162>
    1388:	e771      	b.n	126e <_i2c_master_interrupt_handler+0x46>
    138a:	2341      	movs	r3, #65	; 0x41
    138c:	77f3      	strb	r3, [r6, #31]
    138e:	e7ab      	b.n	12e8 <_i2c_master_interrupt_handler+0xc0>
    1390:	f7ff fef7 	bl	1182 <_i2c_master_read>
    1394:	e7a8      	b.n	12e8 <_i2c_master_interrupt_handler+0xc0>
    1396:	07fa      	lsls	r2, r7, #31
    1398:	d5c5      	bpl.n	1326 <_i2c_master_interrupt_handler+0xfe>
    139a:	7fdb      	ldrb	r3, [r3, #31]
    139c:	2b00      	cmp	r3, #0
    139e:	d1c2      	bne.n	1326 <_i2c_master_interrupt_handler+0xfe>
    13a0:	68e3      	ldr	r3, [r4, #12]
    13a2:	e7be      	b.n	1322 <_i2c_master_interrupt_handler+0xfa>
    13a4:	200001f8 	.word	0x200001f8

000013a8 <sercom_set_gclk_generator>:
    13a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
    13aa:	4c0d      	ldr	r4, [pc, #52]	; (13e0 <sercom_set_gclk_generator+0x38>)
    13ac:	0005      	movs	r5, r0
    13ae:	7823      	ldrb	r3, [r4, #0]
    13b0:	2b00      	cmp	r3, #0
    13b2:	d001      	beq.n	13b8 <sercom_set_gclk_generator+0x10>
    13b4:	2900      	cmp	r1, #0
    13b6:	d00c      	beq.n	13d2 <sercom_set_gclk_generator+0x2a>
    13b8:	a901      	add	r1, sp, #4
    13ba:	200d      	movs	r0, #13
    13bc:	700d      	strb	r5, [r1, #0]
    13be:	f000 fab7 	bl	1930 <system_gclk_chan_set_config>
    13c2:	200d      	movs	r0, #13
    13c4:	f000 fa78 	bl	18b8 <system_gclk_chan_enable>
    13c8:	2301      	movs	r3, #1
    13ca:	2000      	movs	r0, #0
    13cc:	7065      	strb	r5, [r4, #1]
    13ce:	7023      	strb	r3, [r4, #0]
    13d0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    13d2:	7863      	ldrb	r3, [r4, #1]
    13d4:	0008      	movs	r0, r1
    13d6:	42ab      	cmp	r3, r5
    13d8:	d0fa      	beq.n	13d0 <sercom_set_gclk_generator+0x28>
    13da:	201d      	movs	r0, #29
    13dc:	e7f8      	b.n	13d0 <sercom_set_gclk_generator+0x28>
    13de:	46c0      	nop			; (mov r8, r8)
    13e0:	20000061 	.word	0x20000061

000013e4 <_sercom_get_default_pad>:
    13e4:	4a1d      	ldr	r2, [pc, #116]	; (145c <_sercom_get_default_pad+0x78>)
    13e6:	0003      	movs	r3, r0
    13e8:	b500      	push	{lr}
    13ea:	0008      	movs	r0, r1
    13ec:	4293      	cmp	r3, r2
    13ee:	d013      	beq.n	1418 <_sercom_get_default_pad+0x34>
    13f0:	4a1b      	ldr	r2, [pc, #108]	; (1460 <_sercom_get_default_pad+0x7c>)
    13f2:	4293      	cmp	r3, r2
    13f4:	d01d      	beq.n	1432 <_sercom_get_default_pad+0x4e>
    13f6:	4a1b      	ldr	r2, [pc, #108]	; (1464 <_sercom_get_default_pad+0x80>)
    13f8:	4293      	cmp	r3, r2
    13fa:	d127      	bne.n	144c <_sercom_get_default_pad+0x68>
    13fc:	2300      	movs	r3, #0
    13fe:	2903      	cmp	r1, #3
    1400:	d804      	bhi.n	140c <_sercom_get_default_pad+0x28>
    1402:	f001 f937 	bl	2674 <__gnu_thumb1_case_uqi>
    1406:	0225      	.short	0x0225
    1408:	0705      	.short	0x0705
    140a:	4b17      	ldr	r3, [pc, #92]	; (1468 <_sercom_get_default_pad+0x84>)
    140c:	0018      	movs	r0, r3
    140e:	bd00      	pop	{pc}
    1410:	4b16      	ldr	r3, [pc, #88]	; (146c <_sercom_get_default_pad+0x88>)
    1412:	e7fb      	b.n	140c <_sercom_get_default_pad+0x28>
    1414:	4b16      	ldr	r3, [pc, #88]	; (1470 <_sercom_get_default_pad+0x8c>)
    1416:	e7f9      	b.n	140c <_sercom_get_default_pad+0x28>
    1418:	2300      	movs	r3, #0
    141a:	2903      	cmp	r1, #3
    141c:	d8f6      	bhi.n	140c <_sercom_get_default_pad+0x28>
    141e:	f001 f929 	bl	2674 <__gnu_thumb1_case_uqi>
    1422:	0219      	.short	0x0219
    1424:	0604      	.short	0x0604
    1426:	4b13      	ldr	r3, [pc, #76]	; (1474 <_sercom_get_default_pad+0x90>)
    1428:	e7f0      	b.n	140c <_sercom_get_default_pad+0x28>
    142a:	4b13      	ldr	r3, [pc, #76]	; (1478 <_sercom_get_default_pad+0x94>)
    142c:	e7ee      	b.n	140c <_sercom_get_default_pad+0x28>
    142e:	4b13      	ldr	r3, [pc, #76]	; (147c <_sercom_get_default_pad+0x98>)
    1430:	e7ec      	b.n	140c <_sercom_get_default_pad+0x28>
    1432:	2300      	movs	r3, #0
    1434:	2903      	cmp	r1, #3
    1436:	d8e9      	bhi.n	140c <_sercom_get_default_pad+0x28>
    1438:	f001 f91c 	bl	2674 <__gnu_thumb1_case_uqi>
    143c:	0604020e 	.word	0x0604020e
    1440:	4b0f      	ldr	r3, [pc, #60]	; (1480 <_sercom_get_default_pad+0x9c>)
    1442:	e7e3      	b.n	140c <_sercom_get_default_pad+0x28>
    1444:	4b0f      	ldr	r3, [pc, #60]	; (1484 <_sercom_get_default_pad+0xa0>)
    1446:	e7e1      	b.n	140c <_sercom_get_default_pad+0x28>
    1448:	4b0f      	ldr	r3, [pc, #60]	; (1488 <_sercom_get_default_pad+0xa4>)
    144a:	e7df      	b.n	140c <_sercom_get_default_pad+0x28>
    144c:	2300      	movs	r3, #0
    144e:	e7dd      	b.n	140c <_sercom_get_default_pad+0x28>
    1450:	4b0e      	ldr	r3, [pc, #56]	; (148c <_sercom_get_default_pad+0xa8>)
    1452:	e7db      	b.n	140c <_sercom_get_default_pad+0x28>
    1454:	4b0e      	ldr	r3, [pc, #56]	; (1490 <_sercom_get_default_pad+0xac>)
    1456:	e7d9      	b.n	140c <_sercom_get_default_pad+0x28>
    1458:	4b0e      	ldr	r3, [pc, #56]	; (1494 <_sercom_get_default_pad+0xb0>)
    145a:	e7d7      	b.n	140c <_sercom_get_default_pad+0x28>
    145c:	42000c00 	.word	0x42000c00
    1460:	42001000 	.word	0x42001000
    1464:	42000800 	.word	0x42000800
    1468:	00050003 	.word	0x00050003
    146c:	00060003 	.word	0x00060003
    1470:	00070003 	.word	0x00070003
    1474:	00170002 	.word	0x00170002
    1478:	001e0003 	.word	0x001e0003
    147c:	001f0003 	.word	0x001f0003
    1480:	00170003 	.word	0x00170003
    1484:	00100003 	.word	0x00100003
    1488:	00190003 	.word	0x00190003
    148c:	00040003 	.word	0x00040003
    1490:	00160002 	.word	0x00160002
    1494:	00160003 	.word	0x00160003

00001498 <_sercom_get_sercom_inst_index>:
    1498:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    149a:	4b0c      	ldr	r3, [pc, #48]	; (14cc <_sercom_get_sercom_inst_index+0x34>)
    149c:	0001      	movs	r1, r0
    149e:	0018      	movs	r0, r3
    14a0:	aa01      	add	r2, sp, #4
    14a2:	c870      	ldmia	r0!, {r4, r5, r6}
    14a4:	c270      	stmia	r2!, {r4, r5, r6}
    14a6:	9a01      	ldr	r2, [sp, #4]
    14a8:	428a      	cmp	r2, r1
    14aa:	d00a      	beq.n	14c2 <_sercom_get_sercom_inst_index+0x2a>
    14ac:	685a      	ldr	r2, [r3, #4]
    14ae:	428a      	cmp	r2, r1
    14b0:	d009      	beq.n	14c6 <_sercom_get_sercom_inst_index+0x2e>
    14b2:	689b      	ldr	r3, [r3, #8]
    14b4:	2000      	movs	r0, #0
    14b6:	428b      	cmp	r3, r1
    14b8:	d101      	bne.n	14be <_sercom_get_sercom_inst_index+0x26>
    14ba:	3002      	adds	r0, #2
    14bc:	b2c0      	uxtb	r0, r0
    14be:	b004      	add	sp, #16
    14c0:	bd70      	pop	{r4, r5, r6, pc}
    14c2:	2000      	movs	r0, #0
    14c4:	e7fa      	b.n	14bc <_sercom_get_sercom_inst_index+0x24>
    14c6:	2001      	movs	r0, #1
    14c8:	e7f8      	b.n	14bc <_sercom_get_sercom_inst_index+0x24>
    14ca:	46c0      	nop			; (mov r8, r8)
    14cc:	00002850 	.word	0x00002850

000014d0 <_sercom_default_handler>:
    14d0:	4770      	bx	lr
	...

000014d4 <_sercom_set_handler>:
    14d4:	b570      	push	{r4, r5, r6, lr}
    14d6:	4e09      	ldr	r6, [pc, #36]	; (14fc <_sercom_set_handler+0x28>)
    14d8:	4b09      	ldr	r3, [pc, #36]	; (1500 <_sercom_set_handler+0x2c>)
    14da:	7832      	ldrb	r2, [r6, #0]
    14dc:	2a00      	cmp	r2, #0
    14de:	d109      	bne.n	14f4 <_sercom_set_handler+0x20>
    14e0:	4c08      	ldr	r4, [pc, #32]	; (1504 <_sercom_set_handler+0x30>)
    14e2:	4d09      	ldr	r5, [pc, #36]	; (1508 <_sercom_set_handler+0x34>)
    14e4:	6022      	str	r2, [r4, #0]
    14e6:	6062      	str	r2, [r4, #4]
    14e8:	60a2      	str	r2, [r4, #8]
    14ea:	3201      	adds	r2, #1
    14ec:	601d      	str	r5, [r3, #0]
    14ee:	605d      	str	r5, [r3, #4]
    14f0:	609d      	str	r5, [r3, #8]
    14f2:	7032      	strb	r2, [r6, #0]
    14f4:	0080      	lsls	r0, r0, #2
    14f6:	5019      	str	r1, [r3, r0]
    14f8:	bd70      	pop	{r4, r5, r6, pc}
    14fa:	46c0      	nop			; (mov r8, r8)
    14fc:	20000063 	.word	0x20000063
    1500:	20000064 	.word	0x20000064
    1504:	200001f8 	.word	0x200001f8
    1508:	000014d1 	.word	0x000014d1

0000150c <_sercom_get_interrupt_vector>:
    150c:	2309      	movs	r3, #9
    150e:	b513      	push	{r0, r1, r4, lr}
    1510:	ac01      	add	r4, sp, #4
    1512:	7023      	strb	r3, [r4, #0]
    1514:	3301      	adds	r3, #1
    1516:	7063      	strb	r3, [r4, #1]
    1518:	3301      	adds	r3, #1
    151a:	70a3      	strb	r3, [r4, #2]
    151c:	f7ff ffbc 	bl	1498 <_sercom_get_sercom_inst_index>
    1520:	5620      	ldrsb	r0, [r4, r0]
    1522:	bd16      	pop	{r1, r2, r4, pc}

00001524 <SERCOM0_Handler>:
    1524:	b510      	push	{r4, lr}
    1526:	4b02      	ldr	r3, [pc, #8]	; (1530 <SERCOM0_Handler+0xc>)
    1528:	2000      	movs	r0, #0
    152a:	681b      	ldr	r3, [r3, #0]
    152c:	4798      	blx	r3
    152e:	bd10      	pop	{r4, pc}
    1530:	20000064 	.word	0x20000064

00001534 <SERCOM1_Handler>:
    1534:	b510      	push	{r4, lr}
    1536:	4b02      	ldr	r3, [pc, #8]	; (1540 <SERCOM1_Handler+0xc>)
    1538:	2001      	movs	r0, #1
    153a:	685b      	ldr	r3, [r3, #4]
    153c:	4798      	blx	r3
    153e:	bd10      	pop	{r4, pc}
    1540:	20000064 	.word	0x20000064

00001544 <SERCOM2_Handler>:
    1544:	b510      	push	{r4, lr}
    1546:	4b02      	ldr	r3, [pc, #8]	; (1550 <SERCOM2_Handler+0xc>)
    1548:	2002      	movs	r0, #2
    154a:	689b      	ldr	r3, [r3, #8]
    154c:	4798      	blx	r3
    154e:	bd10      	pop	{r4, pc}
    1550:	20000064 	.word	0x20000064

00001554 <_system_dfll_wait_for_sync>:
    1554:	2310      	movs	r3, #16
    1556:	4902      	ldr	r1, [pc, #8]	; (1560 <_system_dfll_wait_for_sync+0xc>)
    1558:	68ca      	ldr	r2, [r1, #12]
    155a:	421a      	tst	r2, r3
    155c:	d0fc      	beq.n	1558 <_system_dfll_wait_for_sync+0x4>
    155e:	4770      	bx	lr
    1560:	40000800 	.word	0x40000800

00001564 <system_clock_source_get_hz>:
    1564:	b570      	push	{r4, r5, r6, lr}
    1566:	2808      	cmp	r0, #8
    1568:	d806      	bhi.n	1578 <system_clock_source_get_hz+0x14>
    156a:	f001 f883 	bl	2674 <__gnu_thumb1_case_uqi>
    156e:	0508      	.short	0x0508
    1570:	12303005 	.word	0x12303005
    1574:	150b      	.short	0x150b
    1576:	28          	.byte	0x28
    1577:	00          	.byte	0x00
    1578:	2400      	movs	r4, #0
    157a:	0020      	movs	r0, r4
    157c:	bd70      	pop	{r4, r5, r6, pc}
    157e:	4b16      	ldr	r3, [pc, #88]	; (15d8 <system_clock_source_get_hz+0x74>)
    1580:	691c      	ldr	r4, [r3, #16]
    1582:	e7fa      	b.n	157a <system_clock_source_get_hz+0x16>
    1584:	4b15      	ldr	r3, [pc, #84]	; (15dc <system_clock_source_get_hz+0x78>)
    1586:	4c16      	ldr	r4, [pc, #88]	; (15e0 <system_clock_source_get_hz+0x7c>)
    1588:	6a1b      	ldr	r3, [r3, #32]
    158a:	059b      	lsls	r3, r3, #22
    158c:	0f9b      	lsrs	r3, r3, #30
    158e:	40dc      	lsrs	r4, r3
    1590:	e7f3      	b.n	157a <system_clock_source_get_hz+0x16>
    1592:	4b11      	ldr	r3, [pc, #68]	; (15d8 <system_clock_source_get_hz+0x74>)
    1594:	695c      	ldr	r4, [r3, #20]
    1596:	e7f0      	b.n	157a <system_clock_source_get_hz+0x16>
    1598:	4d0f      	ldr	r5, [pc, #60]	; (15d8 <system_clock_source_get_hz+0x74>)
    159a:	2400      	movs	r4, #0
    159c:	682b      	ldr	r3, [r5, #0]
    159e:	079b      	lsls	r3, r3, #30
    15a0:	d5eb      	bpl.n	157a <system_clock_source_get_hz+0x16>
    15a2:	f7ff ffd7 	bl	1554 <_system_dfll_wait_for_sync>
    15a6:	2224      	movs	r2, #36	; 0x24
    15a8:	682b      	ldr	r3, [r5, #0]
    15aa:	4013      	ands	r3, r2
    15ac:	2b04      	cmp	r3, #4
    15ae:	d111      	bne.n	15d4 <system_clock_source_get_hz+0x70>
    15b0:	0020      	movs	r0, r4
    15b2:	f000 f9c9 	bl	1948 <system_gclk_chan_get_hz>
    15b6:	68ac      	ldr	r4, [r5, #8]
    15b8:	b2a4      	uxth	r4, r4
    15ba:	4344      	muls	r4, r0
    15bc:	e7dd      	b.n	157a <system_clock_source_get_hz+0x16>
    15be:	4b09      	ldr	r3, [pc, #36]	; (15e4 <system_clock_source_get_hz+0x80>)
    15c0:	2400      	movs	r4, #0
    15c2:	781b      	ldrb	r3, [r3, #0]
    15c4:	075b      	lsls	r3, r3, #29
    15c6:	d5d8      	bpl.n	157a <system_clock_source_get_hz+0x16>
    15c8:	4b03      	ldr	r3, [pc, #12]	; (15d8 <system_clock_source_get_hz+0x74>)
    15ca:	68dc      	ldr	r4, [r3, #12]
    15cc:	e7d5      	b.n	157a <system_clock_source_get_hz+0x16>
    15ce:	2480      	movs	r4, #128	; 0x80
    15d0:	0224      	lsls	r4, r4, #8
    15d2:	e7d2      	b.n	157a <system_clock_source_get_hz+0x16>
    15d4:	4c04      	ldr	r4, [pc, #16]	; (15e8 <system_clock_source_get_hz+0x84>)
    15d6:	e7d0      	b.n	157a <system_clock_source_get_hz+0x16>
    15d8:	20000070 	.word	0x20000070
    15dc:	40000800 	.word	0x40000800
    15e0:	007a1200 	.word	0x007a1200
    15e4:	40000850 	.word	0x40000850
    15e8:	02dc6c00 	.word	0x02dc6c00

000015ec <system_clock_source_osc8m_set_config>:
    15ec:	b570      	push	{r4, r5, r6, lr}
    15ee:	7884      	ldrb	r4, [r0, #2]
    15f0:	7802      	ldrb	r2, [r0, #0]
    15f2:	7845      	ldrb	r5, [r0, #1]
    15f4:	2001      	movs	r0, #1
    15f6:	2640      	movs	r6, #64	; 0x40
    15f8:	4005      	ands	r5, r0
    15fa:	4020      	ands	r0, r4
    15fc:	2480      	movs	r4, #128	; 0x80
    15fe:	4908      	ldr	r1, [pc, #32]	; (1620 <system_clock_source_osc8m_set_config+0x34>)
    1600:	01ad      	lsls	r5, r5, #6
    1602:	6a0b      	ldr	r3, [r1, #32]
    1604:	01c0      	lsls	r0, r0, #7
    1606:	43b3      	bics	r3, r6
    1608:	432b      	orrs	r3, r5
    160a:	43a3      	bics	r3, r4
    160c:	4303      	orrs	r3, r0
    160e:	2003      	movs	r0, #3
    1610:	4002      	ands	r2, r0
    1612:	4804      	ldr	r0, [pc, #16]	; (1624 <system_clock_source_osc8m_set_config+0x38>)
    1614:	0212      	lsls	r2, r2, #8
    1616:	4003      	ands	r3, r0
    1618:	4313      	orrs	r3, r2
    161a:	620b      	str	r3, [r1, #32]
    161c:	bd70      	pop	{r4, r5, r6, pc}
    161e:	46c0      	nop			; (mov r8, r8)
    1620:	40000800 	.word	0x40000800
    1624:	fffffcff 	.word	0xfffffcff

00001628 <system_clock_source_enable>:
    1628:	b570      	push	{r4, r5, r6, lr}
    162a:	2808      	cmp	r0, #8
    162c:	d806      	bhi.n	163c <system_clock_source_enable+0x14>
    162e:	f001 f821 	bl	2674 <__gnu_thumb1_case_uqi>
    1632:	0514      	.short	0x0514
    1634:	1a0e0c05 	.word	0x1a0e0c05
    1638:	2007      	.short	0x2007
    163a:	35          	.byte	0x35
    163b:	00          	.byte	0x00
    163c:	2017      	movs	r0, #23
    163e:	bd70      	pop	{r4, r5, r6, pc}
    1640:	2302      	movs	r3, #2
    1642:	4a19      	ldr	r2, [pc, #100]	; (16a8 <system_clock_source_enable+0x80>)
    1644:	6a11      	ldr	r1, [r2, #32]
    1646:	430b      	orrs	r3, r1
    1648:	6213      	str	r3, [r2, #32]
    164a:	2000      	movs	r0, #0
    164c:	e7f7      	b.n	163e <system_clock_source_enable+0x16>
    164e:	2302      	movs	r3, #2
    1650:	4a15      	ldr	r2, [pc, #84]	; (16a8 <system_clock_source_enable+0x80>)
    1652:	6991      	ldr	r1, [r2, #24]
    1654:	430b      	orrs	r3, r1
    1656:	6193      	str	r3, [r2, #24]
    1658:	e7f7      	b.n	164a <system_clock_source_enable+0x22>
    165a:	2302      	movs	r3, #2
    165c:	4a12      	ldr	r2, [pc, #72]	; (16a8 <system_clock_source_enable+0x80>)
    165e:	8a11      	ldrh	r1, [r2, #16]
    1660:	430b      	orrs	r3, r1
    1662:	8213      	strh	r3, [r2, #16]
    1664:	e7f1      	b.n	164a <system_clock_source_enable+0x22>
    1666:	2302      	movs	r3, #2
    1668:	4a0f      	ldr	r2, [pc, #60]	; (16a8 <system_clock_source_enable+0x80>)
    166a:	8a91      	ldrh	r1, [r2, #20]
    166c:	430b      	orrs	r3, r1
    166e:	8293      	strh	r3, [r2, #20]
    1670:	e7eb      	b.n	164a <system_clock_source_enable+0x22>
    1672:	2202      	movs	r2, #2
    1674:	2400      	movs	r4, #0
    1676:	4e0d      	ldr	r6, [pc, #52]	; (16ac <system_clock_source_enable+0x84>)
    1678:	4d0b      	ldr	r5, [pc, #44]	; (16a8 <system_clock_source_enable+0x80>)
    167a:	6833      	ldr	r3, [r6, #0]
    167c:	4313      	orrs	r3, r2
    167e:	6033      	str	r3, [r6, #0]
    1680:	84aa      	strh	r2, [r5, #36]	; 0x24
    1682:	f7ff ff67 	bl	1554 <_system_dfll_wait_for_sync>
    1686:	68b3      	ldr	r3, [r6, #8]
    1688:	62eb      	str	r3, [r5, #44]	; 0x2c
    168a:	6873      	ldr	r3, [r6, #4]
    168c:	62ab      	str	r3, [r5, #40]	; 0x28
    168e:	84ac      	strh	r4, [r5, #36]	; 0x24
    1690:	f7ff ff60 	bl	1554 <_system_dfll_wait_for_sync>
    1694:	6833      	ldr	r3, [r6, #0]
    1696:	b29b      	uxth	r3, r3
    1698:	84ab      	strh	r3, [r5, #36]	; 0x24
    169a:	e7d6      	b.n	164a <system_clock_source_enable+0x22>
    169c:	2302      	movs	r3, #2
    169e:	4a04      	ldr	r2, [pc, #16]	; (16b0 <system_clock_source_enable+0x88>)
    16a0:	7811      	ldrb	r1, [r2, #0]
    16a2:	430b      	orrs	r3, r1
    16a4:	7013      	strb	r3, [r2, #0]
    16a6:	e7d0      	b.n	164a <system_clock_source_enable+0x22>
    16a8:	40000800 	.word	0x40000800
    16ac:	20000070 	.word	0x20000070
    16b0:	40000844 	.word	0x40000844

000016b4 <system_clock_init>:
    16b4:	22c2      	movs	r2, #194	; 0xc2
    16b6:	211e      	movs	r1, #30
    16b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    16ba:	4b20      	ldr	r3, [pc, #128]	; (173c <system_clock_init+0x88>)
    16bc:	00d2      	lsls	r2, r2, #3
    16be:	609a      	str	r2, [r3, #8]
    16c0:	4a1f      	ldr	r2, [pc, #124]	; (1740 <system_clock_init+0x8c>)
    16c2:	2500      	movs	r5, #0
    16c4:	6853      	ldr	r3, [r2, #4]
    16c6:	b085      	sub	sp, #20
    16c8:	438b      	bics	r3, r1
    16ca:	6053      	str	r3, [r2, #4]
    16cc:	2301      	movs	r3, #1
    16ce:	ac01      	add	r4, sp, #4
    16d0:	7023      	strb	r3, [r4, #0]
    16d2:	b2e8      	uxtb	r0, r5
    16d4:	0021      	movs	r1, r4
    16d6:	3501      	adds	r5, #1
    16d8:	f000 f92a 	bl	1930 <system_gclk_chan_set_config>
    16dc:	2d18      	cmp	r5, #24
    16de:	d1f8      	bne.n	16d2 <system_clock_init+0x1e>
    16e0:	2500      	movs	r5, #0
    16e2:	466b      	mov	r3, sp
    16e4:	2601      	movs	r6, #1
    16e6:	2706      	movs	r7, #6
    16e8:	4668      	mov	r0, sp
    16ea:	701d      	strb	r5, [r3, #0]
    16ec:	709d      	strb	r5, [r3, #2]
    16ee:	705e      	strb	r6, [r3, #1]
    16f0:	f7ff ff7c 	bl	15ec <system_clock_source_osc8m_set_config>
    16f4:	2006      	movs	r0, #6
    16f6:	f7ff ff97 	bl	1628 <system_clock_source_enable>
    16fa:	f000 f82b 	bl	1754 <system_gclk_init>
    16fe:	0021      	movs	r1, r4
    1700:	2005      	movs	r0, #5
    1702:	6066      	str	r6, [r4, #4]
    1704:	7065      	strb	r5, [r4, #1]
    1706:	7027      	strb	r7, [r4, #0]
    1708:	7225      	strb	r5, [r4, #8]
    170a:	7265      	strb	r5, [r4, #9]
    170c:	f000 f832 	bl	1774 <system_gclk_gen_set_config>
    1710:	2005      	movs	r0, #5
    1712:	f000 f87d 	bl	1810 <system_gclk_gen_enable>
    1716:	4b0b      	ldr	r3, [pc, #44]	; (1744 <system_clock_init+0x90>)
    1718:	0021      	movs	r1, r4
    171a:	721d      	strb	r5, [r3, #8]
    171c:	0028      	movs	r0, r5
    171e:	725d      	strb	r5, [r3, #9]
    1720:	729d      	strb	r5, [r3, #10]
    1722:	72dd      	strb	r5, [r3, #11]
    1724:	6066      	str	r6, [r4, #4]
    1726:	7065      	strb	r5, [r4, #1]
    1728:	7027      	strb	r7, [r4, #0]
    172a:	7265      	strb	r5, [r4, #9]
    172c:	7226      	strb	r6, [r4, #8]
    172e:	f000 f821 	bl	1774 <system_gclk_gen_set_config>
    1732:	0028      	movs	r0, r5
    1734:	f000 f86c 	bl	1810 <system_gclk_gen_enable>
    1738:	b005      	add	sp, #20
    173a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    173c:	40000800 	.word	0x40000800
    1740:	41004000 	.word	0x41004000
    1744:	40000400 	.word	0x40000400

00001748 <system_gclk_is_syncing>:
    1748:	4b01      	ldr	r3, [pc, #4]	; (1750 <system_gclk_is_syncing+0x8>)
    174a:	7858      	ldrb	r0, [r3, #1]
    174c:	09c0      	lsrs	r0, r0, #7
    174e:	4770      	bx	lr
    1750:	40000c00 	.word	0x40000c00

00001754 <system_gclk_init>:
    1754:	2308      	movs	r3, #8
    1756:	4a05      	ldr	r2, [pc, #20]	; (176c <system_gclk_init+0x18>)
    1758:	6991      	ldr	r1, [r2, #24]
    175a:	430b      	orrs	r3, r1
    175c:	6193      	str	r3, [r2, #24]
    175e:	2301      	movs	r3, #1
    1760:	4a03      	ldr	r2, [pc, #12]	; (1770 <system_gclk_init+0x1c>)
    1762:	7013      	strb	r3, [r2, #0]
    1764:	7811      	ldrb	r1, [r2, #0]
    1766:	4219      	tst	r1, r3
    1768:	d1fc      	bne.n	1764 <system_gclk_init+0x10>
    176a:	4770      	bx	lr
    176c:	40000400 	.word	0x40000400
    1770:	40000c00 	.word	0x40000c00

00001774 <system_gclk_gen_set_config>:
    1774:	b570      	push	{r4, r5, r6, lr}
    1776:	780c      	ldrb	r4, [r1, #0]
    1778:	784b      	ldrb	r3, [r1, #1]
    177a:	0224      	lsls	r4, r4, #8
    177c:	0006      	movs	r6, r0
    177e:	0005      	movs	r5, r0
    1780:	4304      	orrs	r4, r0
    1782:	2b00      	cmp	r3, #0
    1784:	d002      	beq.n	178c <system_gclk_gen_set_config+0x18>
    1786:	2380      	movs	r3, #128	; 0x80
    1788:	02db      	lsls	r3, r3, #11
    178a:	431c      	orrs	r4, r3
    178c:	7a4b      	ldrb	r3, [r1, #9]
    178e:	2b00      	cmp	r3, #0
    1790:	d002      	beq.n	1798 <system_gclk_gen_set_config+0x24>
    1792:	2380      	movs	r3, #128	; 0x80
    1794:	031b      	lsls	r3, r3, #12
    1796:	431c      	orrs	r4, r3
    1798:	684b      	ldr	r3, [r1, #4]
    179a:	2b01      	cmp	r3, #1
    179c:	d912      	bls.n	17c4 <system_gclk_gen_set_config+0x50>
    179e:	1e5d      	subs	r5, r3, #1
    17a0:	401d      	ands	r5, r3
    17a2:	2202      	movs	r2, #2
    17a4:	2d00      	cmp	r5, #0
    17a6:	d006      	beq.n	17b6 <system_gclk_gen_set_config+0x42>
    17a8:	021d      	lsls	r5, r3, #8
    17aa:	2380      	movs	r3, #128	; 0x80
    17ac:	4335      	orrs	r5, r6
    17ae:	029b      	lsls	r3, r3, #10
    17b0:	e007      	b.n	17c2 <system_gclk_gen_set_config+0x4e>
    17b2:	3501      	adds	r5, #1
    17b4:	0052      	lsls	r2, r2, #1
    17b6:	429a      	cmp	r2, r3
    17b8:	d3fb      	bcc.n	17b2 <system_gclk_gen_set_config+0x3e>
    17ba:	2380      	movs	r3, #128	; 0x80
    17bc:	022d      	lsls	r5, r5, #8
    17be:	4335      	orrs	r5, r6
    17c0:	035b      	lsls	r3, r3, #13
    17c2:	431c      	orrs	r4, r3
    17c4:	7a0b      	ldrb	r3, [r1, #8]
    17c6:	2b00      	cmp	r3, #0
    17c8:	d002      	beq.n	17d0 <system_gclk_gen_set_config+0x5c>
    17ca:	2380      	movs	r3, #128	; 0x80
    17cc:	039b      	lsls	r3, r3, #14
    17ce:	431c      	orrs	r4, r3
    17d0:	f7ff ffba 	bl	1748 <system_gclk_is_syncing>
    17d4:	2800      	cmp	r0, #0
    17d6:	d1fb      	bne.n	17d0 <system_gclk_gen_set_config+0x5c>
    17d8:	f7ff fb18 	bl	e0c <cpu_irq_enter_critical>
    17dc:	4b0a      	ldr	r3, [pc, #40]	; (1808 <system_gclk_gen_set_config+0x94>)
    17de:	701e      	strb	r6, [r3, #0]
    17e0:	f7ff ffb2 	bl	1748 <system_gclk_is_syncing>
    17e4:	2800      	cmp	r0, #0
    17e6:	d1fb      	bne.n	17e0 <system_gclk_gen_set_config+0x6c>
    17e8:	4b08      	ldr	r3, [pc, #32]	; (180c <system_gclk_gen_set_config+0x98>)
    17ea:	609d      	str	r5, [r3, #8]
    17ec:	001d      	movs	r5, r3
    17ee:	f7ff ffab 	bl	1748 <system_gclk_is_syncing>
    17f2:	2800      	cmp	r0, #0
    17f4:	d1fb      	bne.n	17ee <system_gclk_gen_set_config+0x7a>
    17f6:	2280      	movs	r2, #128	; 0x80
    17f8:	686b      	ldr	r3, [r5, #4]
    17fa:	0252      	lsls	r2, r2, #9
    17fc:	4013      	ands	r3, r2
    17fe:	431c      	orrs	r4, r3
    1800:	606c      	str	r4, [r5, #4]
    1802:	f7ff fb1d 	bl	e40 <cpu_irq_leave_critical>
    1806:	bd70      	pop	{r4, r5, r6, pc}
    1808:	40000c08 	.word	0x40000c08
    180c:	40000c00 	.word	0x40000c00

00001810 <system_gclk_gen_enable>:
    1810:	b510      	push	{r4, lr}
    1812:	0004      	movs	r4, r0
    1814:	f7ff ff98 	bl	1748 <system_gclk_is_syncing>
    1818:	2800      	cmp	r0, #0
    181a:	d1fb      	bne.n	1814 <system_gclk_gen_enable+0x4>
    181c:	f7ff faf6 	bl	e0c <cpu_irq_enter_critical>
    1820:	4b07      	ldr	r3, [pc, #28]	; (1840 <system_gclk_gen_enable+0x30>)
    1822:	701c      	strb	r4, [r3, #0]
    1824:	f7ff ff90 	bl	1748 <system_gclk_is_syncing>
    1828:	2800      	cmp	r0, #0
    182a:	d1fb      	bne.n	1824 <system_gclk_gen_enable+0x14>
    182c:	2380      	movs	r3, #128	; 0x80
    182e:	4a05      	ldr	r2, [pc, #20]	; (1844 <system_gclk_gen_enable+0x34>)
    1830:	025b      	lsls	r3, r3, #9
    1832:	6851      	ldr	r1, [r2, #4]
    1834:	430b      	orrs	r3, r1
    1836:	6053      	str	r3, [r2, #4]
    1838:	f7ff fb02 	bl	e40 <cpu_irq_leave_critical>
    183c:	bd10      	pop	{r4, pc}
    183e:	46c0      	nop			; (mov r8, r8)
    1840:	40000c04 	.word	0x40000c04
    1844:	40000c00 	.word	0x40000c00

00001848 <system_gclk_gen_get_hz>:
    1848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    184a:	0007      	movs	r7, r0
    184c:	f7ff ff7c 	bl	1748 <system_gclk_is_syncing>
    1850:	2800      	cmp	r0, #0
    1852:	d1fb      	bne.n	184c <system_gclk_gen_get_hz+0x4>
    1854:	4e15      	ldr	r6, [pc, #84]	; (18ac <system_gclk_gen_get_hz+0x64>)
    1856:	f7ff fad9 	bl	e0c <cpu_irq_enter_critical>
    185a:	7037      	strb	r7, [r6, #0]
    185c:	f7ff ff74 	bl	1748 <system_gclk_is_syncing>
    1860:	2800      	cmp	r0, #0
    1862:	d1fb      	bne.n	185c <system_gclk_gen_get_hz+0x14>
    1864:	4c12      	ldr	r4, [pc, #72]	; (18b0 <system_gclk_gen_get_hz+0x68>)
    1866:	6860      	ldr	r0, [r4, #4]
    1868:	04c0      	lsls	r0, r0, #19
    186a:	0ec0      	lsrs	r0, r0, #27
    186c:	f7ff fe7a 	bl	1564 <system_clock_source_get_hz>
    1870:	0005      	movs	r5, r0
    1872:	7037      	strb	r7, [r6, #0]
    1874:	6866      	ldr	r6, [r4, #4]
    1876:	4b0f      	ldr	r3, [pc, #60]	; (18b4 <system_gclk_gen_get_hz+0x6c>)
    1878:	02f6      	lsls	r6, r6, #11
    187a:	0ff6      	lsrs	r6, r6, #31
    187c:	701f      	strb	r7, [r3, #0]
    187e:	f7ff ff63 	bl	1748 <system_gclk_is_syncing>
    1882:	2800      	cmp	r0, #0
    1884:	d1fb      	bne.n	187e <system_gclk_gen_get_hz+0x36>
    1886:	68a4      	ldr	r4, [r4, #8]
    1888:	0224      	lsls	r4, r4, #8
    188a:	0c24      	lsrs	r4, r4, #16
    188c:	f7ff fad8 	bl	e40 <cpu_irq_leave_critical>
    1890:	2e00      	cmp	r6, #0
    1892:	d108      	bne.n	18a6 <system_gclk_gen_get_hz+0x5e>
    1894:	2c01      	cmp	r4, #1
    1896:	d904      	bls.n	18a2 <system_gclk_gen_get_hz+0x5a>
    1898:	0028      	movs	r0, r5
    189a:	0021      	movs	r1, r4
    189c:	f000 fef4 	bl	2688 <__udivsi3>
    18a0:	0005      	movs	r5, r0
    18a2:	0028      	movs	r0, r5
    18a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    18a6:	3401      	adds	r4, #1
    18a8:	40e5      	lsrs	r5, r4
    18aa:	e7fa      	b.n	18a2 <system_gclk_gen_get_hz+0x5a>
    18ac:	40000c04 	.word	0x40000c04
    18b0:	40000c00 	.word	0x40000c00
    18b4:	40000c08 	.word	0x40000c08

000018b8 <system_gclk_chan_enable>:
    18b8:	b510      	push	{r4, lr}
    18ba:	0004      	movs	r4, r0
    18bc:	f7ff faa6 	bl	e0c <cpu_irq_enter_critical>
    18c0:	4b05      	ldr	r3, [pc, #20]	; (18d8 <system_gclk_chan_enable+0x20>)
    18c2:	4a06      	ldr	r2, [pc, #24]	; (18dc <system_gclk_chan_enable+0x24>)
    18c4:	701c      	strb	r4, [r3, #0]
    18c6:	2380      	movs	r3, #128	; 0x80
    18c8:	8851      	ldrh	r1, [r2, #2]
    18ca:	01db      	lsls	r3, r3, #7
    18cc:	430b      	orrs	r3, r1
    18ce:	8053      	strh	r3, [r2, #2]
    18d0:	f7ff fab6 	bl	e40 <cpu_irq_leave_critical>
    18d4:	bd10      	pop	{r4, pc}
    18d6:	46c0      	nop			; (mov r8, r8)
    18d8:	40000c02 	.word	0x40000c02
    18dc:	40000c00 	.word	0x40000c00

000018e0 <system_gclk_chan_disable>:
    18e0:	b510      	push	{r4, lr}
    18e2:	0004      	movs	r4, r0
    18e4:	f7ff fa92 	bl	e0c <cpu_irq_enter_critical>
    18e8:	4b0d      	ldr	r3, [pc, #52]	; (1920 <system_gclk_chan_disable+0x40>)
    18ea:	4a0e      	ldr	r2, [pc, #56]	; (1924 <system_gclk_chan_disable+0x44>)
    18ec:	701c      	strb	r4, [r3, #0]
    18ee:	4b0e      	ldr	r3, [pc, #56]	; (1928 <system_gclk_chan_disable+0x48>)
    18f0:	4c0e      	ldr	r4, [pc, #56]	; (192c <system_gclk_chan_disable+0x4c>)
    18f2:	8858      	ldrh	r0, [r3, #2]
    18f4:	8859      	ldrh	r1, [r3, #2]
    18f6:	0500      	lsls	r0, r0, #20
    18f8:	4011      	ands	r1, r2
    18fa:	8059      	strh	r1, [r3, #2]
    18fc:	8859      	ldrh	r1, [r3, #2]
    18fe:	0f00      	lsrs	r0, r0, #28
    1900:	4021      	ands	r1, r4
    1902:	8059      	strh	r1, [r3, #2]
    1904:	0011      	movs	r1, r2
    1906:	2280      	movs	r2, #128	; 0x80
    1908:	01d2      	lsls	r2, r2, #7
    190a:	885c      	ldrh	r4, [r3, #2]
    190c:	4214      	tst	r4, r2
    190e:	d1fc      	bne.n	190a <system_gclk_chan_disable+0x2a>
    1910:	885a      	ldrh	r2, [r3, #2]
    1912:	0200      	lsls	r0, r0, #8
    1914:	400a      	ands	r2, r1
    1916:	4302      	orrs	r2, r0
    1918:	805a      	strh	r2, [r3, #2]
    191a:	f7ff fa91 	bl	e40 <cpu_irq_leave_critical>
    191e:	bd10      	pop	{r4, pc}
    1920:	40000c02 	.word	0x40000c02
    1924:	fffff0ff 	.word	0xfffff0ff
    1928:	40000c00 	.word	0x40000c00
    192c:	ffffbfff 	.word	0xffffbfff

00001930 <system_gclk_chan_set_config>:
    1930:	b510      	push	{r4, lr}
    1932:	780c      	ldrb	r4, [r1, #0]
    1934:	0224      	lsls	r4, r4, #8
    1936:	4304      	orrs	r4, r0
    1938:	f7ff ffd2 	bl	18e0 <system_gclk_chan_disable>
    193c:	4b01      	ldr	r3, [pc, #4]	; (1944 <system_gclk_chan_set_config+0x14>)
    193e:	b2a4      	uxth	r4, r4
    1940:	805c      	strh	r4, [r3, #2]
    1942:	bd10      	pop	{r4, pc}
    1944:	40000c00 	.word	0x40000c00

00001948 <system_gclk_chan_get_hz>:
    1948:	b510      	push	{r4, lr}
    194a:	0004      	movs	r4, r0
    194c:	f7ff fa5e 	bl	e0c <cpu_irq_enter_critical>
    1950:	4b05      	ldr	r3, [pc, #20]	; (1968 <system_gclk_chan_get_hz+0x20>)
    1952:	701c      	strb	r4, [r3, #0]
    1954:	4b05      	ldr	r3, [pc, #20]	; (196c <system_gclk_chan_get_hz+0x24>)
    1956:	885c      	ldrh	r4, [r3, #2]
    1958:	f7ff fa72 	bl	e40 <cpu_irq_leave_critical>
    195c:	0524      	lsls	r4, r4, #20
    195e:	0f24      	lsrs	r4, r4, #28
    1960:	0020      	movs	r0, r4
    1962:	f7ff ff71 	bl	1848 <system_gclk_gen_get_hz>
    1966:	bd10      	pop	{r4, pc}
    1968:	40000c02 	.word	0x40000c02
    196c:	40000c00 	.word	0x40000c00

00001970 <_system_pinmux_config>:
    1970:	78d3      	ldrb	r3, [r2, #3]
    1972:	b530      	push	{r4, r5, lr}
    1974:	2b00      	cmp	r3, #0
    1976:	d135      	bne.n	19e4 <_system_pinmux_config+0x74>
    1978:	7814      	ldrb	r4, [r2, #0]
    197a:	2c80      	cmp	r4, #128	; 0x80
    197c:	d003      	beq.n	1986 <_system_pinmux_config+0x16>
    197e:	2380      	movs	r3, #128	; 0x80
    1980:	0624      	lsls	r4, r4, #24
    1982:	025b      	lsls	r3, r3, #9
    1984:	4323      	orrs	r3, r4
    1986:	2502      	movs	r5, #2
    1988:	7854      	ldrb	r4, [r2, #1]
    198a:	43ac      	bics	r4, r5
    198c:	d106      	bne.n	199c <_system_pinmux_config+0x2c>
    198e:	7894      	ldrb	r4, [r2, #2]
    1990:	2c00      	cmp	r4, #0
    1992:	d124      	bne.n	19de <_system_pinmux_config+0x6e>
    1994:	2480      	movs	r4, #128	; 0x80
    1996:	02a4      	lsls	r4, r4, #10
    1998:	4323      	orrs	r3, r4
    199a:	6041      	str	r1, [r0, #4]
    199c:	7854      	ldrb	r4, [r2, #1]
    199e:	3c01      	subs	r4, #1
    19a0:	2c01      	cmp	r4, #1
    19a2:	d801      	bhi.n	19a8 <_system_pinmux_config+0x38>
    19a4:	4c12      	ldr	r4, [pc, #72]	; (19f0 <_system_pinmux_config+0x80>)
    19a6:	4023      	ands	r3, r4
    19a8:	24a0      	movs	r4, #160	; 0xa0
    19aa:	b28d      	uxth	r5, r1
    19ac:	05e4      	lsls	r4, r4, #23
    19ae:	432c      	orrs	r4, r5
    19b0:	431c      	orrs	r4, r3
    19b2:	6284      	str	r4, [r0, #40]	; 0x28
    19b4:	24d0      	movs	r4, #208	; 0xd0
    19b6:	0c0d      	lsrs	r5, r1, #16
    19b8:	0624      	lsls	r4, r4, #24
    19ba:	432c      	orrs	r4, r5
    19bc:	431c      	orrs	r4, r3
    19be:	6284      	str	r4, [r0, #40]	; 0x28
    19c0:	78d4      	ldrb	r4, [r2, #3]
    19c2:	2c00      	cmp	r4, #0
    19c4:	d10a      	bne.n	19dc <_system_pinmux_config+0x6c>
    19c6:	035b      	lsls	r3, r3, #13
    19c8:	d503      	bpl.n	19d2 <_system_pinmux_config+0x62>
    19ca:	7893      	ldrb	r3, [r2, #2]
    19cc:	2b01      	cmp	r3, #1
    19ce:	d10c      	bne.n	19ea <_system_pinmux_config+0x7a>
    19d0:	6181      	str	r1, [r0, #24]
    19d2:	7853      	ldrb	r3, [r2, #1]
    19d4:	3b01      	subs	r3, #1
    19d6:	2b01      	cmp	r3, #1
    19d8:	d800      	bhi.n	19dc <_system_pinmux_config+0x6c>
    19da:	6081      	str	r1, [r0, #8]
    19dc:	bd30      	pop	{r4, r5, pc}
    19de:	24c0      	movs	r4, #192	; 0xc0
    19e0:	02e4      	lsls	r4, r4, #11
    19e2:	e7d9      	b.n	1998 <_system_pinmux_config+0x28>
    19e4:	6041      	str	r1, [r0, #4]
    19e6:	2300      	movs	r3, #0
    19e8:	e7de      	b.n	19a8 <_system_pinmux_config+0x38>
    19ea:	6141      	str	r1, [r0, #20]
    19ec:	e7f1      	b.n	19d2 <_system_pinmux_config+0x62>
    19ee:	46c0      	nop			; (mov r8, r8)
    19f0:	fffbffff 	.word	0xfffbffff

000019f4 <system_pinmux_pin_set_config>:
    19f4:	b510      	push	{r4, lr}
    19f6:	0003      	movs	r3, r0
    19f8:	000a      	movs	r2, r1
    19fa:	0944      	lsrs	r4, r0, #5
    19fc:	09c1      	lsrs	r1, r0, #7
    19fe:	2000      	movs	r0, #0
    1a00:	4281      	cmp	r1, r0
    1a02:	d102      	bne.n	1a0a <system_pinmux_pin_set_config+0x16>
    1a04:	4904      	ldr	r1, [pc, #16]	; (1a18 <system_pinmux_pin_set_config+0x24>)
    1a06:	01e0      	lsls	r0, r4, #7
    1a08:	1840      	adds	r0, r0, r1
    1a0a:	211f      	movs	r1, #31
    1a0c:	400b      	ands	r3, r1
    1a0e:	391e      	subs	r1, #30
    1a10:	4099      	lsls	r1, r3
    1a12:	f7ff ffad 	bl	1970 <_system_pinmux_config>
    1a16:	bd10      	pop	{r4, pc}
    1a18:	41004400 	.word	0x41004400

00001a1c <_system_dummy_init>:
    1a1c:	4770      	bx	lr

00001a1e <system_init>:
    1a1e:	b510      	push	{r4, lr}
    1a20:	f7ff fe48 	bl	16b4 <system_clock_init>
    1a24:	f7ff fffa 	bl	1a1c <_system_dummy_init>
    1a28:	f7fe fdba 	bl	5a0 <_system_extint_init>
    1a2c:	f7ff fff6 	bl	1a1c <_system_dummy_init>
    1a30:	bd10      	pop	{r4, pc}

00001a32 <_tcc_get_inst_index>:
    1a32:	2000      	movs	r0, #0
    1a34:	4770      	bx	lr
	...

00001a38 <_tcc_set_compare_value.isra.5>:
    1a38:	b530      	push	{r4, r5, lr}
    1a3a:	0004      	movs	r4, r0
    1a3c:	2017      	movs	r0, #23
    1a3e:	2903      	cmp	r1, #3
    1a40:	d813      	bhi.n	1a6a <_tcc_set_compare_value.isra.5+0x32>
    1a42:	4d10      	ldr	r5, [pc, #64]	; (1a84 <_tcc_set_compare_value.isra.5+0x4c>)
    1a44:	42aa      	cmp	r2, r5
    1a46:	d810      	bhi.n	1a6a <_tcc_set_compare_value.isra.5+0x32>
    1a48:	2b00      	cmp	r3, #0
    1a4a:	d00f      	beq.n	1a6c <_tcc_set_compare_value.isra.5+0x34>
    1a4c:	2380      	movs	r3, #128	; 0x80
    1a4e:	025b      	lsls	r3, r3, #9
    1a50:	408b      	lsls	r3, r1
    1a52:	6b20      	ldr	r0, [r4, #48]	; 0x30
    1a54:	4203      	tst	r3, r0
    1a56:	d1fc      	bne.n	1a52 <_tcc_set_compare_value.isra.5+0x1a>
    1a58:	2580      	movs	r5, #128	; 0x80
    1a5a:	032d      	lsls	r5, r5, #12
    1a5c:	408d      	lsls	r5, r1
    1a5e:	68a0      	ldr	r0, [r4, #8]
    1a60:	4028      	ands	r0, r5
    1a62:	d1fc      	bne.n	1a5e <_tcc_set_compare_value.isra.5+0x26>
    1a64:	311c      	adds	r1, #28
    1a66:	0089      	lsls	r1, r1, #2
    1a68:	510a      	str	r2, [r1, r4]
    1a6a:	bd30      	pop	{r4, r5, pc}
    1a6c:	2080      	movs	r0, #128	; 0x80
    1a6e:	0040      	lsls	r0, r0, #1
    1a70:	4088      	lsls	r0, r1
    1a72:	68a3      	ldr	r3, [r4, #8]
    1a74:	4003      	ands	r3, r0
    1a76:	d1fc      	bne.n	1a72 <_tcc_set_compare_value.isra.5+0x3a>
    1a78:	3110      	adds	r1, #16
    1a7a:	0089      	lsls	r1, r1, #2
    1a7c:	1861      	adds	r1, r4, r1
    1a7e:	604a      	str	r2, [r1, #4]
    1a80:	0018      	movs	r0, r3
    1a82:	e7f2      	b.n	1a6a <_tcc_set_compare_value.isra.5+0x32>
    1a84:	00ffffff 	.word	0x00ffffff

00001a88 <tcc_get_config_defaults>:
    1a88:	4a37      	ldr	r2, [pc, #220]	; (1b68 <tcc_get_config_defaults+0xe0>)
    1a8a:	b510      	push	{r4, lr}
    1a8c:	6042      	str	r2, [r0, #4]
    1a8e:	0002      	movs	r2, r0
    1a90:	2300      	movs	r3, #0
    1a92:	0004      	movs	r4, r0
    1a94:	322c      	adds	r2, #44	; 0x2c
    1a96:	3448      	adds	r4, #72	; 0x48
    1a98:	6003      	str	r3, [r0, #0]
    1a9a:	7283      	strb	r3, [r0, #10]
    1a9c:	72c3      	strb	r3, [r0, #11]
    1a9e:	7303      	strb	r3, [r0, #12]
    1aa0:	7243      	strb	r3, [r0, #9]
    1aa2:	7203      	strb	r3, [r0, #8]
    1aa4:	61c3      	str	r3, [r0, #28]
    1aa6:	6203      	str	r3, [r0, #32]
    1aa8:	6243      	str	r3, [r0, #36]	; 0x24
    1aaa:	6283      	str	r3, [r0, #40]	; 0x28
    1aac:	7503      	strb	r3, [r0, #20]
    1aae:	7543      	strb	r3, [r0, #21]
    1ab0:	7583      	strb	r3, [r0, #22]
    1ab2:	75c3      	strb	r3, [r0, #23]
    1ab4:	7603      	strb	r3, [r0, #24]
    1ab6:	7643      	strb	r3, [r0, #25]
    1ab8:	7403      	strb	r3, [r0, #16]
    1aba:	7443      	strb	r3, [r0, #17]
    1abc:	7483      	strb	r3, [r0, #18]
    1abe:	74c3      	strb	r3, [r0, #19]
    1ac0:	7013      	strb	r3, [r2, #0]
    1ac2:	7053      	strb	r3, [r2, #1]
    1ac4:	7093      	strb	r3, [r2, #2]
    1ac6:	70d3      	strb	r3, [r2, #3]
    1ac8:	7113      	strb	r3, [r2, #4]
    1aca:	7153      	strb	r3, [r2, #5]
    1acc:	7193      	strb	r3, [r2, #6]
    1ace:	71d3      	strb	r3, [r2, #7]
    1ad0:	7213      	strb	r3, [r2, #8]
    1ad2:	7253      	strb	r3, [r2, #9]
    1ad4:	7293      	strb	r3, [r2, #10]
    1ad6:	72d3      	strb	r3, [r2, #11]
    1ad8:	320c      	adds	r2, #12
    1ada:	7013      	strb	r3, [r2, #0]
    1adc:	7053      	strb	r3, [r2, #1]
    1ade:	7093      	strb	r3, [r2, #2]
    1ae0:	70d3      	strb	r3, [r2, #3]
    1ae2:	7113      	strb	r3, [r2, #4]
    1ae4:	7153      	strb	r3, [r2, #5]
    1ae6:	7193      	strb	r3, [r2, #6]
    1ae8:	71d3      	strb	r3, [r2, #7]
    1aea:	7213      	strb	r3, [r2, #8]
    1aec:	7253      	strb	r3, [r2, #9]
    1aee:	7293      	strb	r3, [r2, #10]
    1af0:	72d3      	strb	r3, [r2, #11]
    1af2:	7313      	strb	r3, [r2, #12]
    1af4:	7353      	strb	r3, [r2, #13]
    1af6:	7393      	strb	r3, [r2, #14]
    1af8:	73d3      	strb	r3, [r2, #15]
    1afa:	1d01      	adds	r1, r0, #4
    1afc:	7023      	strb	r3, [r4, #0]
    1afe:	7063      	strb	r3, [r4, #1]
    1b00:	70a3      	strb	r3, [r4, #2]
    1b02:	70e3      	strb	r3, [r4, #3]
    1b04:	7123      	strb	r3, [r4, #4]
    1b06:	7163      	strb	r3, [r4, #5]
    1b08:	71a3      	strb	r3, [r4, #6]
    1b0a:	71e3      	strb	r3, [r4, #7]
    1b0c:	7223      	strb	r3, [r4, #8]
    1b0e:	7263      	strb	r3, [r4, #9]
    1b10:	72a3      	strb	r3, [r4, #10]
    1b12:	72e3      	strb	r3, [r4, #11]
    1b14:	7323      	strb	r3, [r4, #12]
    1b16:	7363      	strb	r3, [r4, #13]
    1b18:	73a3      	strb	r3, [r4, #14]
    1b1a:	73e3      	strb	r3, [r4, #15]
    1b1c:	3450      	adds	r4, #80	; 0x50
    1b1e:	7023      	strb	r3, [r4, #0]
    1b20:	6583      	str	r3, [r0, #88]	; 0x58
    1b22:	6783      	str	r3, [r0, #120]	; 0x78
    1b24:	7063      	strb	r3, [r4, #1]
    1b26:	65c3      	str	r3, [r0, #92]	; 0x5c
    1b28:	67c3      	str	r3, [r0, #124]	; 0x7c
    1b2a:	70a3      	strb	r3, [r4, #2]
    1b2c:	6603      	str	r3, [r0, #96]	; 0x60
    1b2e:	67cb      	str	r3, [r1, #124]	; 0x7c
    1b30:	3197      	adds	r1, #151	; 0x97
    1b32:	700b      	strb	r3, [r1, #0]
    1b34:	2101      	movs	r1, #1
    1b36:	3a30      	subs	r2, #48	; 0x30
    1b38:	6643      	str	r3, [r0, #100]	; 0x64
    1b3a:	67d3      	str	r3, [r2, #124]	; 0x7c
    1b3c:	3294      	adds	r2, #148	; 0x94
    1b3e:	7013      	strb	r3, [r2, #0]
    1b40:	3a14      	subs	r2, #20
    1b42:	6683      	str	r3, [r0, #104]	; 0x68
    1b44:	6013      	str	r3, [r2, #0]
    1b46:	7553      	strb	r3, [r2, #21]
    1b48:	3204      	adds	r2, #4
    1b4a:	66c3      	str	r3, [r0, #108]	; 0x6c
    1b4c:	6013      	str	r3, [r2, #0]
    1b4e:	7493      	strb	r3, [r2, #18]
    1b50:	3204      	adds	r2, #4
    1b52:	6703      	str	r3, [r0, #112]	; 0x70
    1b54:	6013      	str	r3, [r2, #0]
    1b56:	73d3      	strb	r3, [r2, #15]
    1b58:	6743      	str	r3, [r0, #116]	; 0x74
    1b5a:	3204      	adds	r2, #4
    1b5c:	30a1      	adds	r0, #161	; 0xa1
    1b5e:	6013      	str	r3, [r2, #0]
    1b60:	7311      	strb	r1, [r2, #12]
    1b62:	7003      	strb	r3, [r0, #0]
    1b64:	bd10      	pop	{r4, pc}
    1b66:	46c0      	nop			; (mov r8, r8)
    1b68:	00ffffff 	.word	0x00ffffff

00001b6c <tcc_init>:
    1b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b6e:	0006      	movs	r6, r0
    1b70:	b08f      	sub	sp, #60	; 0x3c
    1b72:	0008      	movs	r0, r1
    1b74:	000d      	movs	r5, r1
    1b76:	0014      	movs	r4, r2
    1b78:	f7ff ff5b 	bl	1a32 <_tcc_get_inst_index>
    1b7c:	2320      	movs	r3, #32
    1b7e:	4aa3      	ldr	r2, [pc, #652]	; (1e0c <tcc_init+0x2a0>)
    1b80:	9009      	str	r0, [sp, #36]	; 0x24
    1b82:	6a11      	ldr	r1, [r2, #32]
    1b84:	201c      	movs	r0, #28
    1b86:	430b      	orrs	r3, r1
    1b88:	6213      	str	r3, [r2, #32]
    1b8a:	682b      	ldr	r3, [r5, #0]
    1b8c:	079b      	lsls	r3, r3, #30
    1b8e:	d407      	bmi.n	1ba0 <tcc_init+0x34>
    1b90:	682b      	ldr	r3, [r5, #0]
    1b92:	07db      	lsls	r3, r3, #31
    1b94:	d404      	bmi.n	1ba0 <tcc_init+0x34>
    1b96:	4a9e      	ldr	r2, [pc, #632]	; (1e10 <tcc_init+0x2a4>)
    1b98:	6823      	ldr	r3, [r4, #0]
    1b9a:	4293      	cmp	r3, r2
    1b9c:	d902      	bls.n	1ba4 <tcc_init+0x38>
    1b9e:	2017      	movs	r0, #23
    1ba0:	b00f      	add	sp, #60	; 0x3c
    1ba2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ba4:	6863      	ldr	r3, [r4, #4]
    1ba6:	4293      	cmp	r3, r2
    1ba8:	d8f9      	bhi.n	1b9e <tcc_init+0x32>
    1baa:	0023      	movs	r3, r4
    1bac:	0021      	movs	r1, r4
    1bae:	331c      	adds	r3, #28
    1bb0:	312c      	adds	r1, #44	; 0x2c
    1bb2:	6818      	ldr	r0, [r3, #0]
    1bb4:	4290      	cmp	r0, r2
    1bb6:	d8f2      	bhi.n	1b9e <tcc_init+0x32>
    1bb8:	3304      	adds	r3, #4
    1bba:	428b      	cmp	r3, r1
    1bbc:	d1f9      	bne.n	1bb2 <tcc_init+0x46>
    1bbe:	2200      	movs	r2, #0
    1bc0:	2180      	movs	r1, #128	; 0x80
    1bc2:	9202      	str	r2, [sp, #8]
    1bc4:	0449      	lsls	r1, r1, #17
    1bc6:	18a0      	adds	r0, r4, r2
    1bc8:	7c00      	ldrb	r0, [r0, #16]
    1bca:	2801      	cmp	r0, #1
    1bcc:	d104      	bne.n	1bd8 <tcc_init+0x6c>
    1bce:	0008      	movs	r0, r1
    1bd0:	4090      	lsls	r0, r2
    1bd2:	9f02      	ldr	r7, [sp, #8]
    1bd4:	4307      	orrs	r7, r0
    1bd6:	9702      	str	r7, [sp, #8]
    1bd8:	3201      	adds	r2, #1
    1bda:	2a04      	cmp	r2, #4
    1bdc:	d1f3      	bne.n	1bc6 <tcc_init+0x5a>
    1bde:	0022      	movs	r2, r4
    1be0:	32a1      	adds	r2, #161	; 0xa1
    1be2:	7812      	ldrb	r2, [r2, #0]
    1be4:	2a00      	cmp	r2, #0
    1be6:	d004      	beq.n	1bf2 <tcc_init+0x86>
    1be8:	2280      	movs	r2, #128	; 0x80
    1bea:	9902      	ldr	r1, [sp, #8]
    1bec:	0112      	lsls	r2, r2, #4
    1bee:	4311      	orrs	r1, r2
    1bf0:	9102      	str	r1, [sp, #8]
    1bf2:	7a22      	ldrb	r2, [r4, #8]
    1bf4:	1e51      	subs	r1, r2, #1
    1bf6:	418a      	sbcs	r2, r1
    1bf8:	0092      	lsls	r2, r2, #2
    1bfa:	9203      	str	r2, [sp, #12]
    1bfc:	7a62      	ldrb	r2, [r4, #9]
    1bfe:	2a01      	cmp	r2, #1
    1c00:	d102      	bne.n	1c08 <tcc_init+0x9c>
    1c02:	9903      	ldr	r1, [sp, #12]
    1c04:	4311      	orrs	r1, r2
    1c06:	9103      	str	r1, [sp, #12]
    1c08:	7b22      	ldrb	r2, [r4, #12]
    1c0a:	9206      	str	r2, [sp, #24]
    1c0c:	7ae2      	ldrb	r2, [r4, #11]
    1c0e:	9207      	str	r2, [sp, #28]
    1c10:	2200      	movs	r2, #0
    1c12:	4694      	mov	ip, r2
    1c14:	7a5f      	ldrb	r7, [r3, #9]
    1c16:	2f03      	cmp	r7, #3
    1c18:	d8c1      	bhi.n	1b9e <tcc_init+0x32>
    1c1a:	7819      	ldrb	r1, [r3, #0]
    1c1c:	290f      	cmp	r1, #15
    1c1e:	d8be      	bhi.n	1b9e <tcc_init+0x32>
    1c20:	20f0      	movs	r0, #240	; 0xf0
    1c22:	785a      	ldrb	r2, [r3, #1]
    1c24:	0500      	lsls	r0, r0, #20
    1c26:	0609      	lsls	r1, r1, #24
    1c28:	4001      	ands	r1, r0
    1c2a:	0412      	lsls	r2, r2, #16
    1c2c:	430a      	orrs	r2, r1
    1c2e:	7899      	ldrb	r1, [r3, #2]
    1c30:	9201      	str	r2, [sp, #4]
    1c32:	1e48      	subs	r0, r1, #1
    1c34:	4181      	sbcs	r1, r0
    1c36:	01c9      	lsls	r1, r1, #7
    1c38:	9104      	str	r1, [sp, #16]
    1c3a:	78d9      	ldrb	r1, [r3, #3]
    1c3c:	2203      	movs	r2, #3
    1c3e:	1e48      	subs	r0, r1, #1
    1c40:	4181      	sbcs	r1, r0
    1c42:	7918      	ldrb	r0, [r3, #4]
    1c44:	00c9      	lsls	r1, r1, #3
    1c46:	9105      	str	r1, [sp, #20]
    1c48:	1e41      	subs	r1, r0, #1
    1c4a:	4188      	sbcs	r0, r1
    1c4c:	0101      	lsls	r1, r0, #4
    1c4e:	2060      	movs	r0, #96	; 0x60
    1c50:	9108      	str	r1, [sp, #32]
    1c52:	7999      	ldrb	r1, [r3, #6]
    1c54:	02bf      	lsls	r7, r7, #10
    1c56:	0149      	lsls	r1, r1, #5
    1c58:	4001      	ands	r1, r0
    1c5a:	7958      	ldrb	r0, [r3, #5]
    1c5c:	4010      	ands	r0, r2
    1c5e:	9a01      	ldr	r2, [sp, #4]
    1c60:	4302      	orrs	r2, r0
    1c62:	430a      	orrs	r2, r1
    1c64:	21c0      	movs	r1, #192	; 0xc0
    1c66:	79d8      	ldrb	r0, [r3, #7]
    1c68:	0089      	lsls	r1, r1, #2
    1c6a:	0200      	lsls	r0, r0, #8
    1c6c:	4001      	ands	r1, r0
    1c6e:	20e0      	movs	r0, #224	; 0xe0
    1c70:	4311      	orrs	r1, r2
    1c72:	7a1a      	ldrb	r2, [r3, #8]
    1c74:	01c0      	lsls	r0, r0, #7
    1c76:	0312      	lsls	r2, r2, #12
    1c78:	4002      	ands	r2, r0
    1c7a:	20c0      	movs	r0, #192	; 0xc0
    1c7c:	0100      	lsls	r0, r0, #4
    1c7e:	4311      	orrs	r1, r2
    1c80:	4007      	ands	r7, r0
    1c82:	430f      	orrs	r7, r1
    1c84:	4661      	mov	r1, ip
    1c86:	9a04      	ldr	r2, [sp, #16]
    1c88:	330a      	adds	r3, #10
    1c8a:	4317      	orrs	r7, r2
    1c8c:	9a05      	ldr	r2, [sp, #20]
    1c8e:	4317      	orrs	r7, r2
    1c90:	9a08      	ldr	r2, [sp, #32]
    1c92:	4317      	orrs	r7, r2
    1c94:	aa0c      	add	r2, sp, #48	; 0x30
    1c96:	508f      	str	r7, [r1, r2]
    1c98:	2204      	movs	r2, #4
    1c9a:	4494      	add	ip, r2
    1c9c:	4662      	mov	r2, ip
    1c9e:	2a08      	cmp	r2, #8
    1ca0:	d1b8      	bne.n	1c14 <tcc_init+0xa8>
    1ca2:	2280      	movs	r2, #128	; 0x80
    1ca4:	2300      	movs	r3, #0
    1ca6:	0252      	lsls	r2, r2, #9
    1ca8:	2002      	movs	r0, #2
    1caa:	4694      	mov	ip, r2
    1cac:	9301      	str	r3, [sp, #4]
    1cae:	30ff      	adds	r0, #255	; 0xff
    1cb0:	18e2      	adds	r2, r4, r3
    1cb2:	0017      	movs	r7, r2
    1cb4:	3750      	adds	r7, #80	; 0x50
    1cb6:	783f      	ldrb	r7, [r7, #0]
    1cb8:	2f00      	cmp	r7, #0
    1cba:	d004      	beq.n	1cc6 <tcc_init+0x15a>
    1cbc:	4667      	mov	r7, ip
    1cbe:	409f      	lsls	r7, r3
    1cc0:	9901      	ldr	r1, [sp, #4]
    1cc2:	4339      	orrs	r1, r7
    1cc4:	9101      	str	r1, [sp, #4]
    1cc6:	001f      	movs	r7, r3
    1cc8:	3741      	adds	r7, #65	; 0x41
    1cca:	5dd2      	ldrb	r2, [r2, r7]
    1ccc:	2a00      	cmp	r2, #0
    1cce:	d007      	beq.n	1ce0 <tcc_init+0x174>
    1cd0:	2a02      	cmp	r2, #2
    1cd2:	d000      	beq.n	1cd6 <tcc_init+0x16a>
    1cd4:	e098      	b.n	1e08 <tcc_init+0x29c>
    1cd6:	0002      	movs	r2, r0
    1cd8:	409a      	lsls	r2, r3
    1cda:	9901      	ldr	r1, [sp, #4]
    1cdc:	4311      	orrs	r1, r2
    1cde:	9101      	str	r1, [sp, #4]
    1ce0:	3301      	adds	r3, #1
    1ce2:	2b08      	cmp	r3, #8
    1ce4:	d1e4      	bne.n	1cb0 <tcc_init+0x144>
    1ce6:	2230      	movs	r2, #48	; 0x30
    1ce8:	2107      	movs	r1, #7
    1cea:	7e63      	ldrb	r3, [r4, #25]
    1cec:	011b      	lsls	r3, r3, #4
    1cee:	4013      	ands	r3, r2
    1cf0:	7e22      	ldrb	r2, [r4, #24]
    1cf2:	400a      	ands	r2, r1
    1cf4:	4313      	orrs	r3, r2
    1cf6:	2280      	movs	r2, #128	; 0x80
    1cf8:	9304      	str	r3, [sp, #16]
    1cfa:	2300      	movs	r3, #0
    1cfc:	0252      	lsls	r2, r2, #9
    1cfe:	18e1      	adds	r1, r4, r3
    1d00:	7d09      	ldrb	r1, [r1, #20]
    1d02:	2900      	cmp	r1, #0
    1d04:	d004      	beq.n	1d10 <tcc_init+0x1a4>
    1d06:	0011      	movs	r1, r2
    1d08:	4099      	lsls	r1, r3
    1d0a:	9804      	ldr	r0, [sp, #16]
    1d0c:	4308      	orrs	r0, r1
    1d0e:	9004      	str	r0, [sp, #16]
    1d10:	3301      	adds	r3, #1
    1d12:	2b04      	cmp	r3, #4
    1d14:	d1f3      	bne.n	1cfe <tcc_init+0x192>
    1d16:	0031      	movs	r1, r6
    1d18:	2300      	movs	r3, #0
    1d1a:	1d32      	adds	r2, r6, #4
    1d1c:	3134      	adds	r1, #52	; 0x34
    1d1e:	c208      	stmia	r2!, {r3}
    1d20:	428a      	cmp	r2, r1
    1d22:	d1fc      	bne.n	1d1e <tcc_init+0x1b2>
    1d24:	6373      	str	r3, [r6, #52]	; 0x34
    1d26:	63b3      	str	r3, [r6, #56]	; 0x38
    1d28:	9b09      	ldr	r3, [sp, #36]	; 0x24
    1d2a:	aa0a      	add	r2, sp, #40	; 0x28
    1d2c:	0098      	lsls	r0, r3, #2
    1d2e:	4b39      	ldr	r3, [pc, #228]	; (1e14 <tcc_init+0x2a8>)
    1d30:	0011      	movs	r1, r2
    1d32:	50c6      	str	r6, [r0, r3]
    1d34:	0023      	movs	r3, r4
    1d36:	6035      	str	r5, [r6, #0]
    1d38:	33a0      	adds	r3, #160	; 0xa0
    1d3a:	781b      	ldrb	r3, [r3, #0]
    1d3c:	363c      	adds	r6, #60	; 0x3c
    1d3e:	7033      	strb	r3, [r6, #0]
    1d40:	7aa3      	ldrb	r3, [r4, #10]
    1d42:	2011      	movs	r0, #17
    1d44:	7013      	strb	r3, [r2, #0]
    1d46:	f7ff fdf3 	bl	1930 <system_gclk_chan_set_config>
    1d4a:	2011      	movs	r0, #17
    1d4c:	f7ff fdb4 	bl	18b8 <system_gclk_chan_enable>
    1d50:	0023      	movs	r3, r4
    1d52:	0027      	movs	r7, r4
    1d54:	0026      	movs	r6, r4
    1d56:	3378      	adds	r3, #120	; 0x78
    1d58:	3798      	adds	r7, #152	; 0x98
    1d5a:	3658      	adds	r6, #88	; 0x58
    1d5c:	9305      	str	r3, [sp, #20]
    1d5e:	783b      	ldrb	r3, [r7, #0]
    1d60:	2b00      	cmp	r3, #0
    1d62:	d00d      	beq.n	1d80 <tcc_init+0x214>
    1d64:	2301      	movs	r3, #1
    1d66:	a90b      	add	r1, sp, #44	; 0x2c
    1d68:	708b      	strb	r3, [r1, #2]
    1d6a:	2300      	movs	r3, #0
    1d6c:	70cb      	strb	r3, [r1, #3]
    1d6e:	3320      	adds	r3, #32
    1d70:	18f3      	adds	r3, r6, r3
    1d72:	781b      	ldrb	r3, [r3, #0]
    1d74:	7830      	ldrb	r0, [r6, #0]
    1d76:	700b      	strb	r3, [r1, #0]
    1d78:	2301      	movs	r3, #1
    1d7a:	704b      	strb	r3, [r1, #1]
    1d7c:	f7ff fe3a 	bl	19f4 <system_pinmux_pin_set_config>
    1d80:	9b05      	ldr	r3, [sp, #20]
    1d82:	3604      	adds	r6, #4
    1d84:	3701      	adds	r7, #1
    1d86:	42b3      	cmp	r3, r6
    1d88:	d1e9      	bne.n	1d5e <tcc_init+0x1f2>
    1d8a:	9b06      	ldr	r3, [sp, #24]
    1d8c:	9a07      	ldr	r2, [sp, #28]
    1d8e:	031b      	lsls	r3, r3, #12
    1d90:	0212      	lsls	r2, r2, #8
    1d92:	4313      	orrs	r3, r2
    1d94:	9a02      	ldr	r2, [sp, #8]
    1d96:	4313      	orrs	r3, r2
    1d98:	602b      	str	r3, [r5, #0]
    1d9a:	2304      	movs	r3, #4
    1d9c:	68aa      	ldr	r2, [r5, #8]
    1d9e:	421a      	tst	r2, r3
    1da0:	d1fc      	bne.n	1d9c <tcc_init+0x230>
    1da2:	23ff      	movs	r3, #255	; 0xff
    1da4:	712b      	strb	r3, [r5, #4]
    1da6:	3bfb      	subs	r3, #251	; 0xfb
    1da8:	68aa      	ldr	r2, [r5, #8]
    1daa:	421a      	tst	r2, r3
    1dac:	d1fc      	bne.n	1da8 <tcc_init+0x23c>
    1dae:	466b      	mov	r3, sp
    1db0:	7b1b      	ldrb	r3, [r3, #12]
    1db2:	716b      	strb	r3, [r5, #5]
    1db4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    1db6:	60eb      	str	r3, [r5, #12]
    1db8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    1dba:	612b      	str	r3, [r5, #16]
    1dbc:	9b01      	ldr	r3, [sp, #4]
    1dbe:	61ab      	str	r3, [r5, #24]
    1dc0:	4b15      	ldr	r3, [pc, #84]	; (1e18 <tcc_init+0x2ac>)
    1dc2:	68aa      	ldr	r2, [r5, #8]
    1dc4:	421a      	tst	r2, r3
    1dc6:	d1fc      	bne.n	1dc2 <tcc_init+0x256>
    1dc8:	9b04      	ldr	r3, [sp, #16]
    1dca:	63eb      	str	r3, [r5, #60]	; 0x3c
    1dcc:	2310      	movs	r3, #16
    1dce:	68aa      	ldr	r2, [r5, #8]
    1dd0:	421a      	tst	r2, r3
    1dd2:	d1fc      	bne.n	1dce <tcc_init+0x262>
    1dd4:	6823      	ldr	r3, [r4, #0]
    1dd6:	4a11      	ldr	r2, [pc, #68]	; (1e1c <tcc_init+0x2b0>)
    1dd8:	636b      	str	r3, [r5, #52]	; 0x34
    1dda:	68ab      	ldr	r3, [r5, #8]
    1ddc:	4013      	ands	r3, r2
    1dde:	d1fc      	bne.n	1dda <tcc_init+0x26e>
    1de0:	6862      	ldr	r2, [r4, #4]
    1de2:	490f      	ldr	r1, [pc, #60]	; (1e20 <tcc_init+0x2b4>)
    1de4:	642a      	str	r2, [r5, #64]	; 0x40
    1de6:	000a      	movs	r2, r1
    1de8:	409a      	lsls	r2, r3
    1dea:	68a8      	ldr	r0, [r5, #8]
    1dec:	4010      	ands	r0, r2
    1dee:	d1fc      	bne.n	1dea <tcc_init+0x27e>
    1df0:	009a      	lsls	r2, r3, #2
    1df2:	18a2      	adds	r2, r4, r2
    1df4:	69d6      	ldr	r6, [r2, #28]
    1df6:	001a      	movs	r2, r3
    1df8:	3210      	adds	r2, #16
    1dfa:	0092      	lsls	r2, r2, #2
    1dfc:	18aa      	adds	r2, r5, r2
    1dfe:	3301      	adds	r3, #1
    1e00:	6056      	str	r6, [r2, #4]
    1e02:	2b04      	cmp	r3, #4
    1e04:	d1ef      	bne.n	1de6 <tcc_init+0x27a>
    1e06:	e6cb      	b.n	1ba0 <tcc_init+0x34>
    1e08:	2201      	movs	r2, #1
    1e0a:	e765      	b.n	1cd8 <tcc_init+0x16c>
    1e0c:	40000400 	.word	0x40000400
    1e10:	00ffffff 	.word	0x00ffffff
    1e14:	20000204 	.word	0x20000204
    1e18:	00020040 	.word	0x00020040
    1e1c:	00040080 	.word	0x00040080
    1e20:	00080100 	.word	0x00080100

00001e24 <tcc_set_compare_value>:
    1e24:	0003      	movs	r3, r0
    1e26:	b510      	push	{r4, lr}
    1e28:	333c      	adds	r3, #60	; 0x3c
    1e2a:	781b      	ldrb	r3, [r3, #0]
    1e2c:	6800      	ldr	r0, [r0, #0]
    1e2e:	f7ff fe03 	bl	1a38 <_tcc_set_compare_value.isra.5>
    1e32:	bd10      	pop	{r4, pc}

00001e34 <_tcc_interrupt_handler>:
    1e34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e36:	2500      	movs	r5, #0
    1e38:	4b0b      	ldr	r3, [pc, #44]	; (1e68 <_tcc_interrupt_handler+0x34>)
    1e3a:	0080      	lsls	r0, r0, #2
    1e3c:	58c4      	ldr	r4, [r0, r3]
    1e3e:	6823      	ldr	r3, [r4, #0]
    1e40:	6b62      	ldr	r2, [r4, #52]	; 0x34
    1e42:	6ade      	ldr	r6, [r3, #44]	; 0x2c
    1e44:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    1e46:	4013      	ands	r3, r2
    1e48:	401e      	ands	r6, r3
    1e4a:	4b08      	ldr	r3, [pc, #32]	; (1e6c <_tcc_interrupt_handler+0x38>)
    1e4c:	58ef      	ldr	r7, [r5, r3]
    1e4e:	4237      	tst	r7, r6
    1e50:	d005      	beq.n	1e5e <_tcc_interrupt_handler+0x2a>
    1e52:	1963      	adds	r3, r4, r5
    1e54:	685b      	ldr	r3, [r3, #4]
    1e56:	0020      	movs	r0, r4
    1e58:	4798      	blx	r3
    1e5a:	6823      	ldr	r3, [r4, #0]
    1e5c:	62df      	str	r7, [r3, #44]	; 0x2c
    1e5e:	3504      	adds	r5, #4
    1e60:	2d30      	cmp	r5, #48	; 0x30
    1e62:	d1f2      	bne.n	1e4a <_tcc_interrupt_handler+0x16>
    1e64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1e66:	46c0      	nop			; (mov r8, r8)
    1e68:	20000204 	.word	0x20000204
    1e6c:	0000285c 	.word	0x0000285c

00001e70 <TCC0_Handler>:
    1e70:	b510      	push	{r4, lr}
    1e72:	2000      	movs	r0, #0
    1e74:	f7ff ffde 	bl	1e34 <_tcc_interrupt_handler>
    1e78:	bd10      	pop	{r4, pc}

00001e7a <tc_register_callback>:
    1e7a:	1c93      	adds	r3, r2, #2
    1e7c:	009b      	lsls	r3, r3, #2
    1e7e:	5019      	str	r1, [r3, r0]
    1e80:	7e03      	ldrb	r3, [r0, #24]
    1e82:	2a02      	cmp	r2, #2
    1e84:	d104      	bne.n	1e90 <tc_register_callback+0x16>
    1e86:	320e      	adds	r2, #14
    1e88:	4313      	orrs	r3, r2
    1e8a:	7603      	strb	r3, [r0, #24]
    1e8c:	2000      	movs	r0, #0
    1e8e:	4770      	bx	lr
    1e90:	2a03      	cmp	r2, #3
    1e92:	d101      	bne.n	1e98 <tc_register_callback+0x1e>
    1e94:	321d      	adds	r2, #29
    1e96:	e7f7      	b.n	1e88 <tc_register_callback+0xe>
    1e98:	2101      	movs	r1, #1
    1e9a:	4091      	lsls	r1, r2
    1e9c:	430b      	orrs	r3, r1
    1e9e:	e7f4      	b.n	1e8a <tc_register_callback+0x10>

00001ea0 <_tc_interrupt_handler>:
    1ea0:	b570      	push	{r4, r5, r6, lr}
    1ea2:	2601      	movs	r6, #1
    1ea4:	4b14      	ldr	r3, [pc, #80]	; (1ef8 <_tc_interrupt_handler+0x58>)
    1ea6:	0080      	lsls	r0, r0, #2
    1ea8:	58c4      	ldr	r4, [r0, r3]
    1eaa:	6823      	ldr	r3, [r4, #0]
    1eac:	7e22      	ldrb	r2, [r4, #24]
    1eae:	7e65      	ldrb	r5, [r4, #25]
    1eb0:	7b9b      	ldrb	r3, [r3, #14]
    1eb2:	4015      	ands	r5, r2
    1eb4:	401d      	ands	r5, r3
    1eb6:	4235      	tst	r5, r6
    1eb8:	d004      	beq.n	1ec4 <_tc_interrupt_handler+0x24>
    1eba:	68a3      	ldr	r3, [r4, #8]
    1ebc:	0020      	movs	r0, r4
    1ebe:	4798      	blx	r3
    1ec0:	6823      	ldr	r3, [r4, #0]
    1ec2:	739e      	strb	r6, [r3, #14]
    1ec4:	2602      	movs	r6, #2
    1ec6:	4235      	tst	r5, r6
    1ec8:	d004      	beq.n	1ed4 <_tc_interrupt_handler+0x34>
    1eca:	68e3      	ldr	r3, [r4, #12]
    1ecc:	0020      	movs	r0, r4
    1ece:	4798      	blx	r3
    1ed0:	6823      	ldr	r3, [r4, #0]
    1ed2:	739e      	strb	r6, [r3, #14]
    1ed4:	2610      	movs	r6, #16
    1ed6:	4235      	tst	r5, r6
    1ed8:	d004      	beq.n	1ee4 <_tc_interrupt_handler+0x44>
    1eda:	6923      	ldr	r3, [r4, #16]
    1edc:	0020      	movs	r0, r4
    1ede:	4798      	blx	r3
    1ee0:	6823      	ldr	r3, [r4, #0]
    1ee2:	739e      	strb	r6, [r3, #14]
    1ee4:	2620      	movs	r6, #32
    1ee6:	4235      	tst	r5, r6
    1ee8:	d004      	beq.n	1ef4 <_tc_interrupt_handler+0x54>
    1eea:	6963      	ldr	r3, [r4, #20]
    1eec:	0020      	movs	r0, r4
    1eee:	4798      	blx	r3
    1ef0:	6823      	ldr	r3, [r4, #0]
    1ef2:	739e      	strb	r6, [r3, #14]
    1ef4:	bd70      	pop	{r4, r5, r6, pc}
    1ef6:	46c0      	nop			; (mov r8, r8)
    1ef8:	20000208 	.word	0x20000208

00001efc <TC1_Handler>:
    1efc:	b510      	push	{r4, lr}
    1efe:	2000      	movs	r0, #0
    1f00:	f7ff ffce 	bl	1ea0 <_tc_interrupt_handler>
    1f04:	bd10      	pop	{r4, pc}

00001f06 <TC2_Handler>:
    1f06:	b510      	push	{r4, lr}
    1f08:	2001      	movs	r0, #1
    1f0a:	f7ff ffc9 	bl	1ea0 <_tc_interrupt_handler>
    1f0e:	bd10      	pop	{r4, pc}

00001f10 <_tc_get_inst_index>:
    1f10:	4b06      	ldr	r3, [pc, #24]	; (1f2c <_tc_get_inst_index+0x1c>)
    1f12:	4298      	cmp	r0, r3
    1f14:	d007      	beq.n	1f26 <_tc_get_inst_index+0x16>
    1f16:	4a06      	ldr	r2, [pc, #24]	; (1f30 <_tc_get_inst_index+0x20>)
    1f18:	2300      	movs	r3, #0
    1f1a:	4290      	cmp	r0, r2
    1f1c:	d101      	bne.n	1f22 <_tc_get_inst_index+0x12>
    1f1e:	3301      	adds	r3, #1
    1f20:	b2db      	uxtb	r3, r3
    1f22:	0018      	movs	r0, r3
    1f24:	4770      	bx	lr
    1f26:	2300      	movs	r3, #0
    1f28:	e7fa      	b.n	1f20 <_tc_get_inst_index+0x10>
    1f2a:	46c0      	nop			; (mov r8, r8)
    1f2c:	42001800 	.word	0x42001800
    1f30:	42001c00 	.word	0x42001c00

00001f34 <tc_init>:
    1f34:	b5f0      	push	{r4, r5, r6, r7, lr}
    1f36:	0005      	movs	r5, r0
    1f38:	b085      	sub	sp, #20
    1f3a:	0008      	movs	r0, r1
    1f3c:	0014      	movs	r4, r2
    1f3e:	000e      	movs	r6, r1
    1f40:	f7ff ffe6 	bl	1f10 <_tc_get_inst_index>
    1f44:	466a      	mov	r2, sp
    1f46:	2312      	movs	r3, #18
    1f48:	7113      	strb	r3, [r2, #4]
    1f4a:	7153      	strb	r3, [r2, #5]
    1f4c:	332e      	adds	r3, #46	; 0x2e
    1f4e:	8113      	strh	r3, [r2, #8]
    1f50:	3340      	adds	r3, #64	; 0x40
    1f52:	8153      	strh	r3, [r2, #10]
    1f54:	2300      	movs	r3, #0
    1f56:	60ab      	str	r3, [r5, #8]
    1f58:	60eb      	str	r3, [r5, #12]
    1f5a:	612b      	str	r3, [r5, #16]
    1f5c:	616b      	str	r3, [r5, #20]
    1f5e:	762b      	strb	r3, [r5, #24]
    1f60:	766b      	strb	r3, [r5, #25]
    1f62:	4b7c      	ldr	r3, [pc, #496]	; (2154 <tc_init+0x220>)
    1f64:	0082      	lsls	r2, r0, #2
    1f66:	50d5      	str	r5, [r2, r3]
    1f68:	602e      	str	r6, [r5, #0]
    1f6a:	78a3      	ldrb	r3, [r4, #2]
    1f6c:	0007      	movs	r7, r0
    1f6e:	2b08      	cmp	r3, #8
    1f70:	d103      	bne.n	1f7a <tc_init+0x46>
    1f72:	2017      	movs	r0, #23
    1f74:	07fa      	lsls	r2, r7, #31
    1f76:	d500      	bpl.n	1f7a <tc_init+0x46>
    1f78:	e0d5      	b.n	2126 <tc_init+0x1f2>
    1f7a:	2201      	movs	r2, #1
    1f7c:	712b      	strb	r3, [r5, #4]
    1f7e:	8833      	ldrh	r3, [r6, #0]
    1f80:	2005      	movs	r0, #5
    1f82:	4213      	tst	r3, r2
    1f84:	d000      	beq.n	1f88 <tc_init+0x54>
    1f86:	e0ce      	b.n	2126 <tc_init+0x1f2>
    1f88:	7bf3      	ldrb	r3, [r6, #15]
    1f8a:	3017      	adds	r0, #23
    1f8c:	06db      	lsls	r3, r3, #27
    1f8e:	d500      	bpl.n	1f92 <tc_init+0x5e>
    1f90:	e0c9      	b.n	2126 <tc_init+0x1f2>
    1f92:	2102      	movs	r1, #2
    1f94:	8833      	ldrh	r3, [r6, #0]
    1f96:	400b      	ands	r3, r1
    1f98:	d000      	beq.n	1f9c <tc_init+0x68>
    1f9a:	e0c4      	b.n	2126 <tc_init+0x1f2>
    1f9c:	7c21      	ldrb	r1, [r4, #16]
    1f9e:	2900      	cmp	r1, #0
    1fa0:	d008      	beq.n	1fb4 <tc_init+0x80>
    1fa2:	a903      	add	r1, sp, #12
    1fa4:	70cb      	strb	r3, [r1, #3]
    1fa6:	7e23      	ldrb	r3, [r4, #24]
    1fa8:	7d20      	ldrb	r0, [r4, #20]
    1faa:	708a      	strb	r2, [r1, #2]
    1fac:	700b      	strb	r3, [r1, #0]
    1fae:	704a      	strb	r2, [r1, #1]
    1fb0:	f7ff fd20 	bl	19f4 <system_pinmux_pin_set_config>
    1fb4:	7f23      	ldrb	r3, [r4, #28]
    1fb6:	2b00      	cmp	r3, #0
    1fb8:	d00e      	beq.n	1fd8 <tc_init+0xa4>
    1fba:	2200      	movs	r2, #0
    1fbc:	2301      	movs	r3, #1
    1fbe:	a903      	add	r1, sp, #12
    1fc0:	70ca      	strb	r2, [r1, #3]
    1fc2:	3224      	adds	r2, #36	; 0x24
    1fc4:	708b      	strb	r3, [r1, #2]
    1fc6:	18a2      	adds	r2, r4, r2
    1fc8:	704b      	strb	r3, [r1, #1]
    1fca:	331f      	adds	r3, #31
    1fcc:	7812      	ldrb	r2, [r2, #0]
    1fce:	18e3      	adds	r3, r4, r3
    1fd0:	7818      	ldrb	r0, [r3, #0]
    1fd2:	700a      	strb	r2, [r1, #0]
    1fd4:	f7ff fd0e 	bl	19f4 <system_pinmux_pin_set_config>
    1fd8:	007a      	lsls	r2, r7, #1
    1fda:	4694      	mov	ip, r2
    1fdc:	4668      	mov	r0, sp
    1fde:	2208      	movs	r2, #8
    1fe0:	1880      	adds	r0, r0, r2
    1fe2:	4662      	mov	r2, ip
    1fe4:	4b5c      	ldr	r3, [pc, #368]	; (2158 <tc_init+0x224>)
    1fe6:	5a82      	ldrh	r2, [r0, r2]
    1fe8:	6a19      	ldr	r1, [r3, #32]
    1fea:	430a      	orrs	r2, r1
    1fec:	621a      	str	r2, [r3, #32]
    1fee:	78a2      	ldrb	r2, [r4, #2]
    1ff0:	2a08      	cmp	r2, #8
    1ff2:	d10a      	bne.n	200a <tc_init+0xd6>
    1ff4:	1c79      	adds	r1, r7, #1
    1ff6:	004a      	lsls	r2, r1, #1
    1ff8:	4694      	mov	ip, r2
    1ffa:	2108      	movs	r1, #8
    1ffc:	466a      	mov	r2, sp
    1ffe:	1852      	adds	r2, r2, r1
    2000:	4661      	mov	r1, ip
    2002:	6a18      	ldr	r0, [r3, #32]
    2004:	5a52      	ldrh	r2, [r2, r1]
    2006:	4302      	orrs	r2, r0
    2008:	621a      	str	r2, [r3, #32]
    200a:	466a      	mov	r2, sp
    200c:	7823      	ldrb	r3, [r4, #0]
    200e:	4669      	mov	r1, sp
    2010:	7013      	strb	r3, [r2, #0]
    2012:	466b      	mov	r3, sp
    2014:	3304      	adds	r3, #4
    2016:	5ddf      	ldrb	r7, [r3, r7]
    2018:	0038      	movs	r0, r7
    201a:	f7ff fc89 	bl	1930 <system_gclk_chan_set_config>
    201e:	0038      	movs	r0, r7
    2020:	f7ff fc4a 	bl	18b8 <system_gclk_chan_enable>
    2024:	8923      	ldrh	r3, [r4, #8]
    2026:	88a2      	ldrh	r2, [r4, #4]
    2028:	79a1      	ldrb	r1, [r4, #6]
    202a:	431a      	orrs	r2, r3
    202c:	78a3      	ldrb	r3, [r4, #2]
    202e:	430b      	orrs	r3, r1
    2030:	4313      	orrs	r3, r2
    2032:	7862      	ldrb	r2, [r4, #1]
    2034:	2a00      	cmp	r2, #0
    2036:	d002      	beq.n	203e <tc_init+0x10a>
    2038:	2280      	movs	r2, #128	; 0x80
    203a:	0112      	lsls	r2, r2, #4
    203c:	4313      	orrs	r3, r2
    203e:	6829      	ldr	r1, [r5, #0]
    2040:	7bca      	ldrb	r2, [r1, #15]
    2042:	b252      	sxtb	r2, r2
    2044:	2a00      	cmp	r2, #0
    2046:	dbfb      	blt.n	2040 <tc_init+0x10c>
    2048:	8033      	strh	r3, [r6, #0]
    204a:	7b63      	ldrb	r3, [r4, #13]
    204c:	1e5a      	subs	r2, r3, #1
    204e:	4193      	sbcs	r3, r2
    2050:	7ba2      	ldrb	r2, [r4, #14]
    2052:	009b      	lsls	r3, r3, #2
    2054:	2a00      	cmp	r2, #0
    2056:	d001      	beq.n	205c <tc_init+0x128>
    2058:	2201      	movs	r2, #1
    205a:	4313      	orrs	r3, r2
    205c:	6829      	ldr	r1, [r5, #0]
    205e:	7bca      	ldrb	r2, [r1, #15]
    2060:	b252      	sxtb	r2, r2
    2062:	2a00      	cmp	r2, #0
    2064:	dbfb      	blt.n	205e <tc_init+0x12a>
    2066:	22ff      	movs	r2, #255	; 0xff
    2068:	7132      	strb	r2, [r6, #4]
    206a:	2b00      	cmp	r3, #0
    206c:	d005      	beq.n	207a <tc_init+0x146>
    206e:	6829      	ldr	r1, [r5, #0]
    2070:	7bca      	ldrb	r2, [r1, #15]
    2072:	b252      	sxtb	r2, r2
    2074:	2a00      	cmp	r2, #0
    2076:	dbfb      	blt.n	2070 <tc_init+0x13c>
    2078:	7173      	strb	r3, [r6, #5]
    207a:	7ae3      	ldrb	r3, [r4, #11]
    207c:	7aa2      	ldrb	r2, [r4, #10]
    207e:	2b00      	cmp	r3, #0
    2080:	d001      	beq.n	2086 <tc_init+0x152>
    2082:	2310      	movs	r3, #16
    2084:	431a      	orrs	r2, r3
    2086:	7b23      	ldrb	r3, [r4, #12]
    2088:	2b00      	cmp	r3, #0
    208a:	d001      	beq.n	2090 <tc_init+0x15c>
    208c:	2320      	movs	r3, #32
    208e:	431a      	orrs	r2, r3
    2090:	6829      	ldr	r1, [r5, #0]
    2092:	7bcb      	ldrb	r3, [r1, #15]
    2094:	b25b      	sxtb	r3, r3
    2096:	2b00      	cmp	r3, #0
    2098:	dbfb      	blt.n	2092 <tc_init+0x15e>
    209a:	71b2      	strb	r2, [r6, #6]
    209c:	682b      	ldr	r3, [r5, #0]
    209e:	7bda      	ldrb	r2, [r3, #15]
    20a0:	b252      	sxtb	r2, r2
    20a2:	2a00      	cmp	r2, #0
    20a4:	dbfb      	blt.n	209e <tc_init+0x16a>
    20a6:	792a      	ldrb	r2, [r5, #4]
    20a8:	2a04      	cmp	r2, #4
    20aa:	d019      	beq.n	20e0 <tc_init+0x1ac>
    20ac:	2a08      	cmp	r2, #8
    20ae:	d03c      	beq.n	212a <tc_init+0x1f6>
    20b0:	2017      	movs	r0, #23
    20b2:	2a00      	cmp	r2, #0
    20b4:	d137      	bne.n	2126 <tc_init+0x1f2>
    20b6:	7bda      	ldrb	r2, [r3, #15]
    20b8:	b252      	sxtb	r2, r2
    20ba:	2a00      	cmp	r2, #0
    20bc:	dbfb      	blt.n	20b6 <tc_init+0x182>
    20be:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    20c0:	8233      	strh	r3, [r6, #16]
    20c2:	682a      	ldr	r2, [r5, #0]
    20c4:	7bd3      	ldrb	r3, [r2, #15]
    20c6:	b25b      	sxtb	r3, r3
    20c8:	2b00      	cmp	r3, #0
    20ca:	dbfb      	blt.n	20c4 <tc_init+0x190>
    20cc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    20ce:	8333      	strh	r3, [r6, #24]
    20d0:	682a      	ldr	r2, [r5, #0]
    20d2:	7bd3      	ldrb	r3, [r2, #15]
    20d4:	b25b      	sxtb	r3, r3
    20d6:	2b00      	cmp	r3, #0
    20d8:	dbfb      	blt.n	20d2 <tc_init+0x19e>
    20da:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    20dc:	8373      	strh	r3, [r6, #26]
    20de:	e021      	b.n	2124 <tc_init+0x1f0>
    20e0:	7bda      	ldrb	r2, [r3, #15]
    20e2:	b252      	sxtb	r2, r2
    20e4:	2a00      	cmp	r2, #0
    20e6:	dbfb      	blt.n	20e0 <tc_init+0x1ac>
    20e8:	0023      	movs	r3, r4
    20ea:	3328      	adds	r3, #40	; 0x28
    20ec:	781b      	ldrb	r3, [r3, #0]
    20ee:	7433      	strb	r3, [r6, #16]
    20f0:	682a      	ldr	r2, [r5, #0]
    20f2:	7bd3      	ldrb	r3, [r2, #15]
    20f4:	b25b      	sxtb	r3, r3
    20f6:	2b00      	cmp	r3, #0
    20f8:	dbfb      	blt.n	20f2 <tc_init+0x1be>
    20fa:	0023      	movs	r3, r4
    20fc:	3329      	adds	r3, #41	; 0x29
    20fe:	781b      	ldrb	r3, [r3, #0]
    2100:	7533      	strb	r3, [r6, #20]
    2102:	682a      	ldr	r2, [r5, #0]
    2104:	7bd3      	ldrb	r3, [r2, #15]
    2106:	b25b      	sxtb	r3, r3
    2108:	2b00      	cmp	r3, #0
    210a:	dbfb      	blt.n	2104 <tc_init+0x1d0>
    210c:	0023      	movs	r3, r4
    210e:	332a      	adds	r3, #42	; 0x2a
    2110:	781b      	ldrb	r3, [r3, #0]
    2112:	7633      	strb	r3, [r6, #24]
    2114:	682a      	ldr	r2, [r5, #0]
    2116:	7bd3      	ldrb	r3, [r2, #15]
    2118:	b25b      	sxtb	r3, r3
    211a:	2b00      	cmp	r3, #0
    211c:	dbfb      	blt.n	2116 <tc_init+0x1e2>
    211e:	342b      	adds	r4, #43	; 0x2b
    2120:	7823      	ldrb	r3, [r4, #0]
    2122:	7673      	strb	r3, [r6, #25]
    2124:	2000      	movs	r0, #0
    2126:	b005      	add	sp, #20
    2128:	bdf0      	pop	{r4, r5, r6, r7, pc}
    212a:	7bda      	ldrb	r2, [r3, #15]
    212c:	b252      	sxtb	r2, r2
    212e:	2a00      	cmp	r2, #0
    2130:	dbfb      	blt.n	212a <tc_init+0x1f6>
    2132:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    2134:	6133      	str	r3, [r6, #16]
    2136:	682a      	ldr	r2, [r5, #0]
    2138:	7bd3      	ldrb	r3, [r2, #15]
    213a:	b25b      	sxtb	r3, r3
    213c:	2b00      	cmp	r3, #0
    213e:	dbfb      	blt.n	2138 <tc_init+0x204>
    2140:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    2142:	61b3      	str	r3, [r6, #24]
    2144:	682a      	ldr	r2, [r5, #0]
    2146:	7bd3      	ldrb	r3, [r2, #15]
    2148:	b25b      	sxtb	r3, r3
    214a:	2b00      	cmp	r3, #0
    214c:	dbfb      	blt.n	2146 <tc_init+0x212>
    214e:	6b23      	ldr	r3, [r4, #48]	; 0x30
    2150:	61f3      	str	r3, [r6, #28]
    2152:	e7e7      	b.n	2124 <tc_init+0x1f0>
    2154:	20000208 	.word	0x20000208
    2158:	40000400 	.word	0x40000400

0000215c <tc_set_compare_value>:
    215c:	b510      	push	{r4, lr}
    215e:	6804      	ldr	r4, [r0, #0]
    2160:	7be3      	ldrb	r3, [r4, #15]
    2162:	b25b      	sxtb	r3, r3
    2164:	2b00      	cmp	r3, #0
    2166:	dbfb      	blt.n	2160 <tc_set_compare_value+0x4>
    2168:	7903      	ldrb	r3, [r0, #4]
    216a:	2b04      	cmp	r3, #4
    216c:	d00c      	beq.n	2188 <tc_set_compare_value+0x2c>
    216e:	2b08      	cmp	r3, #8
    2170:	d012      	beq.n	2198 <tc_set_compare_value+0x3c>
    2172:	2017      	movs	r0, #23
    2174:	2b00      	cmp	r3, #0
    2176:	d10e      	bne.n	2196 <tc_set_compare_value+0x3a>
    2178:	2017      	movs	r0, #23
    217a:	2901      	cmp	r1, #1
    217c:	d80b      	bhi.n	2196 <tc_set_compare_value+0x3a>
    217e:	310c      	adds	r1, #12
    2180:	b292      	uxth	r2, r2
    2182:	0049      	lsls	r1, r1, #1
    2184:	530a      	strh	r2, [r1, r4]
    2186:	e005      	b.n	2194 <tc_set_compare_value+0x38>
    2188:	2017      	movs	r0, #23
    218a:	2901      	cmp	r1, #1
    218c:	d803      	bhi.n	2196 <tc_set_compare_value+0x3a>
    218e:	b2d2      	uxtb	r2, r2
    2190:	1861      	adds	r1, r4, r1
    2192:	760a      	strb	r2, [r1, #24]
    2194:	2000      	movs	r0, #0
    2196:	bd10      	pop	{r4, pc}
    2198:	2017      	movs	r0, #23
    219a:	2901      	cmp	r1, #1
    219c:	d8fb      	bhi.n	2196 <tc_set_compare_value+0x3a>
    219e:	3106      	adds	r1, #6
    21a0:	0089      	lsls	r1, r1, #2
    21a2:	510a      	str	r2, [r1, r4]
    21a4:	e7f6      	b.n	2194 <tc_set_compare_value+0x38>

000021a6 <Dummy_Handler>:
    21a6:	e7fe      	b.n	21a6 <Dummy_Handler>

000021a8 <Reset_Handler>:
    21a8:	4821      	ldr	r0, [pc, #132]	; (2230 <Reset_Handler+0x88>)
    21aa:	4922      	ldr	r1, [pc, #136]	; (2234 <Reset_Handler+0x8c>)
    21ac:	b570      	push	{r4, r5, r6, lr}
    21ae:	4288      	cmp	r0, r1
    21b0:	d004      	beq.n	21bc <Reset_Handler+0x14>
    21b2:	2300      	movs	r3, #0
    21b4:	4c20      	ldr	r4, [pc, #128]	; (2238 <Reset_Handler+0x90>)
    21b6:	18ca      	adds	r2, r1, r3
    21b8:	42a2      	cmp	r2, r4
    21ba:	d332      	bcc.n	2222 <Reset_Handler+0x7a>
    21bc:	2100      	movs	r1, #0
    21be:	4b1f      	ldr	r3, [pc, #124]	; (223c <Reset_Handler+0x94>)
    21c0:	4a1f      	ldr	r2, [pc, #124]	; (2240 <Reset_Handler+0x98>)
    21c2:	4293      	cmp	r3, r2
    21c4:	d331      	bcc.n	222a <Reset_Handler+0x82>
    21c6:	21ff      	movs	r1, #255	; 0xff
    21c8:	4b1e      	ldr	r3, [pc, #120]	; (2244 <Reset_Handler+0x9c>)
    21ca:	4a1f      	ldr	r2, [pc, #124]	; (2248 <Reset_Handler+0xa0>)
    21cc:	438b      	bics	r3, r1
    21ce:	6093      	str	r3, [r2, #8]
    21d0:	2202      	movs	r2, #2
    21d2:	250c      	movs	r5, #12
    21d4:	2408      	movs	r4, #8
    21d6:	2630      	movs	r6, #48	; 0x30
    21d8:	4b1c      	ldr	r3, [pc, #112]	; (224c <Reset_Handler+0xa4>)
    21da:	481d      	ldr	r0, [pc, #116]	; (2250 <Reset_Handler+0xa8>)
    21dc:	625a      	str	r2, [r3, #36]	; 0x24
    21de:	78c3      	ldrb	r3, [r0, #3]
    21e0:	39fc      	subs	r1, #252	; 0xfc
    21e2:	438b      	bics	r3, r1
    21e4:	4313      	orrs	r3, r2
    21e6:	70c3      	strb	r3, [r0, #3]
    21e8:	78c3      	ldrb	r3, [r0, #3]
    21ea:	43ab      	bics	r3, r5
    21ec:	4323      	orrs	r3, r4
    21ee:	70c3      	strb	r3, [r0, #3]
    21f0:	4b18      	ldr	r3, [pc, #96]	; (2254 <Reset_Handler+0xac>)
    21f2:	7b98      	ldrb	r0, [r3, #14]
    21f4:	43b0      	bics	r0, r6
    21f6:	0006      	movs	r6, r0
    21f8:	2020      	movs	r0, #32
    21fa:	4330      	orrs	r0, r6
    21fc:	7398      	strb	r0, [r3, #14]
    21fe:	7b98      	ldrb	r0, [r3, #14]
    2200:	43a8      	bics	r0, r5
    2202:	4304      	orrs	r4, r0
    2204:	739c      	strb	r4, [r3, #14]
    2206:	7b98      	ldrb	r0, [r3, #14]
    2208:	4388      	bics	r0, r1
    220a:	4302      	orrs	r2, r0
    220c:	739a      	strb	r2, [r3, #14]
    220e:	2380      	movs	r3, #128	; 0x80
    2210:	4a11      	ldr	r2, [pc, #68]	; (2258 <Reset_Handler+0xb0>)
    2212:	6851      	ldr	r1, [r2, #4]
    2214:	430b      	orrs	r3, r1
    2216:	6053      	str	r3, [r2, #4]
    2218:	f000 fac2 	bl	27a0 <__libc_init_array>
    221c:	f000 fa22 	bl	2664 <main>
    2220:	e7fe      	b.n	2220 <Reset_Handler+0x78>
    2222:	58c5      	ldr	r5, [r0, r3]
    2224:	3304      	adds	r3, #4
    2226:	6015      	str	r5, [r2, #0]
    2228:	e7c5      	b.n	21b6 <Reset_Handler+0xe>
    222a:	c302      	stmia	r3!, {r1}
    222c:	e7c9      	b.n	21c2 <Reset_Handler+0x1a>
    222e:	46c0      	nop			; (mov r8, r8)
    2230:	000028d4 	.word	0x000028d4
    2234:	20000000 	.word	0x20000000
    2238:	20000018 	.word	0x20000018
    223c:	20000018 	.word	0x20000018
    2240:	20000238 	.word	0x20000238
    2244:	00000000 	.word	0x00000000
    2248:	e000ed00 	.word	0xe000ed00
    224c:	410070fc 	.word	0x410070fc
    2250:	41005000 	.word	0x41005000
    2254:	41004800 	.word	0x41004800
    2258:	41004000 	.word	0x41004000

0000225c <set_color_green_indication>:
#define BUFFER_SET_COLOR_BLUE_PWM						{0x04, 0x20}
#define BUFFER_SET_COLOR_BLUE_PWM_TIMER					{0x02, 0x19}
#define BUFFER_SET_COLOR_BLUE_PWM_FLASH					{0x01, 0x82}


void set_color_green_indication(void) {
    225c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t buffer_set_color_green[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_GREEN;
    225e:	2502      	movs	r5, #2
    2260:	ae01      	add	r6, sp, #4
    2262:	002a      	movs	r2, r5
    2264:	4907      	ldr	r1, [pc, #28]	; (2284 <set_color_green_indication+0x28>)
    2266:	0030      	movs	r0, r6
    2268:	f000 fabe 	bl	27e8 <memcpy>
  packet.data = buffer_set_color_green;
  packet.address = KTD2026_DEVICE_ADDRESS;
    226c:	2331      	movs	r3, #49	; 0x31
  packet.data = buffer_set_color_green;
    226e:	4c06      	ldr	r4, [pc, #24]	; (2288 <set_color_green_indication+0x2c>)
    2270:	6066      	str	r6, [r4, #4]
  packet.address = KTD2026_DEVICE_ADDRESS;
    2272:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;
    2274:	8065      	strh	r5, [r4, #2]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    2276:	0021      	movs	r1, r4
    2278:	4804      	ldr	r0, [pc, #16]	; (228c <set_color_green_indication+0x30>)
    227a:	f7fe ff6f 	bl	115c <i2c_master_write_packet_wait>
    227e:	2800      	cmp	r0, #0
    2280:	d1f9      	bne.n	2276 <set_color_green_indication+0x1a>
         STATUS_OK) {
  }
}
    2282:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    2284:	0000288c 	.word	0x0000288c
    2288:	2000000c 	.word	0x2000000c
    228c:	20000210 	.word	0x20000210

00002290 <set_color_red_indication>:

void set_color_red_indication(void) {
    2290:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t buffer_set_color_red[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_RED;
    2292:	2502      	movs	r5, #2
    2294:	4909      	ldr	r1, [pc, #36]	; (22bc <set_color_red_indication+0x2c>)
    2296:	ae01      	add	r6, sp, #4
    2298:	002a      	movs	r2, r5
    229a:	1949      	adds	r1, r1, r5
    229c:	0030      	movs	r0, r6
    229e:	f000 faa3 	bl	27e8 <memcpy>
  packet.data = buffer_set_color_red;
  packet.address = KTD2026_DEVICE_ADDRESS;
    22a2:	2331      	movs	r3, #49	; 0x31
  packet.data = buffer_set_color_red;
    22a4:	4c06      	ldr	r4, [pc, #24]	; (22c0 <set_color_red_indication+0x30>)
    22a6:	6066      	str	r6, [r4, #4]
  packet.address = KTD2026_DEVICE_ADDRESS;
    22a8:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;
    22aa:	8065      	strh	r5, [r4, #2]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    22ac:	0021      	movs	r1, r4
    22ae:	4805      	ldr	r0, [pc, #20]	; (22c4 <set_color_red_indication+0x34>)
    22b0:	f7fe ff54 	bl	115c <i2c_master_write_packet_wait>
    22b4:	2800      	cmp	r0, #0
    22b6:	d1f9      	bne.n	22ac <set_color_red_indication+0x1c>
         STATUS_OK) {
  }
}
    22b8:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    22ba:	46c0      	nop			; (mov r8, r8)
    22bc:	0000288c 	.word	0x0000288c
    22c0:	2000000c 	.word	0x2000000c
    22c4:	20000210 	.word	0x20000210

000022c8 <set_color_yellow_indication>:
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
         STATUS_OK) {
  }
}

void set_color_yellow_indication(void) {
    22c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
	uint8_t buffer_set_color_yellow[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_YELLOW;
    22ca:	2502      	movs	r5, #2
    22cc:	4909      	ldr	r1, [pc, #36]	; (22f4 <set_color_yellow_indication+0x2c>)
    22ce:	ae01      	add	r6, sp, #4
    22d0:	002a      	movs	r2, r5
    22d2:	3106      	adds	r1, #6
    22d4:	0030      	movs	r0, r6
    22d6:	f000 fa87 	bl	27e8 <memcpy>
	packet.data = buffer_set_color_yellow;
	packet.address = KTD2026_DEVICE_ADDRESS;
    22da:	2331      	movs	r3, #49	; 0x31
	packet.data = buffer_set_color_yellow;
    22dc:	4c06      	ldr	r4, [pc, #24]	; (22f8 <set_color_yellow_indication+0x30>)
    22de:	6066      	str	r6, [r4, #4]
	packet.address = KTD2026_DEVICE_ADDRESS;
    22e0:	8023      	strh	r3, [r4, #0]
	packet.data_length = DATA_LENGTH_PRIMARY;
    22e2:	8065      	strh	r5, [r4, #2]

	while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    22e4:	0021      	movs	r1, r4
    22e6:	4805      	ldr	r0, [pc, #20]	; (22fc <set_color_yellow_indication+0x34>)
    22e8:	f7fe ff38 	bl	115c <i2c_master_write_packet_wait>
    22ec:	2800      	cmp	r0, #0
    22ee:	d1f9      	bne.n	22e4 <set_color_yellow_indication+0x1c>
	STATUS_OK) {
	}
}
    22f0:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    22f2:	46c0      	nop			; (mov r8, r8)
    22f4:	0000288c 	.word	0x0000288c
    22f8:	2000000c 	.word	0x2000000c
    22fc:	20000210 	.word	0x20000210

00002300 <set_battery_charge_routine>:
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
                                       &packet)) != STATUS_OK) {
  }
}

void set_battery_charge_routine(void) {
    2300:	b5f0      	push	{r4, r5, r6, r7, lr}

  uint8_t buffer_set_color_green_PWM[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_GREEN_PWM;
    2302:	4c21      	ldr	r4, [pc, #132]	; (2388 <set_battery_charge_routine+0x88>)
    2304:	2502      	movs	r5, #2
    2306:	0021      	movs	r1, r4
void set_battery_charge_routine(void) {
    2308:	b085      	sub	sp, #20
  uint8_t buffer_set_color_green_PWM[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_GREEN_PWM;
    230a:	310c      	adds	r1, #12
    230c:	002a      	movs	r2, r5
    230e:	4668      	mov	r0, sp
    2310:	f000 fa6a 	bl	27e8 <memcpy>
  uint8_t buffer_set_charge_routine_flash_period[DATA_LENGTH_PRIMARY] = BUFFER_SET_CHARGE_ROUTINE_FLASH_PERIOD;
    2314:	0021      	movs	r1, r4
    2316:	af01      	add	r7, sp, #4
    2318:	310e      	adds	r1, #14
    231a:	002a      	movs	r2, r5
    231c:	0038      	movs	r0, r7
    231e:	f000 fa63 	bl	27e8 <memcpy>
  uint8_t buffer_set_charge_routine_trise_tfall[DATA_LENGTH_PRIMARY] = BUFFER_SET_CHARGE_ROUTINE_TRISE_TFALL;
    2322:	0021      	movs	r1, r4
    2324:	ae02      	add	r6, sp, #8
    2326:	3110      	adds	r1, #16
    2328:	002a      	movs	r2, r5
    232a:	0030      	movs	r0, r6
    232c:	f000 fa5c 	bl	27e8 <memcpy>
  uint8_t buffer_set_charge_routine_PWM1_timer[DATA_LENGTH_PRIMARY] = BUFFER_SET_CHARGE_ROUTINE_PWM1_TIMER;
    2330:	0021      	movs	r1, r4
    2332:	002a      	movs	r2, r5
    2334:	3112      	adds	r1, #18
    2336:	a803      	add	r0, sp, #12
    2338:	f000 fa56 	bl	27e8 <memcpy>

  packet.address = KTD2026_DEVICE_ADDRESS;
    233c:	2331      	movs	r3, #49	; 0x31
    233e:	4c13      	ldr	r4, [pc, #76]	; (238c <set_battery_charge_routine+0x8c>)
    2340:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;

  packet.data = buffer_set_color_green_PWM;
    2342:	466b      	mov	r3, sp
  packet.data_length = DATA_LENGTH_PRIMARY;
    2344:	8065      	strh	r5, [r4, #2]
  packet.data = buffer_set_color_green_PWM;
    2346:	6063      	str	r3, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    2348:	4d11      	ldr	r5, [pc, #68]	; (2390 <set_battery_charge_routine+0x90>)
    234a:	0021      	movs	r1, r4
    234c:	0028      	movs	r0, r5
    234e:	f7fe ff05 	bl	115c <i2c_master_write_packet_wait>
    2352:	2800      	cmp	r0, #0
    2354:	d1f8      	bne.n	2348 <set_battery_charge_routine+0x48>
         STATUS_OK) {
  }
  packet.data = buffer_set_charge_routine_flash_period;
    2356:	6067      	str	r7, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    2358:	0021      	movs	r1, r4
    235a:	0028      	movs	r0, r5
    235c:	f7fe fefe 	bl	115c <i2c_master_write_packet_wait>
    2360:	2800      	cmp	r0, #0
    2362:	d1f9      	bne.n	2358 <set_battery_charge_routine+0x58>
         STATUS_OK) {
  }
  packet.data = buffer_set_charge_routine_trise_tfall;
    2364:	6066      	str	r6, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2366:	0021      	movs	r1, r4
    2368:	0028      	movs	r0, r5
    236a:	f7fe fef7 	bl	115c <i2c_master_write_packet_wait>
    236e:	2800      	cmp	r0, #0
    2370:	d1f9      	bne.n	2366 <set_battery_charge_routine+0x66>
                                       &packet)) != STATUS_OK) {
  }
  packet.data = buffer_set_charge_routine_PWM1_timer;
    2372:	ab03      	add	r3, sp, #12
    2374:	6063      	str	r3, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2376:	0021      	movs	r1, r4
    2378:	0028      	movs	r0, r5
    237a:	f7fe feef 	bl	115c <i2c_master_write_packet_wait>
    237e:	2800      	cmp	r0, #0
    2380:	d1f9      	bne.n	2376 <set_battery_charge_routine+0x76>
                                       &packet)) != STATUS_OK) {
  }
}
    2382:	b005      	add	sp, #20
    2384:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2386:	46c0      	nop			; (mov r8, r8)
    2388:	0000288c 	.word	0x0000288c
    238c:	2000000c 	.word	0x2000000c
    2390:	20000210 	.word	0x20000210

00002394 <set_battery_low_routine>:

void set_battery_low_routine(void) {
    2394:	b5f0      	push	{r4, r5, r6, r7, lr}

  uint8_t buffer_set_color_red_PWM[DATA_LENGTH_PRIMARY]				= BUFFER_SET_COLOR_RED_PWM;
    2396:	4c21      	ldr	r4, [pc, #132]	; (241c <set_battery_low_routine+0x88>)
    2398:	2502      	movs	r5, #2
    239a:	0021      	movs	r1, r4
void set_battery_low_routine(void) {
    239c:	b085      	sub	sp, #20
  uint8_t buffer_set_color_red_PWM[DATA_LENGTH_PRIMARY]				= BUFFER_SET_COLOR_RED_PWM;
    239e:	3114      	adds	r1, #20
    23a0:	002a      	movs	r2, r5
    23a2:	4668      	mov	r0, sp
    23a4:	f000 fa20 	bl	27e8 <memcpy>
  uint8_t buffer_set_low_routine_flash_period[DATA_LENGTH_PRIMARY]	= BUFFER_SET_LOW_ROUTINE_FLASH_PERIOD;
    23a8:	0021      	movs	r1, r4
    23aa:	af01      	add	r7, sp, #4
    23ac:	3116      	adds	r1, #22
    23ae:	002a      	movs	r2, r5
    23b0:	0038      	movs	r0, r7
    23b2:	f000 fa19 	bl	27e8 <memcpy>
  uint8_t buffer_set_low_routine_trise_tfall[DATA_LENGTH_PRIMARY]	= BUFFER_SET_LOW_ROUTINE_TRISE_TFALL;
    23b6:	0021      	movs	r1, r4
    23b8:	002a      	movs	r2, r5
    23ba:	3118      	adds	r1, #24
    23bc:	a802      	add	r0, sp, #8
    23be:	f000 fa13 	bl	27e8 <memcpy>
  uint8_t buffer_set_low_routine_brightness[DATA_LENGTH_PRIMARY]	= BUFFER_SET_COLOR_RED_BRIGHTNESS;
    23c2:	0021      	movs	r1, r4
    23c4:	ae03      	add	r6, sp, #12
    23c6:	311a      	adds	r1, #26
    23c8:	002a      	movs	r2, r5
    23ca:	0030      	movs	r0, r6
    23cc:	f000 fa0c 	bl	27e8 <memcpy>

  packet.address = KTD2026_DEVICE_ADDRESS;
    23d0:	2331      	movs	r3, #49	; 0x31
    23d2:	4c13      	ldr	r4, [pc, #76]	; (2420 <set_battery_low_routine+0x8c>)
    23d4:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;

  packet.data = buffer_set_color_red_PWM;
    23d6:	466b      	mov	r3, sp
  packet.data_length = DATA_LENGTH_PRIMARY;
    23d8:	8065      	strh	r5, [r4, #2]
  packet.data = buffer_set_color_red_PWM;
    23da:	6063      	str	r3, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    23dc:	4d11      	ldr	r5, [pc, #68]	; (2424 <set_battery_low_routine+0x90>)
    23de:	0021      	movs	r1, r4
    23e0:	0028      	movs	r0, r5
    23e2:	f7fe febb 	bl	115c <i2c_master_write_packet_wait>
    23e6:	2800      	cmp	r0, #0
    23e8:	d1f8      	bne.n	23dc <set_battery_low_routine+0x48>
         STATUS_OK) {
  }
  packet.data = buffer_set_low_routine_flash_period;
    23ea:	6067      	str	r7, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance, &packet)) !=
    23ec:	0021      	movs	r1, r4
    23ee:	0028      	movs	r0, r5
    23f0:	f7fe feb4 	bl	115c <i2c_master_write_packet_wait>
    23f4:	2800      	cmp	r0, #0
    23f6:	d1f9      	bne.n	23ec <set_battery_low_routine+0x58>
         STATUS_OK) {
  }
  packet.data = buffer_set_low_routine_brightness;
    23f8:	6066      	str	r6, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    23fa:	0021      	movs	r1, r4
    23fc:	0028      	movs	r0, r5
    23fe:	f7fe fead 	bl	115c <i2c_master_write_packet_wait>
    2402:	2800      	cmp	r0, #0
    2404:	d1f9      	bne.n	23fa <set_battery_low_routine+0x66>
                                       &packet)) != STATUS_OK) {
  }

	packet.data = buffer_set_low_routine_trise_tfall;
    2406:	ab02      	add	r3, sp, #8
    2408:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    240a:	0021      	movs	r1, r4
    240c:	0028      	movs	r0, r5
    240e:	f7fe fea5 	bl	115c <i2c_master_write_packet_wait>
    2412:	2800      	cmp	r0, #0
    2414:	d1f9      	bne.n	240a <set_battery_low_routine+0x76>
	&packet)) != STATUS_OK) {
	}
}
    2416:	b005      	add	sp, #20
    2418:	bdf0      	pop	{r4, r5, r6, r7, pc}
    241a:	46c0      	nop			; (mov r8, r8)
    241c:	0000288c 	.word	0x0000288c
    2420:	2000000c 	.word	0x2000000c
    2424:	20000210 	.word	0x20000210

00002428 <set_motor_speed_1_indication>:





void set_motor_speed_1_indication(void){
    2428:	b573      	push	{r0, r1, r4, r5, r6, lr}

  uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    242a:	4c12      	ldr	r4, [pc, #72]	; (2474 <set_motor_speed_1_indication+0x4c>)
    242c:	2502      	movs	r5, #2
    242e:	0021      	movs	r1, r4
    2430:	002a      	movs	r2, r5
    2432:	311c      	adds	r1, #28
    2434:	4668      	mov	r0, sp
    2436:	f000 f9d7 	bl	27e8 <memcpy>
  uint8_t buffer_set_blue_lowest_brightness[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_LOWEST_BRIGTHNESS;
    243a:	0021      	movs	r1, r4
    243c:	ae01      	add	r6, sp, #4
    243e:	311e      	adds	r1, #30
    2440:	002a      	movs	r2, r5
    2442:	0030      	movs	r0, r6
    2444:	f000 f9d0 	bl	27e8 <memcpy>

  packet.address = KTD2026_DEVICE_ADDRESS;
    2448:	2331      	movs	r3, #49	; 0x31
    244a:	4c0b      	ldr	r4, [pc, #44]	; (2478 <set_motor_speed_1_indication+0x50>)
    244c:	8023      	strh	r3, [r4, #0]
  packet.data_length = DATA_LENGTH_PRIMARY;
  
  packet.data = buffer_set_blue;
    244e:	466b      	mov	r3, sp
  packet.data_length = DATA_LENGTH_PRIMARY;
    2450:	8065      	strh	r5, [r4, #2]
  packet.data = buffer_set_blue;
    2452:	6063      	str	r3, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2454:	4d09      	ldr	r5, [pc, #36]	; (247c <set_motor_speed_1_indication+0x54>)
    2456:	0021      	movs	r1, r4
    2458:	0028      	movs	r0, r5
    245a:	f7fe fe7f 	bl	115c <i2c_master_write_packet_wait>
    245e:	2800      	cmp	r0, #0
    2460:	d1f8      	bne.n	2454 <set_motor_speed_1_indication+0x2c>
  &packet)) != STATUS_OK) {
  }

  packet.data = buffer_set_blue_lowest_brightness;
    2462:	6066      	str	r6, [r4, #4]
  while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2464:	0021      	movs	r1, r4
    2466:	0028      	movs	r0, r5
    2468:	f7fe fe78 	bl	115c <i2c_master_write_packet_wait>
    246c:	2800      	cmp	r0, #0
    246e:	d1f9      	bne.n	2464 <set_motor_speed_1_indication+0x3c>
  &packet)) != STATUS_OK) {
  }

}
    2470:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    2472:	46c0      	nop			; (mov r8, r8)
    2474:	0000288c 	.word	0x0000288c
    2478:	2000000c 	.word	0x2000000c
    247c:	20000210 	.word	0x20000210

00002480 <set_motor_speed_2_indication>:

void set_motor_speed_2_indication(void){
    2480:	b573      	push	{r0, r1, r4, r5, r6, lr}

	uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    2482:	4c12      	ldr	r4, [pc, #72]	; (24cc <set_motor_speed_2_indication+0x4c>)
    2484:	2502      	movs	r5, #2
    2486:	0021      	movs	r1, r4
    2488:	002a      	movs	r2, r5
    248a:	311c      	adds	r1, #28
    248c:	4668      	mov	r0, sp
    248e:	f000 f9ab 	bl	27e8 <memcpy>
	uint8_t buffer_set_blue_low_brightness[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_LOW_BRIGTHNESS;
    2492:	0021      	movs	r1, r4
    2494:	ae01      	add	r6, sp, #4
    2496:	3120      	adds	r1, #32
    2498:	002a      	movs	r2, r5
    249a:	0030      	movs	r0, r6
    249c:	f000 f9a4 	bl	27e8 <memcpy>

	packet.address = KTD2026_DEVICE_ADDRESS;
    24a0:	2331      	movs	r3, #49	; 0x31
    24a2:	4c0b      	ldr	r4, [pc, #44]	; (24d0 <set_motor_speed_2_indication+0x50>)
    24a4:	8023      	strh	r3, [r4, #0]
	packet.data_length = DATA_LENGTH_PRIMARY;

	packet.data = buffer_set_blue;
    24a6:	466b      	mov	r3, sp
	packet.data_length = DATA_LENGTH_PRIMARY;
    24a8:	8065      	strh	r5, [r4, #2]
	packet.data = buffer_set_blue;
    24aa:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    24ac:	4d09      	ldr	r5, [pc, #36]	; (24d4 <set_motor_speed_2_indication+0x54>)
    24ae:	0021      	movs	r1, r4
    24b0:	0028      	movs	r0, r5
    24b2:	f7fe fe53 	bl	115c <i2c_master_write_packet_wait>
    24b6:	2800      	cmp	r0, #0
    24b8:	d1f8      	bne.n	24ac <set_motor_speed_2_indication+0x2c>
	&packet)) != STATUS_OK) {
	}

	packet.data = buffer_set_blue_low_brightness;
    24ba:	6066      	str	r6, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    24bc:	0021      	movs	r1, r4
    24be:	0028      	movs	r0, r5
    24c0:	f7fe fe4c 	bl	115c <i2c_master_write_packet_wait>
    24c4:	2800      	cmp	r0, #0
    24c6:	d1f9      	bne.n	24bc <set_motor_speed_2_indication+0x3c>
	&packet)) != STATUS_OK) {
	}

}
    24c8:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    24ca:	46c0      	nop			; (mov r8, r8)
    24cc:	0000288c 	.word	0x0000288c
    24d0:	2000000c 	.word	0x2000000c
    24d4:	20000210 	.word	0x20000210

000024d8 <set_motor_speed_3_indication>:

void set_motor_speed_3_indication(void){
    24d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
	uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    24da:	4c12      	ldr	r4, [pc, #72]	; (2524 <set_motor_speed_3_indication+0x4c>)
    24dc:	2502      	movs	r5, #2
    24de:	0021      	movs	r1, r4
    24e0:	002a      	movs	r2, r5
    24e2:	311c      	adds	r1, #28
    24e4:	4668      	mov	r0, sp
    24e6:	f000 f97f 	bl	27e8 <memcpy>
	uint8_t buffer_set_blue_high_brightness[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_HIGH_BRIGTHNESS;
    24ea:	0021      	movs	r1, r4
    24ec:	ae01      	add	r6, sp, #4
    24ee:	3122      	adds	r1, #34	; 0x22
    24f0:	002a      	movs	r2, r5
    24f2:	0030      	movs	r0, r6
    24f4:	f000 f978 	bl	27e8 <memcpy>

	packet.address = KTD2026_DEVICE_ADDRESS;
    24f8:	2331      	movs	r3, #49	; 0x31
    24fa:	4c0b      	ldr	r4, [pc, #44]	; (2528 <set_motor_speed_3_indication+0x50>)
    24fc:	8023      	strh	r3, [r4, #0]
	packet.data_length = DATA_LENGTH_PRIMARY;

	packet.data = buffer_set_blue;
    24fe:	466b      	mov	r3, sp
	packet.data_length = DATA_LENGTH_PRIMARY;
    2500:	8065      	strh	r5, [r4, #2]
	packet.data = buffer_set_blue;
    2502:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2504:	4d09      	ldr	r5, [pc, #36]	; (252c <set_motor_speed_3_indication+0x54>)
    2506:	0021      	movs	r1, r4
    2508:	0028      	movs	r0, r5
    250a:	f7fe fe27 	bl	115c <i2c_master_write_packet_wait>
    250e:	2800      	cmp	r0, #0
    2510:	d1f8      	bne.n	2504 <set_motor_speed_3_indication+0x2c>
	&packet)) != STATUS_OK) {
	}

	packet.data = buffer_set_blue_high_brightness;
    2512:	6066      	str	r6, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2514:	0021      	movs	r1, r4
    2516:	0028      	movs	r0, r5
    2518:	f7fe fe20 	bl	115c <i2c_master_write_packet_wait>
    251c:	2800      	cmp	r0, #0
    251e:	d1f9      	bne.n	2514 <set_motor_speed_3_indication+0x3c>
	&packet)) != STATUS_OK) {
	}
}
    2520:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    2522:	46c0      	nop			; (mov r8, r8)
    2524:	0000288c 	.word	0x0000288c
    2528:	2000000c 	.word	0x2000000c
    252c:	20000210 	.word	0x20000210

00002530 <set_motor_pulsating_indication>:

void set_motor_pulsating_indication(void){
    2530:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    2532:	4c21      	ldr	r4, [pc, #132]	; (25b8 <set_motor_pulsating_indication+0x88>)
    2534:	2502      	movs	r5, #2
    2536:	0021      	movs	r1, r4
void set_motor_pulsating_indication(void){
    2538:	b085      	sub	sp, #20
	uint8_t buffer_set_blue[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM;
    253a:	311c      	adds	r1, #28
    253c:	002a      	movs	r2, r5
    253e:	4668      	mov	r0, sp
    2540:	f000 f952 	bl	27e8 <memcpy>
	uint8_t buffer_set_blue_high_brightness[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_HIGH_BRIGTHNESS;
    2544:	0021      	movs	r1, r4
    2546:	af01      	add	r7, sp, #4
    2548:	3122      	adds	r1, #34	; 0x22
    254a:	002a      	movs	r2, r5
    254c:	0038      	movs	r0, r7
    254e:	f000 f94b 	bl	27e8 <memcpy>
	uint8_t buffer_set_blue_pwm_timer[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM_TIMER;
    2552:	0021      	movs	r1, r4
    2554:	ae02      	add	r6, sp, #8
    2556:	3124      	adds	r1, #36	; 0x24
    2558:	002a      	movs	r2, r5
    255a:	0030      	movs	r0, r6
    255c:	f000 f944 	bl	27e8 <memcpy>
	uint8_t buffer_set_blue_pwm_flash[DATA_LENGTH_PRIMARY] = BUFFER_SET_COLOR_BLUE_PWM_FLASH;
    2560:	0021      	movs	r1, r4
    2562:	002a      	movs	r2, r5
    2564:	3116      	adds	r1, #22
    2566:	a803      	add	r0, sp, #12
    2568:	f000 f93e 	bl	27e8 <memcpy>


	packet.address = KTD2026_DEVICE_ADDRESS;
    256c:	2331      	movs	r3, #49	; 0x31
    256e:	4c13      	ldr	r4, [pc, #76]	; (25bc <set_motor_pulsating_indication+0x8c>)
    2570:	8023      	strh	r3, [r4, #0]
	packet.data_length = DATA_LENGTH_PRIMARY;

	packet.data = buffer_set_blue;
    2572:	466b      	mov	r3, sp
	packet.data_length = DATA_LENGTH_PRIMARY;
    2574:	8065      	strh	r5, [r4, #2]
	packet.data = buffer_set_blue;
    2576:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2578:	4d11      	ldr	r5, [pc, #68]	; (25c0 <set_motor_pulsating_indication+0x90>)
    257a:	0021      	movs	r1, r4
    257c:	0028      	movs	r0, r5
    257e:	f7fe fded 	bl	115c <i2c_master_write_packet_wait>
    2582:	2800      	cmp	r0, #0
    2584:	d1f8      	bne.n	2578 <set_motor_pulsating_indication+0x48>
	&packet)) != STATUS_OK) {
	}

	packet.data = buffer_set_blue_high_brightness;
    2586:	6067      	str	r7, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2588:	0021      	movs	r1, r4
    258a:	0028      	movs	r0, r5
    258c:	f7fe fde6 	bl	115c <i2c_master_write_packet_wait>
    2590:	2800      	cmp	r0, #0
    2592:	d1f9      	bne.n	2588 <set_motor_pulsating_indication+0x58>
	&packet)) != STATUS_OK) {
	}

	packet.data = buffer_set_blue_pwm_timer;
    2594:	6066      	str	r6, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    2596:	0021      	movs	r1, r4
    2598:	0028      	movs	r0, r5
    259a:	f7fe fddf 	bl	115c <i2c_master_write_packet_wait>
    259e:	2800      	cmp	r0, #0
    25a0:	d1f9      	bne.n	2596 <set_motor_pulsating_indication+0x66>
	&packet)) != STATUS_OK) {
	}
	
	packet.data = buffer_set_blue_pwm_flash;
    25a2:	ab03      	add	r3, sp, #12
    25a4:	6063      	str	r3, [r4, #4]
	while ((i2c_master_write_packet_wait(&i2c_master_instance,
    25a6:	0021      	movs	r1, r4
    25a8:	0028      	movs	r0, r5
    25aa:	f7fe fdd7 	bl	115c <i2c_master_write_packet_wait>
    25ae:	2800      	cmp	r0, #0
    25b0:	d1f9      	bne.n	25a6 <set_motor_pulsating_indication+0x76>
	&packet)) != STATUS_OK) {
	}

}
    25b2:	b005      	add	sp, #20
    25b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    25b6:	46c0      	nop			; (mov r8, r8)
    25b8:	0000288c 	.word	0x0000288c
    25bc:	2000000c 	.word	0x2000000c
    25c0:	20000210 	.word	0x20000210

000025c4 <i2c_master_setup>:
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
#endif
	config->generator_source = GCLK_GENERATOR_0;
	config->run_in_standby   = false;
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
    25c4:	2180      	movs	r1, #128	; 0x80
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
    25c6:	2364      	movs	r3, #100	; 0x64


void i2c_master_setup(void) {
    25c8:	b570      	push	{r4, r5, r6, lr}
    25ca:	b08e      	sub	sp, #56	; 0x38
    25cc:	aa01      	add	r2, sp, #4
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
    25ce:	0389      	lsls	r1, r1, #14
    25d0:	6111      	str	r1, [r2, #16]
	config->buffer_timeout   = 65535;
	config->unknown_bus_state_timeout = 65535;
    25d2:	2101      	movs	r1, #1
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
    25d4:	9301      	str	r3, [sp, #4]
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
    25d6:	4b1e      	ldr	r3, [pc, #120]	; (2650 <i2c_master_setup+0x8c>)
	config->unknown_bus_state_timeout = 65535;
    25d8:	4249      	negs	r1, r1
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
    25da:	6053      	str	r3, [r2, #4]
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
    25dc:	2300      	movs	r3, #0
	config->unknown_bus_state_timeout = 65535;
    25de:	8291      	strh	r1, [r2, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->scl_low_timeout  = false;
    25e0:	310a      	adds	r1, #10
    25e2:	4469      	add	r1, sp
    25e4:	77cb      	strb	r3, [r1, #31]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
    25e6:	a90c      	add	r1, sp, #48	; 0x30
    25e8:	700b      	strb	r3, [r1, #0]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
    25ea:	2131      	movs	r1, #49	; 0x31
    25ec:	4469      	add	r1, sp
    25ee:	700b      	strb	r3, [r1, #0]
	config->master_scl_low_extend_timeout  = false;
    25f0:	2132      	movs	r1, #50	; 0x32
    25f2:	4469      	add	r1, sp
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
    25f4:	6093      	str	r3, [r2, #8]
	config->generator_source = GCLK_GENERATOR_0;
    25f6:	7313      	strb	r3, [r2, #12]
	config->run_in_standby   = false;
    25f8:	7613      	strb	r3, [r2, #24]
	config->pinmux_pad0      = PINMUX_DEFAULT;
    25fa:	61d3      	str	r3, [r2, #28]
	config->pinmux_pad1      = PINMUX_DEFAULT;
    25fc:	6213      	str	r3, [r2, #32]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
    25fe:	6293      	str	r3, [r2, #40]	; 0x28
	config->master_scl_low_extend_timeout  = false;
    2600:	700b      	strb	r3, [r1, #0]
  struct i2c_master_config config_i2c_master;
  i2c_master_get_config_defaults(&config_i2c_master);
  config_i2c_master.buffer_timeout = 10000;
  i2c_master_init(&i2c_master_instance, MASTER_MODULE, &config_i2c_master);
    2602:	4e14      	ldr	r6, [pc, #80]	; (2654 <i2c_master_setup+0x90>)
#endif
	/* The typical value is 215ns */
	config->sda_scl_rise_time_ns = 215;
    2604:	33d7      	adds	r3, #215	; 0xd7
    2606:	8613      	strh	r3, [r2, #48]	; 0x30
  config_i2c_master.buffer_timeout = 10000;
    2608:	4b13      	ldr	r3, [pc, #76]	; (2658 <i2c_master_setup+0x94>)
  i2c_master_init(&i2c_master_instance, MASTER_MODULE, &config_i2c_master);
    260a:	4914      	ldr	r1, [pc, #80]	; (265c <i2c_master_setup+0x98>)
    260c:	0030      	movs	r0, r6
  config_i2c_master.buffer_timeout = 10000;
    260e:	82d3      	strh	r3, [r2, #22]
  i2c_master_init(&i2c_master_instance, MASTER_MODULE, &config_i2c_master);
    2610:	f7fe fc42 	bl	e98 <i2c_master_init>
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    2614:	2207      	movs	r2, #7
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    2616:	6835      	ldr	r5, [r6, #0]
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    2618:	69ec      	ldr	r4, [r5, #28]
    261a:	4014      	ands	r4, r2
	while (i2c_master_is_syncing(module)) {
    261c:	d1fc      	bne.n	2618 <i2c_master_setup+0x54>

	/* Wait for module to sync */
	_i2c_master_wait_for_sync(module);

	/* Enable module */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    261e:	2302      	movs	r3, #2
    2620:	682a      	ldr	r2, [r5, #0]
    2622:	4313      	orrs	r3, r2
    2624:	602b      	str	r3, [r5, #0]

#if I2C_MASTER_CALLBACK_MODE == true
	/* Enable module interrupts */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    2626:	6830      	ldr	r0, [r6, #0]
    2628:	f7fe ff70 	bl	150c <_sercom_get_interrupt_vector>
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    262c:	231f      	movs	r3, #31
    262e:	4018      	ands	r0, r3
    2630:	3b1e      	subs	r3, #30
    2632:	4083      	lsls	r3, r0
    2634:	4a0a      	ldr	r2, [pc, #40]	; (2660 <i2c_master_setup+0x9c>)
    2636:	6013      	str	r3, [r2, #0]
#endif
	/* Start timeout if bus state is unknown */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
    2638:	2210      	movs	r2, #16
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    263a:	88f0      	ldrh	r0, [r6, #6]
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
    263c:	8b69      	ldrh	r1, [r5, #26]
    263e:	4211      	tst	r1, r2
    2640:	d103      	bne.n	264a <i2c_master_setup+0x86>
		timeout_counter++;
    2642:	3401      	adds	r4, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    2644:	4284      	cmp	r4, r0
    2646:	d3f9      	bcc.n	263c <i2c_master_setup+0x78>
			/* Timeout, force bus state to idle */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
    2648:	836a      	strh	r2, [r5, #26]
  i2c_master_enable(&i2c_master_instance);
}
    264a:	b00e      	add	sp, #56	; 0x38
    264c:	bd70      	pop	{r4, r5, r6, pc}
    264e:	46c0      	nop			; (mov r8, r8)
    2650:	00000d48 	.word	0x00000d48
    2654:	20000210 	.word	0x20000210
    2658:	00002710 	.word	0x00002710
    265c:	42001000 	.word	0x42001000
    2660:	e000e100 	.word	0xe000e100

00002664 <main>:
#include "system_logic.h"

#include "adc_sample.h"


int main(void) {
    2664:	b510      	push	{r4, lr}
  startup_sys_configs();
    2666:	f7fe fb63 	bl	d30 <startup_sys_configs>
  while (true) {
    system_state();										// Get latest system_state
    266a:	f7fe fbc9 	bl	e00 <system_state>
    system_logic();										// Invoke System Logic
    266e:	f7fe fa37 	bl	ae0 <system_logic>
    2672:	e7fa      	b.n	266a <main+0x6>

00002674 <__gnu_thumb1_case_uqi>:
    2674:	b402      	push	{r1}
    2676:	4671      	mov	r1, lr
    2678:	0849      	lsrs	r1, r1, #1
    267a:	0049      	lsls	r1, r1, #1
    267c:	5c09      	ldrb	r1, [r1, r0]
    267e:	0049      	lsls	r1, r1, #1
    2680:	448e      	add	lr, r1
    2682:	bc02      	pop	{r1}
    2684:	4770      	bx	lr
    2686:	46c0      	nop			; (mov r8, r8)

00002688 <__udivsi3>:
    2688:	2200      	movs	r2, #0
    268a:	0843      	lsrs	r3, r0, #1
    268c:	428b      	cmp	r3, r1
    268e:	d374      	bcc.n	277a <__udivsi3+0xf2>
    2690:	0903      	lsrs	r3, r0, #4
    2692:	428b      	cmp	r3, r1
    2694:	d35f      	bcc.n	2756 <__udivsi3+0xce>
    2696:	0a03      	lsrs	r3, r0, #8
    2698:	428b      	cmp	r3, r1
    269a:	d344      	bcc.n	2726 <__udivsi3+0x9e>
    269c:	0b03      	lsrs	r3, r0, #12
    269e:	428b      	cmp	r3, r1
    26a0:	d328      	bcc.n	26f4 <__udivsi3+0x6c>
    26a2:	0c03      	lsrs	r3, r0, #16
    26a4:	428b      	cmp	r3, r1
    26a6:	d30d      	bcc.n	26c4 <__udivsi3+0x3c>
    26a8:	22ff      	movs	r2, #255	; 0xff
    26aa:	0209      	lsls	r1, r1, #8
    26ac:	ba12      	rev	r2, r2
    26ae:	0c03      	lsrs	r3, r0, #16
    26b0:	428b      	cmp	r3, r1
    26b2:	d302      	bcc.n	26ba <__udivsi3+0x32>
    26b4:	1212      	asrs	r2, r2, #8
    26b6:	0209      	lsls	r1, r1, #8
    26b8:	d065      	beq.n	2786 <__udivsi3+0xfe>
    26ba:	0b03      	lsrs	r3, r0, #12
    26bc:	428b      	cmp	r3, r1
    26be:	d319      	bcc.n	26f4 <__udivsi3+0x6c>
    26c0:	e000      	b.n	26c4 <__udivsi3+0x3c>
    26c2:	0a09      	lsrs	r1, r1, #8
    26c4:	0bc3      	lsrs	r3, r0, #15
    26c6:	428b      	cmp	r3, r1
    26c8:	d301      	bcc.n	26ce <__udivsi3+0x46>
    26ca:	03cb      	lsls	r3, r1, #15
    26cc:	1ac0      	subs	r0, r0, r3
    26ce:	4152      	adcs	r2, r2
    26d0:	0b83      	lsrs	r3, r0, #14
    26d2:	428b      	cmp	r3, r1
    26d4:	d301      	bcc.n	26da <__udivsi3+0x52>
    26d6:	038b      	lsls	r3, r1, #14
    26d8:	1ac0      	subs	r0, r0, r3
    26da:	4152      	adcs	r2, r2
    26dc:	0b43      	lsrs	r3, r0, #13
    26de:	428b      	cmp	r3, r1
    26e0:	d301      	bcc.n	26e6 <__udivsi3+0x5e>
    26e2:	034b      	lsls	r3, r1, #13
    26e4:	1ac0      	subs	r0, r0, r3
    26e6:	4152      	adcs	r2, r2
    26e8:	0b03      	lsrs	r3, r0, #12
    26ea:	428b      	cmp	r3, r1
    26ec:	d301      	bcc.n	26f2 <__udivsi3+0x6a>
    26ee:	030b      	lsls	r3, r1, #12
    26f0:	1ac0      	subs	r0, r0, r3
    26f2:	4152      	adcs	r2, r2
    26f4:	0ac3      	lsrs	r3, r0, #11
    26f6:	428b      	cmp	r3, r1
    26f8:	d301      	bcc.n	26fe <__udivsi3+0x76>
    26fa:	02cb      	lsls	r3, r1, #11
    26fc:	1ac0      	subs	r0, r0, r3
    26fe:	4152      	adcs	r2, r2
    2700:	0a83      	lsrs	r3, r0, #10
    2702:	428b      	cmp	r3, r1
    2704:	d301      	bcc.n	270a <__udivsi3+0x82>
    2706:	028b      	lsls	r3, r1, #10
    2708:	1ac0      	subs	r0, r0, r3
    270a:	4152      	adcs	r2, r2
    270c:	0a43      	lsrs	r3, r0, #9
    270e:	428b      	cmp	r3, r1
    2710:	d301      	bcc.n	2716 <__udivsi3+0x8e>
    2712:	024b      	lsls	r3, r1, #9
    2714:	1ac0      	subs	r0, r0, r3
    2716:	4152      	adcs	r2, r2
    2718:	0a03      	lsrs	r3, r0, #8
    271a:	428b      	cmp	r3, r1
    271c:	d301      	bcc.n	2722 <__udivsi3+0x9a>
    271e:	020b      	lsls	r3, r1, #8
    2720:	1ac0      	subs	r0, r0, r3
    2722:	4152      	adcs	r2, r2
    2724:	d2cd      	bcs.n	26c2 <__udivsi3+0x3a>
    2726:	09c3      	lsrs	r3, r0, #7
    2728:	428b      	cmp	r3, r1
    272a:	d301      	bcc.n	2730 <__udivsi3+0xa8>
    272c:	01cb      	lsls	r3, r1, #7
    272e:	1ac0      	subs	r0, r0, r3
    2730:	4152      	adcs	r2, r2
    2732:	0983      	lsrs	r3, r0, #6
    2734:	428b      	cmp	r3, r1
    2736:	d301      	bcc.n	273c <__udivsi3+0xb4>
    2738:	018b      	lsls	r3, r1, #6
    273a:	1ac0      	subs	r0, r0, r3
    273c:	4152      	adcs	r2, r2
    273e:	0943      	lsrs	r3, r0, #5
    2740:	428b      	cmp	r3, r1
    2742:	d301      	bcc.n	2748 <__udivsi3+0xc0>
    2744:	014b      	lsls	r3, r1, #5
    2746:	1ac0      	subs	r0, r0, r3
    2748:	4152      	adcs	r2, r2
    274a:	0903      	lsrs	r3, r0, #4
    274c:	428b      	cmp	r3, r1
    274e:	d301      	bcc.n	2754 <__udivsi3+0xcc>
    2750:	010b      	lsls	r3, r1, #4
    2752:	1ac0      	subs	r0, r0, r3
    2754:	4152      	adcs	r2, r2
    2756:	08c3      	lsrs	r3, r0, #3
    2758:	428b      	cmp	r3, r1
    275a:	d301      	bcc.n	2760 <__udivsi3+0xd8>
    275c:	00cb      	lsls	r3, r1, #3
    275e:	1ac0      	subs	r0, r0, r3
    2760:	4152      	adcs	r2, r2
    2762:	0883      	lsrs	r3, r0, #2
    2764:	428b      	cmp	r3, r1
    2766:	d301      	bcc.n	276c <__udivsi3+0xe4>
    2768:	008b      	lsls	r3, r1, #2
    276a:	1ac0      	subs	r0, r0, r3
    276c:	4152      	adcs	r2, r2
    276e:	0843      	lsrs	r3, r0, #1
    2770:	428b      	cmp	r3, r1
    2772:	d301      	bcc.n	2778 <__udivsi3+0xf0>
    2774:	004b      	lsls	r3, r1, #1
    2776:	1ac0      	subs	r0, r0, r3
    2778:	4152      	adcs	r2, r2
    277a:	1a41      	subs	r1, r0, r1
    277c:	d200      	bcs.n	2780 <__udivsi3+0xf8>
    277e:	4601      	mov	r1, r0
    2780:	4152      	adcs	r2, r2
    2782:	4610      	mov	r0, r2
    2784:	4770      	bx	lr
    2786:	e7ff      	b.n	2788 <__udivsi3+0x100>
    2788:	b501      	push	{r0, lr}
    278a:	2000      	movs	r0, #0
    278c:	f000 f806 	bl	279c <__aeabi_idiv0>
    2790:	bd02      	pop	{r1, pc}
    2792:	46c0      	nop			; (mov r8, r8)

00002794 <__aeabi_uidivmod>:
    2794:	2900      	cmp	r1, #0
    2796:	d0f7      	beq.n	2788 <__udivsi3+0x100>
    2798:	e776      	b.n	2688 <__udivsi3>
    279a:	4770      	bx	lr

0000279c <__aeabi_idiv0>:
    279c:	4770      	bx	lr
    279e:	46c0      	nop			; (mov r8, r8)

000027a0 <__libc_init_array>:
    27a0:	b570      	push	{r4, r5, r6, lr}
    27a2:	2600      	movs	r6, #0
    27a4:	4d0c      	ldr	r5, [pc, #48]	; (27d8 <__libc_init_array+0x38>)
    27a6:	4c0d      	ldr	r4, [pc, #52]	; (27dc <__libc_init_array+0x3c>)
    27a8:	1b64      	subs	r4, r4, r5
    27aa:	10a4      	asrs	r4, r4, #2
    27ac:	42a6      	cmp	r6, r4
    27ae:	d109      	bne.n	27c4 <__libc_init_array+0x24>
    27b0:	2600      	movs	r6, #0
    27b2:	f000 f87f 	bl	28b4 <_init>
    27b6:	4d0a      	ldr	r5, [pc, #40]	; (27e0 <__libc_init_array+0x40>)
    27b8:	4c0a      	ldr	r4, [pc, #40]	; (27e4 <__libc_init_array+0x44>)
    27ba:	1b64      	subs	r4, r4, r5
    27bc:	10a4      	asrs	r4, r4, #2
    27be:	42a6      	cmp	r6, r4
    27c0:	d105      	bne.n	27ce <__libc_init_array+0x2e>
    27c2:	bd70      	pop	{r4, r5, r6, pc}
    27c4:	00b3      	lsls	r3, r6, #2
    27c6:	58eb      	ldr	r3, [r5, r3]
    27c8:	4798      	blx	r3
    27ca:	3601      	adds	r6, #1
    27cc:	e7ee      	b.n	27ac <__libc_init_array+0xc>
    27ce:	00b3      	lsls	r3, r6, #2
    27d0:	58eb      	ldr	r3, [r5, r3]
    27d2:	4798      	blx	r3
    27d4:	3601      	adds	r6, #1
    27d6:	e7f2      	b.n	27be <__libc_init_array+0x1e>
    27d8:	000028c0 	.word	0x000028c0
    27dc:	000028c0 	.word	0x000028c0
    27e0:	000028c0 	.word	0x000028c0
    27e4:	000028c4 	.word	0x000028c4

000027e8 <memcpy>:
    27e8:	2300      	movs	r3, #0
    27ea:	b510      	push	{r4, lr}
    27ec:	429a      	cmp	r2, r3
    27ee:	d100      	bne.n	27f2 <memcpy+0xa>
    27f0:	bd10      	pop	{r4, pc}
    27f2:	5ccc      	ldrb	r4, [r1, r3]
    27f4:	54c4      	strb	r4, [r0, r3]
    27f6:	3301      	adds	r3, #1
    27f8:	e7f8      	b.n	27ec <memcpy+0x4>
    27fa:	0000      	movs	r0, r0
    27fc:	00000002 	.word	0x00000002
    2800:	00000003 	.word	0x00000003
    2804:	00000004 	.word	0x00000004
    2808:	00000005 	.word	0x00000005
    280c:	00000006 	.word	0x00000006
    2810:	00000007 	.word	0x00000007
    2814:	0000000e 	.word	0x0000000e
    2818:	0000000f 	.word	0x0000000f
    281c:	0000000a 	.word	0x0000000a
    2820:	0000000b 	.word	0x0000000b
    2824:	0000ffff 	.word	0x0000ffff
    2828:	0000ffff 	.word	0x0000ffff
    282c:	0000ffff 	.word	0x0000ffff
    2830:	0000ffff 	.word	0x0000ffff
    2834:	0000ffff 	.word	0x0000ffff
    2838:	0000ffff 	.word	0x0000ffff
    283c:	0000ffff 	.word	0x0000ffff
    2840:	0000ffff 	.word	0x0000ffff
    2844:	0000ffff 	.word	0x0000ffff
    2848:	0000ffff 	.word	0x0000ffff

0000284c <tc_interrupt_vectors.12581>:
    284c:	00000e0d 42000800 42000c00 42001000     .......B...B...B

0000285c <_tcc_intflag>:
    285c:	00000001 00000002 00000004 00000008     ................
    286c:	00001000 00002000 00004000 00008000     ..... ...@......
    287c:	00010000 00020000 00040000 00080000     ................
    288c:	01040404 05041004 15041404 25010804     ...............%
    289c:	1c02ef05 82010204 05063202 03082004     .........2... ..
    28ac:	15080908 00001902                       ........

000028b4 <_init>:
    28b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    28b6:	46c0      	nop			; (mov r8, r8)
    28b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    28ba:	bc08      	pop	{r3}
    28bc:	469e      	mov	lr, r3
    28be:	4770      	bx	lr

000028c0 <__init_array_start>:
    28c0:	000000b5 	.word	0x000000b5

000028c4 <_fini>:
    28c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    28c6:	46c0      	nop			; (mov r8, r8)
    28c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    28ca:	bc08      	pop	{r3}
    28cc:	469e      	mov	lr, r3
    28ce:	4770      	bx	lr

000028d0 <__fini_array_start>:
    28d0:	0000008d 	.word	0x0000008d
